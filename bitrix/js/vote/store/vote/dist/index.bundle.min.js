this.BX=this.BX||{};this.BX.Vote=this.BX.Vote||{};(function(e,t,o){"use strict";const i=[{fieldName:"voteId",targetFieldName:"id",checkFunction:t.Type.isNumber},{fieldName:"questions",targetFieldName:"questions",checkFunction:t.Type.isObject,formatFunction:e=>Object.keys(e).map((e=>o.convertToNumber(e)))},{fieldName:"anonymity",targetFieldName:"isAnonymous",checkFunction:t.Type.isNumber,formatFunction:e=>e===2},{fieldName:"canEdit",targetFieldName:"canEdit",checkFunction:t.Type.isBoolean},{fieldName:"isVoted",targetFieldName:"isVoted",checkFunction:t.Type.isBoolean},{fieldName:"canVote",targetFieldName:"canVote",checkFunction:t.Type.isBoolean},{fieldName:"canRevote",targetFieldName:"canRevoke",checkFunction:t.Type.isBoolean},{fieldName:"isFinished",targetFieldName:"isCompleted",checkFunction:t.Type.isBoolean},{fieldName:"resultUrl",targetFieldName:"resultUrl",checkFunction:t.Type.isString}];const n=[{fieldName:"id",targetFieldName:"id",checkFunction:t.Type.isString,formatFunction:o.convertToNumber},{fieldName:"answers",targetFieldName:"answers",checkFunction:t.Type.isObject,formatFunction:e=>Object.keys(e).map((e=>o.convertToNumber(e)))},{fieldName:"question",targetFieldName:"text",checkFunction:t.Type.isString},{fieldName:"fieldType",targetFieldName:"isMultiple",checkFunction:t.Type.isString,formatFunction:e=>e==="1"},{fieldName:"counter",targetFieldName:"totalCounter",checkFunction:o.isNumberOrString,formatFunction:o.convertToNumber}];const s=[{fieldName:"id",targetFieldName:"id",checkFunction:t.Type.isString,formatFunction:o.convertToNumber},{fieldName:"message",targetFieldName:"text",checkFunction:t.Type.isString},{fieldName:"counter",targetFieldName:"counter",checkFunction:o.isNumberOrString,formatFunction:o.convertToNumber},{fieldName:"percent",targetFieldName:"percent",checkFunction:t.Type.isNumber}];const r={state:{currentUserVotes:{},voteCollection:{},questionCollection:{},answerCollection:{}},getVoteState(){return{id:"",questions:[],isAnonymous:false,isVoted:false,isLoading:false,canEdit:false,canVote:false,canRevoke:false,isCompleted:false,resultUrl:""}},getQuestionState(){return{id:"",text:"",answers:[],isMultiple:false,totalCounter:0}},getAnswerState(){return{id:"",text:"",counter:0,percent:0}},getters:{hasCurrentUserVote:e=>(t,o)=>e.currentUserVotes[t]&&e.currentUserVotes[t].includes(o),getCurrentUserVotes:e=>e.currentUserVotes,getVoteCollection:e=>e.voteCollection,getQuestionCollection:e=>e.questionCollection,getAnswerCollection:e=>e.answerCollection},actions:{setCurrentUserVotes:(e,t)=>{const o={};Object.entries(t).forEach((([e,t])=>{o[e]=Object.keys(t).map((e=>Number(e)))}));e.commit("setCurrentUserVotes",o)},clearVotes:(e,{questionId:t,voteId:o})=>{if(e.state.currentUserVotes[t]){e.commit("clearVotes",{questionId:t,voteId:o})}},resetUserVoted:(e,{voteId:t})=>{if(e.state.voteCollection[t]){e.commit("resetUserVoted",{voteId:t})}},addVote:(e,t)=>{e.commit("addVote",{...r.getVoteState(),...r.formatVoteFields(t)})},addQuestion:(e,t)=>{const o=Object.values(t)[0];e.commit("addQuestion",{...r.getQuestionState(),...r.formatQuestionFields(o)})},updateQuestionTotalCounter:(e,t)=>{if(!e.state.questionCollection[t.questionId]){return}e.commit("updateQuestionTotalCounter",t)},addAnswer:(e,t)=>{const o=Object.values(t)[0];Object.values(o.ANSWERS).forEach((t=>{e.commit("addAnswer",{...r.getAnswerState(),...r.formatAnswerFields(t)})}))},updateAnswer:(e,t)=>{e.commit("updateAnswer",t)},updateCurrentUserVotes:(e,t)=>{e.commit("updateCurrentUserVotes",t)},setUserVoted:(e,t)=>{e.commit("setUserVoted",t)},setVoteCompleted:(e,t)=>{e.commit("setVoteCompleted",t)},resetVoteCompleted:(e,t)=>{e.commit("resetVoteCompleted",t)},setLoadingStatus:(e,t)=>{e.commit("setLoadingStatus",t)}},mutations:{setCurrentUserVotes:(e,t)=>{Object.entries(t).forEach((([t,o])=>{e.currentUserVotes[t]=o}))},updateCurrentUserVotes:(e,{questionId:t,answerIds:o})=>{e.currentUserVotes[t]=o},addVote:(e,t)=>{e.voteCollection[t.id]=t},addQuestion:(e,t)=>{e.questionCollection[t.id]=t},updateQuestionTotalCounter:(e,{questionId:t,totalCounter:o})=>{e.questionCollection[t].totalCounter=o},addAnswer:(e,t)=>{e.answerCollection[t.id]=t},updateAnswer:(e,t)=>{if(e.answerCollection[t.answerId]){e.answerCollection[t.answerId].percent=t.percent;e.answerCollection[t.answerId].counter=t.counter}},clearVotes:(e,t)=>{e.currentUserVotes[t.questionId]=[]},setUserVoted:(e,t)=>{e.voteCollection[t.voteId].isVoted=true},resetUserVoted:(e,t)=>{e.voteCollection[t.voteId].isVoted=false},setVoteCompleted:(e,t)=>{e.voteCollection[t.voteId].isCompleted=true},resetVoteCompleted:(e,t)=>{e.voteCollection[t.voteId].isCompleted=false},setLoadingStatus:(e,t)=>{const{voteId:o,isLoading:i}=t;if(e.voteCollection[o]){e.voteCollection[o].isLoading=i}}},formatVoteFields(e){return o.formatFieldsWithConfig(e,i)},formatQuestionFields(e){return o.formatFieldsWithConfig(e,n)},formatAnswerFields(e){return o.formatFieldsWithConfig(e,s)}};e.VoteModel=r})(this.BX.Vote.Store=this.BX.Vote.Store||{},BX,BX.Messenger.v2.Model);
//# sourceMappingURL=index.bundle.map.js