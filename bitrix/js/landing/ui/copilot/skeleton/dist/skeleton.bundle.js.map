{"version":3,"file":"skeleton.bundle.js","sources":["../src/helpers/is-element-visible.js","../src/skeleton-block.js","../src/helpers/wait.js","../src/skeleton-icon-block.js","../src/helpers/hex-to-rgb.js","../src/helpers/is-text-node-in-button.js","../src/skeleton-text-block.js","../src/skeleton.js"],"sourcesContent":["import { Dom } from 'main.core';\n\nexport const isElementVisible = (element: HTMLElement) => {\n\tlet current = element;\n\n\twhile (current)\n\t{\n\t\tconst style = window.getComputedStyle(current);\n\n\t\tif (style.display === 'none'\n\t\t\t|| style.visibility === 'hidden'\n\t\t\t|| style.opacity === '0'\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tcurrent = current.parentElement;\n\t}\n\n\tconst rect = Dom.getPosition(element);\n\n\treturn rect?.width > 1 && rect?.height > 1;\n};\n","export class SkeletonBlock\n{\n\tasync show()\n\t{\n\t\tthrow new Error('You must implement the show method!');\n\t}\n\n\thide()\n\t{\n\t\tthrow new Error('You must implement the hide method!');\n\t}\n}\n","export async function wait(ms: number): Promise<void>\n{\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve();\n\t\t}, ms);\n\t});\n}\n","import { Dom } from 'main.core';\nimport { SkeletonBlock } from './skeleton-block';\nimport { wait } from './helpers/wait';\n\nimport './css/skeleton-icon-block.css';\n\nexport type SkeletonIconBlockOptions = {\n\ticonElement: HTMLElement;\n};\n\nexport class SkeletonIconBlock extends SkeletonBlock\n{\n\t#iconElement: HTMLElement | null = null;\n\t#iconFontawesomeClassNames: string = '';\n\t#iconStubClassNames: string[] = ['fa', 'fas', 'fa-stars'];\n\n\tconstructor(options: SkeletonIconBlockOptions) {\n\t\tsuper(options);\n\n\t\tthis.#iconElement = options.iconElement;\n\t\tthis.#iconFontawesomeClassNames = this.#getFontawesomeClassNamesFromIcon(this.#iconElement);\n\t}\n\n\tasync show(): void\n\t{\n\t\tawait this.#replaceStubWithIcon();\n\t}\n\n\thide(): void\n\t{\n\t\tthis.#removeClassNames(this.#iconElement, this.#iconFontawesomeClassNames);\n\t\tthis.#addClassNames(this.#iconElement, this.#iconStubClassNames);\n\t}\n\n\tasync #replaceStubWithIcon(): void\n\t{\n\t\tDom.style(this.#iconElement, {\n\t\t\ttransition: '0.2s ease-in-out opacity',\n\t\t\topacity: 0,\n\t\t});\n\n\t\tawait wait(200);\n\n\t\tthis.#removeClassNames(this.#iconElement, this.#iconStubClassNames);\n\t\tthis.#addClassNames(this.#iconElement, this.#iconFontawesomeClassNames);\n\n\t\tDom.style(this.#iconElement, {\n\t\t\topacity: 1,\n\t\t});\n\n\t\tawait wait(200);\n\n\t\tDom.style(this.#iconElement, {\n\t\t\ttransition: null,\n\t\t\topacity: null,\n\t\t});\n\t}\n\n\t#getFontawesomeClassNamesFromIcon(iconElement: HTMLElement): ?string[]\n\t{\n\t\treturn [...iconElement.classList].filter((classname: string) => classname.startsWith('fa'));\n\t}\n\n\t#addClassNames(element: HTMLElement, classNames: string[])\n\t{\n\t\tclassNames.forEach((className: string) => {\n\t\t\tDom.addClass(element, className);\n\t\t});\n\t}\n\n\t#removeClassNames(element: HTMLElement, classNames: string[])\n\t{\n\t\tclassNames.forEach((className: string) => {\n\t\t\tDom.removeClass(element, className);\n\t\t});\n\t}\n}\n","export const hexToRgb = (hex: string) => {\n\tconst result = /^#?([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/i.exec(hex);\n\n\treturn result ? {\n\t\tr: parseInt(result[1], 16),\n\t\tg: parseInt(result[2], 16),\n\t\tb: parseInt(result[3], 16),\n\t} : null;\n};\n","import { Dom } from 'main.core';\n\nexport const isTextNodeInButton = (textNode: Text) => {\n\treturn Dom.hasClass(textNode?.parentElement, 'btn');\n};\n","import { bind, bindOnce, unbind, Dom, Tag } from 'main.core';\nimport { hexToRgb } from './helpers/hex-to-rgb';\nimport { wait } from './helpers/wait';\nimport { isTextNodeInButton } from './helpers/is-text-node-in-button';\n\nimport './css/skeleton-text-block.css';\nimport { SkeletonBlock } from './skeleton-block';\n\nexport type SkeletonTextBlockOptions = {\n\ttextNode: Text;\n};\n\nexport class SkeletonTextBlock extends SkeletonBlock\n{\n\t#textNode: Text = null;\n\t#textNodeContainer: HTMLElement = null;\n\t#text: string = '';\n\t#rectangles: HTMLElement[] = [];\n\n\t#windowResizeHandler: Function;\n\n\tconstructor(options: SkeletonTextBlockOptions)\n\t{\n\t\tsuper(options);\n\n\t\tthis.#textNode = options.textNode;\n\t\tthis.#textNodeContainer = this.#textNode.parentElement;\n\t\tthis.#text = options.textNode.data;\n\n\t\tthis.#windowResizeHandler = this.#updateRectanglesPosition.bind(this);\n\t}\n\n\thide(): void\n\t{\n\t\tthis.#fixWidthAndHeightForTextNodeContainer();\n\t\tif (this.#isShowRectanglesOnText())\n\t\t{\n\t\t\tthis.#showRectanglesOnText();\n\t\t}\n\t\tbind(window, 'resize', this.#windowResizeHandler);\n\n\t\t// the space is need for inline element's height and element with :before,:after\n\t\tthis.#textNodeContainer.innerText = ' ';\n\t}\n\n\tasync show(): void\n\t{\n\t\tif (this.#isShowRectanglesOnText())\n\t\t{\n\t\t\tawait this.#hideAllRectangles();\n\t\t}\n\n\t\tDom.style(this.#textNodeContainer, {\n\t\t\twhiteSpace: null,\n\t\t});\n\n\t\tawait this.#addTextWithAnimation();\n\n\t\tDom.style(this.#textNodeContainer, {\n\t\t\tdisplay: null,\n\t\t\twidth: null,\n\t\t\theight: null,\n\t\t});\n\n\t\tunbind(window, 'resize', this.#windowResizeHandler);\n\t}\n\n\t#fixWidthAndHeightForTextNodeContainer(): void\n\t{\n\t\tconst textNodeContainerRect = Dom.getPosition(this.#textNodeContainer);\n\n\t\tDom.style(this.#textNodeContainer, {\n\t\t\twhiteSpace: 'break-spaces',\n\t\t\twidth: `${textNodeContainerRect.width}px`,\n\t\t\theight: `${textNodeContainerRect.height}px`,\n\t\t});\n\t}\n\n\tasync #addTextWithAnimation(): Promise<void>\n\t{\n\t\tif (this.#text.length > 30)\n\t\t{\n\t\t\tawait this.#addTextWithWordAnimation();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tawait this.#addTextWithLetterAnimation();\n\t\t}\n\t}\n\n\tasync #addTextWithWordAnimation(): Promise<void>\n\t{\n\t\tconst span = this.#renderAnimatedTextElement();\n\n\t\tthis.#textNodeContainer.innerText = '';\n\t\tDom.append(span, this.#textNodeContainer);\n\n\t\tconst words = this.#text.split(' ');\n\n\t\tspan.innerText = words[0];\n\t\tfor (const word of words.slice(1))\n\t\t{\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tawait wait(50);\n\t\t\tspan.innerText = `${span.innerText} ${word}`;\n\t\t}\n\n\t\tDom.removeClass(span, 'landing__copilot-skeleton_animated-text');\n\t\tthis.#textNodeContainer.innerText = span.innerText;\n\t}\n\n\tasync #addTextWithLetterAnimation(): Promise<void>\n\t{\n\t\tconst span = this.#renderAnimatedTextElement();\n\n\t\tthis.#textNodeContainer.innerText = '';\n\t\tDom.append(span, this.#textNodeContainer);\n\n\t\tlet spaceWithLetter = '';\n\n\t\tfor (const letter of this.#text)\n\t\t{\n\t\t\tif (letter === ' ')\n\t\t\t{\n\t\t\t\tspaceWithLetter += letter;\n\t\t\t}\n\t\t\telse if (spaceWithLetter.length > 0)\n\t\t\t{\n\t\t\t\tspan.innerText += spaceWithLetter + letter;\n\t\t\t\tspaceWithLetter = '';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tspan.innerText += letter;\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tawait wait(50);\n\t\t}\n\n\t\tDom.removeClass(span, 'landing__copilot-skeleton_animated-text');\n\t\tthis.#textNodeContainer.innerText = span.innerText;\n\t}\n\n\t#renderAnimatedTextElement(): HTMLElement\n\t{\n\t\tconst textBlockLineHeight = parseFloat(getComputedStyle(this.#textNodeContainer).lineHeight, 10) || 0;\n\t\tconst textBlockFontSize = parseFloat(getComputedStyle(this.#textNodeContainer).fontSize, 10) || 24;\n\t\tconst labelSize = textBlockFontSize > 24 ? 24 : textBlockFontSize;\n\t\tconst copilotAnimationLabelBottomIndent = (textBlockLineHeight - labelSize) / 2;\n\n\t\tconst span = Tag.render`<span class=\"landing__copilot-skeleton_animated-text\"></span>`;\n\n\t\tDom.style(span, {\n\t\t\t'--copilot-label-bottom-indent': `${copilotAnimationLabelBottomIndent}px`,\n\t\t\t'--copilot-label-size': `${labelSize}px`,\n\t\t\tdisplay: 'inline-block',\n\t\t\tminHeight: `${textBlockLineHeight}px`,\n\t\t});\n\n\t\tspan.innerText = '';\n\n\t\treturn span;\n\t}\n\n\t#hideAllRectangles(): Promise<void>\n\t{\n\t\tconst promises = this.#rectangles.map(\n\t\t\t(rectangle) => this.#hideRectangleWithAnimation(rectangle),\n\t\t);\n\n\t\treturn Promise.all(promises);\n\t}\n\n\tasync #hideRectangleWithAnimation(rectangle: HTMLElement): Promise<void>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tDom.addClass(rectangle, '--hiding');\n\n\t\t\tbindOnce(rectangle, 'transitionend', () => {\n\t\t\t\trectangle.remove();\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\t#isShowRectanglesOnText(): boolean\n\t{\n\t\treturn isTextNodeInButton(this.#textNode) === false;\n\t}\n\n\t#showRectanglesOnText(): void\n\t{\n\t\tconst rectangles = this.#createRectanglesFromRects(this.#getTextNodeRects());\n\n\t\trectangles.forEach((rectangle) => {\n\t\t\tDom.append(rectangle, this.#textNodeContainer.ownerDocument.defaultView.document.body);\n\t\t});\n\t}\n\n\t#getTextNodeRects(): DOMRect[]\n\t{\n\t\tconst range = this.#textNodeContainer.ownerDocument.defaultView.document.createRange();\n\t\trange.selectNodeContents(this.#textNode);\n\t\tconst rects = range.getClientRects();\n\n\t\treturn [...rects].map((rect: DOMRect) => {\n\t\t\tconst scrollTop = window.pageYOffset\n\t\t\t\t|| this.#textNodeContainer.ownerDocument.defaultView.document.documentElement.scrollTop;\n\n\t\t\tconst heightReductionPercent = 0.5;\n\t\t\tconst heightReduction = parseInt(rect.height * heightReductionPercent, 10);\n\n\t\t\treturn new DOMRect(\n\t\t\t\trect.left,\n\t\t\t\trect.top + scrollTop + (heightReduction / 2),\n\t\t\t\trect.width,\n\t\t\t\trect.height - heightReduction,\n\t\t\t);\n\t\t});\n\t}\n\n\t#createRectanglesFromRects(rects: DOMRect[]): HTMLElement[]\n\t{\n\t\tthis.#rectangles = rects.map((rect: DOMRect) => {\n\t\t\tconst rectangle = Tag.render`<div class=\"landing__copilot-skeleton-rectangle --showing\"></div>`;\n\n\t\t\tDom.style(rectangle, {\n\t\t\t\tbackgroundColor: this.#getTextNodeColor(),\n\t\t\t});\n\n\t\t\tthis.#updateRectanglePosition(rectangle, rect);\n\n\t\t\treturn rectangle;\n\t\t});\n\n\t\treturn this.#rectangles;\n\t}\n\n\t#updateRectanglesPosition(): void\n\t{\n\t\tthis.#getTextNodeRects().forEach((rect: DOMRect, index) => {\n\t\t\tconst rectangle = this.#rectangles[index];\n\n\t\t\tthis.#updateRectanglePosition(rectangle, rect);\n\t\t});\n\t}\n\n\t#updateRectanglePosition(rectangle: HTMLElement, rect: DOMRect): void\n\t{\n\t\tconst documentWidth = this.#textNodeContainer.ownerDocument.defaultView.document.documentElement.clientWidth;\n\n\t\tconst overWidth = 5;\n\t\tconst overHeight = 0;\n\t\tconst rectWidth = rect.width + overWidth;\n\t\tconst rectHeight = rect.height + overHeight;\n\t\tconst rectLeft = rect.left - overWidth / 2;\n\t\tconst rectTop = rect.top - overHeight / 2;\n\t\tconst rectRight = documentWidth - rectLeft - rectWidth;\n\n\t\tDom.style(rectangle, {\n\t\t\ttop: `${rectTop}px`,\n\t\t\tleft: `${rectLeft}px`,\n\t\t\tright: `${rectRight}px`,\n\t\t\twidth: `${rectWidth}px`,\n\t\t\theight: `${rectHeight}px`,\n\t\t});\n\t}\n\n\t#getTextNodeColor(): string\n\t{\n\t\tconst opacity = 0.25;\n\t\tconst textNodeContainerElement = this.#textNode.parentElement;\n\n\t\tconst colorString = getComputedStyle(textNodeContainerElement).color;\n\n\t\tif (colorString.includes('rgb'))\n\t\t{\n\t\t\tconst rgba = colorString.match(/[\\d.]+/g);\n\n\t\t\tconst [r, g, b] = rgba;\n\n\t\t\treturn `rgba(${r}, ${g}, ${b}, ${opacity})`;\n\t\t}\n\n\t\tconst { r, g, b } = hexToRgb(colorString);\n\n\t\treturn `rgba(${r},${g},${b}, ${opacity})`;\n\t}\n}\n","import { Dom, Type } from 'main.core';\nimport { isElementVisible } from './helpers/is-element-visible';\nimport type { SkeletonBlock } from './skeleton-block';\nimport { SkeletonIconBlock } from './skeleton-icon-block';\nimport { SkeletonTextBlock } from './skeleton-text-block';\n\nexport class Skeleton\n{\n\tstatic #skeletons = new Map();\n\tstatic #skeletonBlocks: Map<string, SkeletonBlock[]> = new Map();\n\n\tstatic initOnBlock(blockId: string, target: HTMLElement): void\n\t{\n\t\tthis.#skeletons.set(blockId, target);\n\t\tthis.#skeletonBlocks.set(blockId, this.#getSkeletonBlocks(blockId));\n\t\tthis.#hideSkeletonBlocks(blockId);\n\t}\n\n\tstatic async removeSkeletonFromBlock(blockId: string): void\n\t{\n\t\tconst skeletonBlocks = this.#skeletonBlocks.get(blockId);\n\t\tfor (const block: SkeletonBlock of skeletonBlocks)\n\t\t{\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tawait block.show();\n\t\t}\n\t}\n\n\tstatic #hideSkeletonBlocks(blockId: string)\n\t{\n\t\tconst skeletonBlocks = this.#skeletonBlocks.get(blockId);\n\n\t\tskeletonBlocks.forEach((skeletonBlock) => {\n\t\t\tskeletonBlock.hide();\n\t\t});\n\t}\n\n\tstatic #getSkeletonBlocks(blockId: string): SkeletonBlock[]\n\t{\n\t\tconst target = this.#skeletons.get(blockId);\n\t\tconst skeletonBlocks: SkeletonBlock[] = [];\n\n\t\tconst treeWalker = document.createTreeWalker(target, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, null, false);\n\n\t\twhile (treeWalker.nextNode())\n\t\t{\n\t\t\tconst currentNode: Node = treeWalker.currentNode;\n\n\t\t\tif (currentNode.nodeType === Node.TEXT_NODE && currentNode.data.trim() !== '' && isElementVisible(currentNode.parentElement))\n\t\t\t{\n\t\t\t\tconst parentElement = currentNode.parentElement;\n\n\t\t\t\tif (Dom.getPosition(parentElement).left <= window.innerWidth)\n\t\t\t\t{\n\t\t\t\t\tcurrentNode.data = currentNode.data.trim();\n\t\t\t\t\tskeletonBlocks.push(new SkeletonTextBlock({ textNode: currentNode }));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (\n\t\t\t\tcurrentNode.nodeType === Node.ELEMENT_NODE\n\t\t\t\t&& Type.isStringFilled(currentNode.className)\n\t\t\t\t&& currentNode.className?.split(' ').some((className) => className.startsWith('fa-'))\n\t\t\t)\n\t\t\t{\n\t\t\t\tskeletonBlocks.push(new SkeletonIconBlock({ iconElement: currentNode }));\n\t\t\t}\n\t\t}\n\n\t\treturn skeletonBlocks;\n\t}\n}\n"],"names":["isElementVisible","element","current","style","window","getComputedStyle","display","visibility","opacity","parentElement","rect","Dom","getPosition","width","height","SkeletonBlock","show","Error","hide","wait","ms","Promise","resolve","setTimeout","SkeletonIconBlock","constructor","options","iconElement","transition","classList","filter","classname","startsWith","classNames","forEach","className","addClass","removeClass","hexToRgb","hex","result","exec","r","parseInt","g","b","isTextNodeInButton","textNode","hasClass","SkeletonTextBlock","data","bind","innerText","whiteSpace","unbind","textNodeContainerRect","length","span","append","words","split","word","slice","spaceWithLetter","letter","textBlockLineHeight","parseFloat","lineHeight","textBlockFontSize","fontSize","labelSize","copilotAnimationLabelBottomIndent","Tag","render","minHeight","promises","map","rectangle","all","bindOnce","remove","rectangles","ownerDocument","defaultView","document","body","range","createRange","selectNodeContents","rects","getClientRects","scrollTop","pageYOffset","documentElement","heightReductionPercent","heightReduction","DOMRect","left","top","backgroundColor","index","documentWidth","clientWidth","overWidth","overHeight","rectWidth","rectHeight","rectLeft","rectTop","rectRight","right","textNodeContainerElement","colorString","color","includes","rgba","match","Skeleton","initOnBlock","blockId","target","set","removeSkeletonFromBlock","skeletonBlocks","get","block","skeletonBlock","treeWalker","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","nextNode","currentNode","nodeType","Node","TEXT_NODE","trim","innerWidth","push","ELEMENT_NODE","Type","isStringFilled","some","Map"],"mappings":"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"}