this.BX=this.BX||{};this.BX.UI=this.BX.UI||{};(function(t,e,i,n,s,o,r,l,a,u,d){"use strict";const p={directives:{drop:{beforeMount(t,e,n){if(e.value===false){return}function s(){e.instance.dragOver=true;t.classList.add("--drag-over")}function o(){e.instance.dragOver=false;t.classList.remove("--drag-over")}let r=null;a.Event.bind(t,"dragenter",(t=>{i.hasDataTransferOnlyFiles(t.dataTransfer,false).then((e=>{if(e){t.preventDefault();t.stopPropagation();r=t.target;s()}})).catch((()=>{}))}));a.Event.bind(t,"dragleave",(t=>{t.preventDefault();t.stopPropagation();if(r===t.target){o()}}));a.Event.bind(t,"drop",(t=>{o()}))},unmounted(t,e,i){if(e.value===false){return}e.instance.dragOver=false;a.Event.unbindAll(t,"dragenter");a.Event.unbindAll(t,"dragleave");a.Event.unbindAll(t,"drop")}}},data(){return{dragOver:false}}};const m={inject:["widgetOptions","emitter"],data:()=>({selected:false}),methods:{handleSettingsClick(){this.emitter.emit("SettingsButton:onClick",{container:this.$refs["container"],button:this})},getContainer(){return this.$refs["container"]},select(){this.selected=true},deselect(){this.selected=false}},template:`\n\t\t<div \n\t\t\tclass="ui-tile-uploader-settings" \n\t\t\t:class="{ '--selected': this.selected }" \n\t\t\t@click="handleSettingsClick" \n\t\t\tref="container"\n\t\t></div>\n\t`};const c={inject:["uploader","widgetOptions","emitter"],components:{SettingsButton:m},mounted(){this.uploader.assignBrowse(this.$refs.dropArea)},computed:{dropLabel(){return a.Loc.getMessage("TILE_UPLOADER_DROP_FILES_HERE")}},methods:{handleSettingsClick(){this.emitter.emit("onSettingsButtonClick",{button:this.$refs["ui-tile-uploader-settings"]})}},template:`\n\t\t<div class="ui-tile-uploader-drop-area">\n\t\t\t<div class="ui-tile-uploader-drop-box">\n\t\t\t\t<label class="ui-tile-uploader-drop-label" ref="dropArea">{{dropLabel}}</label>\n\t\t\t\t<SettingsButton v-if="widgetOptions.showSettingsButton" />\n\t\t\t</div>\n\t\t</div>\n\t`};const h={props:{error:{type:[Object,String]},alignArrow:{type:Boolean,default:true},popupOptions:{type:Object,default(){return{}}}},emits:["onDestroy"],watch:{error(t){if(this.errorPopup){this.errorPopup.destroy()}this.errorPopup=this.createPopup(t);this.errorPopup.show()}},created(){this.errorPopup=null},mounted(){if(this.error){this.errorPopup=this.createPopup(this.error);this.errorPopup.show()}},beforeUnmount(){if(this.errorPopup){this.errorPopup.destroy();this.errorPopup=null}},methods:{createContent(t){if(a.Type.isStringFilled(t)){return t}else if(a.Type.isObject(t)){return t.message+"<br>"+t.description}return""},createPopup(t){const e=this.createContent(t);let i;if(this.alignArrow&&a.Type.isElementNode(this.popupOptions.bindElement)){const n=this.popupOptions.bindElement;const s=n.offsetWidth;i={cacheable:false,animation:"fading-slide",content:e,events:{onDestroy:()=>{this.$emit("onDestroy",t);this.errorPopup=null},onShow:function(t){const e=t.getTarget();e.getPopupContainer().style.display="block";const i=e.getPopupContainer().offsetWidth;const n=s/2-i/2;const r=o.Popup.getOption("angleLeftOffset")-o.Popup.getOption("angleMinTop");e.setAngle({offset:i/2-r});e.setOffset({offsetLeft:n+o.Popup.getOption("angleLeftOffset")})}}}}else{i={cacheable:false,animation:"fading-slide",content:e,events:{onDestroy:()=>{this.$emit("onDestroy",t);this.errorPopup=null}}}}const n=Object.assign({},i,this.popupOptions);return new o.Popup(n)}},template:"<span></span>"};const f={props:{name:{type:String},type:{type:String},color:{type:String},size:{type:Number,default:36},align:{type:String,default:"center"}},mounted(){this.render()},updated(){this.render()},methods:{render(){this.$el.innerHTML="";const t=new s.FileIcon({name:this.name,fileType:this.type,color:this.color,size:this.size,align:this.align});t.renderTo(this.$el)}},template:"<span></span>"};const g={name:"InsertIntoTextButton",components:{BIcon:u.BIcon},inject:["emitter"],props:{item:{type:Object,default:()=>{}}},setup(){return{Outline:d.Outline}},computed:{isInserted(){var t;return((t=this.item.customData)==null?void 0:t.tileSelected)===true}},methods:{handleClick(){this.emitter.emit("onInsertIntoText",{item:this.item})},handleMouseEnter(t){if(this.hintPopup){return}const e=t.currentTarget;const i=e.offsetWidth;this.hintPopup=new o.Popup({content:a.Loc.getMessage("TILE_UPLOADER_INSERT_INTO_THE_TEXT"),cacheable:false,animation:"fading-slide",bindElement:e,offsetTop:0,bindOptions:{position:"top"},darkMode:true,events:{onClose:()=>{this.hintPopup.destroy();this.hintPopup=null},onShow:t=>{const e=t.getTarget();const n=e.getPopupContainer().offsetWidth;const s=i/2-n/2;const r=o.Popup.getOption("angleLeftOffset")-o.Popup.getOption("angleMinTop");e.setAngle({offset:n/2-r});e.setOffset({offsetLeft:s+o.Popup.getOption("angleLeftOffset")})}}});this.hintPopup.show()},handleMouseLeave(){if(this.hintPopup){this.hintPopup.close();this.hintPopup=null}}},template:`\n\t\t<BIcon\n\t\t\tclass="ui-tile-uploader-insert-into-text-button"\n\t\t\t:class="{ '--inserted': isInserted }"\n\t\t\t:name="Outline.PROMPT_VAR"\n\t\t\t@click="handleClick"\n\t\t\t@mouseenter="handleMouseEnter"\n\t\t\t@mouseleave="handleMouseLeave"\n\t\t/>\n\t`};const I={props:{progress:{type:Number,default:0},width:{type:Number,default:45},lineSize:{type:Number,default:3},colorTrack:{type:String,default:"#eeeff0"},colorBar:{type:String,default:"#2fc6f6"},rotation:{type:Boolean,default:true}},mounted(){this.createProgressbar()},watch:{progress(){this.updateProgressbar()}},methods:{createProgressbar(){this.loader=new l.ProgressRound({width:this.width,lineSize:this.lineSize,colorBar:this.colorBar,colorTrack:this.colorTrack,rotation:this.rotation,value:this.progress,color:l.ProgressRound.Color.SUCCESS});this.loader.renderTo(this.$refs.container)},updateProgressbar(){if(!this.loader){this.createProgressbar()}this.loader.update(this.progress)}},template:'<span ref="container"></span>'};const T={components:{BIcon:u.BIcon,UploadLoader:I,ErrorPopup:h,FileIconComponent:f},inject:["uploader","adapter","widgetOptions","emitter"],props:{item:{type:Object,default:()=>{}}},setup(){return{Actions:d.Actions,Outline:d.Outline,FileStatus:i.FileStatus,menuId:`ui-tile-uploader-item-menu-${a.Text.getRandom().toLowerCase()}`}},data(){return{showError:false,isMenuShown:false}},computed:{status(){if(this.item.status===i.FileStatus.UPLOADING){return`${this.item.progress}%`}if(this.item.status===i.FileStatus.LOAD_FAILED||this.item.status===i.FileStatus.UPLOAD_FAILED){return a.Loc.getMessage("TILE_UPLOADER_ERROR_STATUS")}return a.Loc.getMessage("TILE_UPLOADER_WAITING_STATUS")},fileSize(){if([i.FileStatus.LOADING,i.FileStatus.LOAD_FAILED].includes(this.item.status)&&this.item.origin===i.FileOrigin.SERVER){return""}return this.item.sizeFormatted},errorPopupOptions(){const t=this.$refs.container;const e=t.offsetWidth;return{bindElement:t,darkMode:true,offsetTop:6,minWidth:e,maxWidth:500}},clampedFileName(){const t=this.item.name.split(".");if(t.length>1){t.pop()}const e=t.join(".");const i=this.widgetOptions.compact?22:27;if(e.length>i){return`${e.slice(0,i-10)}...${e.slice(-5)}`}return e},showItemMenuButton(){if(a.Type.isBoolean(this.widgetOptions.showItemMenuButton)){return this.widgetOptions.showItemMenuButton}return this.menuItems.length>0},menuItems(){const t=[];t.push({id:"filesize",text:a.Loc.getMessage("TILE_UPLOADER_FILE_SIZE",{"#filesize#":this.item.sizeFormatted}),disabled:true},{delimiter:true});if(this.widgetOptions.insertIntoText===true){t.push({id:"insert-into-text",text:a.Loc.getMessage("TILE_UPLOADER_INSERT_INTO_THE_TEXT"),onclick:()=>{if(this.menu){this.menu.close()}this.emitter.emit("onInsertIntoText",{item:this.item})}})}if(a.Type.isStringFilled(this.item.downloadUrl)){t.push({id:"download",text:a.Loc.getMessage("TILE_UPLOADER_MENU_DOWNLOAD"),href:this.item.downloadUrl,onclick:()=>{var t;return(t=this.menu)==null?void 0:t.close()}},{id:"remove",text:a.Loc.getMessage("TILE_UPLOADER_MENU_REMOVE"),onclick:this.remove})}return t},extraAction(){return this.widgetOptions.slots&&this.widgetOptions.slots[n.TileWidgetSlot.ITEM_EXTRA_ACTION]?this.widgetOptions.slots[n.TileWidgetSlot.ITEM_EXTRA_ACTION]:this.widgetOptions.insertIntoText===true?g:null},isSelected(){return this.item.customData.tileSelected===true},fileIconSize(){return this.widgetOptions.compact?24:36}},created(){this.menu=null},beforeUnmount(){if(this.menu){this.menu.destroy();this.menu=null}},methods:{remove(){this.uploader.removeFile(this.item.id)},handleMouseEnter(t){if(t.error){this.showError=true}},handleMouseLeave(){this.showError=false},toggleMenu(){setTimeout((()=>{if(this.menu){if(this.menu.getPopupWindow().isShown()){this.menu.close();return}this.menu.destroy()}this.menu=o.MenuManager.create({id:this.menuId,bindElement:this.$refs.menu.$el,angle:true,offsetLeft:13,minWidth:100,cacheable:false,items:this.menuItems,events:{onShow:()=>{this.isMenuShown=true;this.adapter.getItem(this.item.id).isMenuShown=true},onClose:()=>{this.isMenuShown=false;this.adapter.getItem(this.item.id).isMenuShown=false},onDestroy:()=>{this.menu=null}}});const t=this.menu.getMenuItem("download");if(t){a.Dom.attr(t.getContainer(),"download",true)}this.emitter.emit("TileItem:onMenuCreate",{menu:this.menu,item:this.item});this.menu.show()}))}},template:`\n\t\t<div\n\t\t\tclass="ui-tile-uploader-item"\n\t\t\t:class="[\n\t\t\t\t'ui-tile-uploader-item--' + item.status,\n\t\t\t\t{\n\t\t\t\t\t'--image': item.isImage,\n\t\t\t\t\t'--selected': (isMenuShown && widgetOptions.compact) || isSelected,\n\t\t\t\t},\n\t\t\t]"\n\t\t\tref="container"\n\t\t>\n\t\t\t<ErrorPopup v-if="item.error && showError" :error="item.error" :popup-options="errorPopupOptions"/>\n\t\t\t<div\n\t\t\t\tclass="ui-tile-uploader-item-content"\n\t\t\t\t@mouseenter="handleMouseEnter(item)"\n\t\t\t\t@mouseleave="handleMouseLeave"\n\t\t\t>\n\t\t\t\t<div v-if="item.status !== FileStatus.COMPLETE" class="ui-tile-uploader-item-state">\n\t\t\t\t\t<div class="ui-tile-uploader-item-loader" v-if="item.status === FileStatus.UPLOADING">\n\t\t\t\t\t\t<UploadLoader :progress="item.progress" :width="20" colorTrack="#73d8f8" colorBar="#fff"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else class="ui-tile-uploader-item-state-icon"></div>\n\t\t\t\t\t<div class="ui-tile-uploader-item-status">\n\t\t\t\t\t\t<div class="ui-tile-uploader-item-status-name">{{status}}</div>\n\t\t\t\t\t\t<div v-if="fileSize" class="ui-tile-uploader-item-state-desc">{{fileSize}}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="ui-tile-uploader-item-state-remove" @click="remove" key="aaa"></div>\n\t\t\t\t</div>\n\t\t\t\t<template v-else>\n\t\t\t\t\t<div class="ui-tile-uploader-item-remove" key="remove" @click="remove">\n\t\t\t\t\t\t<BIcon :name="Outline.CROSS_L"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="ui-tile-uploader-item-actions" key="actions">\n\t\t\t\t\t\t<div class="ui-tile-uploader-item-actions-pad">\n\t\t\t\t\t\t\t<div v-if="extraAction" class="ui-tile-uploader-item-extra-actions">\n\t\t\t\t\t\t\t\t<component :is="extraAction" :item="item"></component>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<BIcon\n\t\t\t\t\t\t\t\tv-if="showItemMenuButton"\n\t\t\t\t\t\t\t\tclass="ui-tile-uploader-item-menu"\n\t\t\t\t\t\t\t\t:name="Actions.MORE"\n\t\t\t\t\t\t\t\tref="menu"\n\t\t\t\t\t\t\t\t@click="toggleMenu"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t\t<div class="ui-tile-uploader-item-preview">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if="item.previewUrl"\n\t\t\t\t\t\tclass="ui-tile-uploader-item-image"\n\t\t\t\t\t\t:class="{ 'ui-tile-uploader-item-image-default': item.previewUrl === null }"\n\t\t\t\t\t\t:style="{ backgroundImage: item.previewUrl !== null ? 'url(' + item.previewUrl + ')' : '' }">\n\t\t\t\t\t</div>\n\t\t\t\t\t<FileIconComponent v-else :name="item.extension || '...'" :size="fileIconSize"/>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="item.name" class="ui-tile-uploader-item-name-box" :title="item.name">\n\t\t\t\t\t<div class="ui-tile-uploader-item-name">\n\t\t\t\t\t\t<span class="ui-tile-uploader-item-name-title">{{clampedFileName}}</span>\n\t\t\t\t\t\t<span v-if="item.extension" class="ui-tile-uploader-item-name-extension">.{{item.extension}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const E={components:{BIcon:u.BIcon},emit:["onClick"],props:{hiddenFilesCount:{type:Number,default:0}},setup(){return{Actions:d.Actions}},computed:{moreButtonCaption(){return a.Loc.getMessage("TILE_UPLOADER_MORE_BUTTON_CAPTION",{"#COUNT#":`<span class="ui-tile-uploader-item-more-count">${this.hiddenFilesCount}</span>`})}},template:`\n\t\t<div class="ui-tile-uploader-item" @click="$emit('onClick')">\n\t\t\t<div class="ui-tile-uploader-item-more">\n\t\t\t\t<BIcon class="ui-tile-uploader-item-more-icon" :name="Actions.MORE"/>\n\t\t\t\t<div class="ui-tile-uploader-item-more-label" v-html="moreButtonCaption"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const v={components:{TileItem:T,TileMoreItem:E},emits:["onUnmount"],props:{autoCollapse:{type:Boolean,default:false},items:{type:Array,default:[]}},data:()=>({pageSize:5,firstHiddenItem:null,lastHiddenItem:null}),created(){this.moreItemBlocked=false;if(!this.autoCollapse){return}if(this.items.length>this.pageSize){this.firstHiddenItem=this.items[this.pageSize];this.lastHiddenItem=this.items[this.items.length-1]}},unmounted(){this.$emit("onUnmount")},computed:{visibleItems(){if(this.firstHiddenItem===null){return this.items}const t=this.items.indexOf(this.firstHiddenItem);if(t===-1){this.resetMoreItem();return this.items}return this.items.slice(0,t)},realtimeItems(){if(this.lastHiddenItem===null){return[]}const t=this.items.indexOf(this.lastHiddenItem);if(t===-1){this.resetMoreItem();return[]}return this.items.slice(t+1)},hiddenFilesCount(){if(this.lastHiddenItem===null){return 0}const t=this.items.indexOf(this.firstHiddenItem);const e=this.items.indexOf(this.lastHiddenItem);if(t===-1||e===-1){this.resetMoreItem();return 0}return e-t+1}},methods:{getMore(){if(this.moreItemBlocked){return}this.pageSize=Math.min(this.pageSize+5,30);const t=this.items.indexOf(this.firstHiddenItem);const e=this.items.indexOf(this.lastHiddenItem);const i=t+this.pageSize;const n=i>e?e+1:i;let s=n-t;for(let i=t,o=0;i<n;i++,o++){this.moreItemBlocked=true;setTimeout((()=>{if(i===e){this.resetMoreItem()}else{this.firstHiddenItem=this.items[i+1]}s--;if(s===0){this.moreItemBlocked=false}}),100*o)}},resetMoreItem(){this.firstHiddenItem=null;this.lastHiddenItem=null}},template:`\n\t\t<div class="ui-tile-uploader-items">\n\t\t\t<transition-group name="ui-tile-uploader-item" type="animation">\n\t\t\t\t<TileItem v-for="item in visibleItems" :key="item.id" :item="item" />\n\t\t\t</transition-group>\n\t\t\t<transition name="ui-tile-uploader-item" type="animation">\n\t\t\t\t<TileMoreItem v-if="hiddenFilesCount > 0" :hidden-files-count="hiddenFilesCount" @onClick="getMore"/>\n\t\t\t</transition>\n\t\t\t<transition-group name="ui-tile-uploader-item" type="animation">\n\t\t\t\t<TileItem v-for="item in realtimeItems" :key="item.id" :item="item" />\n\t\t\t</transition-group>\n\t\t</div>\n\t`};const O={name:"TileWidget",components:{DropArea:c,TileList:v,ErrorPopup:h},extends:e.VueUploaderComponent,mixins:[p],data(){return{isMounted:false,autoCollapse:false}},computed:{errorPopupOptions(){return{bindElement:this.$refs.container,closeIcon:true,padding:20,offsetLeft:45,angle:true,darkMode:true,bindOptions:{position:"top",forceTop:true}}},TileWidgetSlot:()=>n.TileWidgetSlot,slots(){const t=a.Type.isPlainObject(this.widgetOptions.slots)?this.widgetOptions.slots:{};return{[n.TileWidgetSlot.BEFORE_TILE_LIST]:t[n.TileWidgetSlot.BEFORE_TILE_LIST],[n.TileWidgetSlot.AFTER_TILE_LIST]:t[n.TileWidgetSlot.AFTER_TILE_LIST],[n.TileWidgetSlot.BEFORE_DROP_AREA]:t[n.TileWidgetSlot.BEFORE_DROP_AREA],[n.TileWidgetSlot.AFTER_DROP_AREA]:t[n.TileWidgetSlot.AFTER_DROP_AREA]}},enableDropzone(){return this.widgetOptions.enableDropzone!==false}},created(){this.autoCollapse=a.Type.isBoolean(this.widgetOptions.autoCollapse)?this.widgetOptions.autoCollapse:this.items.length>0;this.adapter.subscribe("Item:onAdd",this.clearError);this.adapter.subscribe("Item:onRemove",this.clearError)},mounted(){if(this.enableDropzone){this.uploader.assignDropzone(this.$refs.container)}this.isMounted=true},beforeUnmount(){this.adapter.unsubscribe("Item:onAdd",this.clearError);this.adapter.unsubscribe("Item:onRemove",this.clearError)},methods:{enableAutoCollapse(){this.autoCollapse=true},disableAutoCollapse(){this.autoCollapse=false},handlePopupDestroy(t){if(this.uploaderError===t){this.uploaderError=null}},clearError(){this.uploaderError=null}},template:`\n\t\t<div\n\t\t\tclass="ui-tile-uploader"\n\t\t\t:class="[\n\t\t\t\twidgetOptions.contextClass ?? '--ui-context-content-light',\n\t\t\t\t{\n\t\t\t\t\t'--compact': widgetOptions.compact,\n\t\t\t\t},\n\t\t\t]"\n\t\t\tref="container"\n\t\t\tv-drop="enableDropzone"\n\t\t>\n\t\t\t<component :is="slots[TileWidgetSlot.BEFORE_TILE_LIST]"></component>\n\t\t\t<TileList \n\t\t\t\tv-if="items.length !== 0" \n\t\t\t\t:items="items" \n\t\t\t\t:auto-collapse="autoCollapse" \n\t\t\t\t@onUnmount="autoCollapse = false"\n\t\t\t/>\n\t\t\t<component :is="slots[TileWidgetSlot.AFTER_TILE_LIST]"></component>\n\t\t\t<component :is="slots[TileWidgetSlot.BEFORE_DROP_AREA]"></component>\n\t\t\t<DropArea v-if="!widgetOptions.hideDropArea"/>\n\t\t\t<component :is="slots[TileWidgetSlot.AFTER_DROP_AREA]"></component>\n\t\t</div>\n\t\t<ErrorPopup\n\t\t\tv-if="uploaderError && isMounted"\n\t\t\t:alignArrow="false"\n\t\t\t:error="uploaderError"\n\t\t\t:popup-options="errorPopupOptions"\n\t\t\t@onDestroy="handlePopupDestroy"\n\t\t/>\n\t`};class S extends e.VueUploaderWidget{constructor(t,e){const i=a.Type.isPlainObject(e)?Object.assign({},e):{};super(t,i)}defineComponent(){return O}}const A={BEFORE_TILE_LIST:"beforeTileList",AFTER_TILE_LIST:"afterTileList",BEFORE_DROP_AREA:"beforeDropArea",AFTER_DROP_AREA:"afterDropArea",ITEM_EXTRA_ACTION:"Item:extraAction"};t.TileWidget=S;t.TileWidgetComponent=O;t.TileWidgetSlot=A;t.TileList=v;t.FileIcon=f;t.ErrorPopup=h;t.UploadLoader=I;t.DragOverMixin=p})(this.BX.UI.Uploader=this.BX.UI.Uploader||{},BX.UI.Uploader,BX.UI.Uploader,BX.UI.Uploader,BX.UI.Icons.Generator,BX.Main,BX,BX.UI,BX,BX.UI.IconSet,BX.UI.IconSet);
//# sourceMappingURL=ui.uploader.tile-widget.bundle.map.js