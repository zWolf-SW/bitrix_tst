this.BX=this.BX||{};this.BX.UI=this.BX.UI||{};(function(e,t,n,i,s,r){"use strict";function o(e,t){if(!n.Type.isArray(e)){throw new TypeError("array is not a array")}if(!n.Type.isInteger(t)){throw new TypeError("index is not a integer")}const i=t<0?e.length+t:t;return e[i]}class c extends r.BBCodeScheme{getTagScheme(e){return new r.BBCodeTagScheme({name:"any"})}isAllowedTag(e){return true}isChildAllowed(e,t){return true}}const l=/\[(\/)?(\w+|\*).*?]/;const a=/\[(\/)?(\w+|\*)(.*?)]/gs;const d="\n";const h="\r\n";const u="\t";const f=e=>[d,h].includes(e);const g=e=>e===u;const p=e=>g(e)||f(e);const m=e=>["list","ul","ol"].includes(String(e).toLowerCase());const B=e=>["*","li"].includes(String(e).toLowerCase());const T=new c;class C{constructor(e={}){this.allowedLinkify=true;if(e.scheme){this.setScheme(e.scheme)}else{this.setScheme(new r.DefaultBBCodeScheme)}if(n.Type.isFunction(e.onUnknown)){this.setOnUnknown(e.onUnknown)}else{this.setOnUnknown(C.defaultOnUnknownHandler)}if(e.encoder instanceof i.BBCodeEncoder){this.setEncoder(e.encoder)}else{this.setEncoder(new i.BBCodeEncoder)}if(n.Type.isBoolean(e.linkify)){this.setIsAllowedLinkify(e.linkify)}}setScheme(e){this.scheme=e}getScheme(){return this.scheme}setOnUnknown(e){if(!n.Type.isFunction(e)){throw new TypeError("handler is not a function")}this.onUnknownHandler=e}getOnUnknownHandler(){return this.onUnknownHandler}setEncoder(e){if(e instanceof i.BBCodeEncoder){this.encoder=e}else{throw new TypeError("encoder is not BBCodeEncoder instance")}}getEncoder(){return this.encoder}setIsAllowedLinkify(e){this.allowedLinkify=Boolean(e)}isAllowedLinkify(){return this.allowedLinkify}canBeLinkified(e){if(e.getName()==="#text"){const n=["url","img","video","code"];const i=n.some((n=>Boolean(t.AstProcessor.findParentNodeByName(e,n))));return!i}return false}static defaultOnUnknownHandler(e,t){if(e.getType()===r.BBCodeNode.ELEMENT_NODE){const n=e.getName();if(["left","center","right","justify"].includes(n)){const n=t.createElement({name:"p"});e.replace(n);n.setChildren(e.getChildren())}else if(["background","color","size"].includes(n)){const n=t.createElement({name:"b"});e.replace(n);n.setChildren(e.getChildren())}else if(["span","font"].includes(n)){const n=t.createFragment({children:e.getChildren()});e.replace(n)}else{const n=e.getOpeningTag();const i=e.getClosingTag();e.replace(t.createText(n),...e.getChildren(),t.createText(i))}}}static toLowerCase(e){if(n.Type.isStringFilled(e)){return e.toLowerCase()}return e}parseText(e){if(n.Type.isStringFilled(e)){const t=/\\r\\n|\\n|\\t|\\.|.|\r\n|\n|\t/g;return[...e.matchAll(t)].flatMap((([e])=>{if(f(e)){return e}return[...e]})).reduce(((e,t)=>{if(p(t)){e.push(t)}else{const i=o(e,-1);if(p(i)||n.Type.isNil(i)){e.push(t)}else{e[e.length-1]+=t}}return e}),[]).map((e=>{if(f(e)){return T.createNewLine()}if(g(e)){return T.createTab()}return T.createText({content:this.getEncoder().decodeText(e)})}))}return[]}static findNextTagIndex(e,t=0){const n=e.slice(t);const i=n.match(new RegExp(l));if(i){return i.index+t}return-1}static findNextTag(e,t=0){const n=e.slice(t);const i=n.match(new RegExp(l));if(i){const[,e,t]=i;return{tagName:t,isClosedTag:e==="\\"}}return null}static trimQuotes(e){const t=String(e);if(/^["'].*["']$/g.test(t)){return t.slice(1,-1)}return e}parseAttributes(e){const t={value:"",attributes:[]};if(n.Type.isStringFilled(e)){if(e.startsWith("=")){t.value=this.getEncoder().decodeAttribute(C.trimQuotes(e.slice(1)));return t}return e.trim().split(" ").filter(Boolean).reduce(((e,t)=>{const[n,i=""]=t.split("=");e.attributes.push([C.toLowerCase(n),this.getEncoder().decodeAttribute(C.trimQuotes(i))]);return e}),t)}return t}parse(e){const t=T.createRoot();const i=C.findNextTagIndex(e);if(i!==0){const n=i===-1?e:e.slice(0,i);t.appendChild(...this.parseText(n))}const c=[t];const l=[];let d=null;let h=0;e.replace(a,((t,i,s,r,o)=>{const a=Boolean(i)===false;const u=t.length+o;const f=e.slice(u);const g=this.parseAttributes(r);const p=C.toLowerCase(s);let w=c[h];if(a){const n=!f.includes(`[/${s}]`);if(n&&!B(p)){const n=this.getScheme().getTagScheme(p);const i=n&&n.isVoid();if(i){d=T.createElement({name:p,value:g.value,attributes:Object.fromEntries(g.attributes)});d.setScheme(this.getScheme());w.appendChild(d)}else{w.appendChild(T.createText(t))}const s=C.findNextTagIndex(e,u);if(s!==0){const t=s===-1?f:e.slice(u,s);w.appendChild(...this.parseText(t))}}else{if(B(p)&&d&&B(d.getName())){h--;w=c[h]}d=T.createElement({name:p,value:g.value,attributes:Object.fromEntries(g.attributes)});const t=C.findNextTagIndex(e,u);if(t!==0){const n=t===-1?f:e.slice(u,t);d.appendChild(...this.parseText(n))}if(!w){h++;w=c[h]}w.appendChild(d);h++;c[h]=d;l.push(p)}}else{if(l.includes(p)){h--;const e=l.indexOf(p);l.splice(e,1)}else{c[h].appendChild(T.createText(t))}if(m(p)&&h>0){h--}const i=C.findNextTagIndex(e,u);if(i!==0&&c[h]){const t=i===-1?f:e.slice(u,i);c[h].appendChild(...this.parseText(t))}if(h>0&&B(c[h].getName())){const t=C.findNextTag(e,u);if(n.Type.isNull(t)||B(t.tagName)){h--}}}}));const u=e=>{let t=false;return e.getChildren().reduceRight(((e,n,i)=>{if(!t&&n.getName()==="#linebreak"){e.push(i)}else if(!t&&n.getName()!=="#tab"){t=true}return e}),[])};r.BBCodeNode.flattenAst(t).forEach((e=>{if(e.getName()==="*"){const t=u(e);if(t.length===1){e.setChildren(e.getChildren().slice(0,o(t,0)))}if(t.length>1&&(t&2)===0){e.setChildren(e.getChildren().slice(0,o(t,0)))}}if(this.isAllowedLinkify()&&this.canBeLinkified(e)){const t=e.toString({encode:false});const n=s.Linkify.tokenize(t);const i=n.map((e=>{if(e.t==="url"){return T.createElement({name:"url",value:e.toHref().replace(/^http:\/\//,"https://"),children:[T.createText(e.toString())]})}if(e.t==="email"){return T.createElement({name:"url",value:e.toHref(),children:[T.createText(e.toString())]})}return T.createText(e.toString())}));e.replace(...i)}}));r.BBCodeNode.flattenAst(t).forEach((e=>{const t=this.getScheme().getTagScheme(e);if(t){t.runOnParseHandler(e)}}));t.setScheme(this.getScheme(),this.getOnUnknownHandler());return t}}e.BBCodeParser=C})(this.BX.UI.BBCode=this.BX.UI.BBCode||{},BX.UI.BBCode,BX,BX.UI.BBCode,BX.UI,BX.UI.BBCode);
//# sourceMappingURL=parser.bundle.map.js