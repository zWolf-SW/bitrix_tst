{"version":3,"file":"avatar.bundle.js","sources":["../src/const.js","../src/avatar.js"],"sourcesContent":["import {\n\tAvatarBase,\n\tAvatarHexagon, AvatarHexagonAccent, AvatarHexagonExtranet, AvatarHexagonGuest,\n\tAvatarRound, AvatarRoundAccent, AvatarRoundExtranet, AvatarRoundGuest,\n\tAvatarSquare, AvatarSquareAccent, AvatarSquareExtranet, AvatarSquareGuest,\n} from 'ui.avatar';\nimport type { AvatarType } from './type';\n\nexport const AvatarConcreteClassByType: Record<AvatarType, typeof AvatarBase> = Object.freeze({\n\tround: AvatarRound,\n\t'round-guest': AvatarRoundGuest,\n\t'round-extranet': AvatarRoundExtranet,\n\t'round-accent': AvatarRoundAccent,\n\thexagon: AvatarHexagon,\n\t'hexagon-guest': AvatarHexagonGuest,\n\t'hexagon-extranet': AvatarHexagonExtranet,\n\t'hexagon-accent': AvatarHexagonAccent,\n\tsquare: AvatarSquare,\n\t'square-guest': AvatarSquareGuest,\n\t'square-extranet': AvatarSquareExtranet,\n\t'square-accent': AvatarSquareAccent,\n});\n","import { AvatarConcreteClassByType } from './const';\nimport type { AvatarType } from './type';\nimport { BitrixVueComponentProps } from 'ui.vue3';\n\n// @vue/component\nexport const Avatar: BitrixVueComponentProps = {\n\tname: 'UiAvatar',\n\tprops: {\n\t\toptions: {\n\t\t\t/** @type AvatarOptions */\n\t\t\ttype: Object,\n\t\t\trequired: false,\n\t\t\tdefault: () => ({}),\n\t\t},\n\t\ttype: {\n\t\t\t/** @type AvatarType */\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: 'round',\n\t\t\tvalidator(val): boolean\n\t\t\t{\n\t\t\t\treturn Object.keys(AvatarConcreteClassByType).includes(val);\n\t\t\t},\n\t\t},\n\t},\n\tdata(): { size: number | null }\n\t{\n\t\treturn {\n\t\t\tsize: null,\n\t\t};\n\t},\n\tcreated(): void\n\t{\n\t\tconst ConcreteClass = AvatarConcreteClassByType[this.type];\n\n\t\t/** @type AvatarBase */\n\t\tthis.instance = new ConcreteClass(this.options);\n\n\t\tthis.size = this.options.size ?? null;\n\t},\n\tmounted(): void\n\t{\n\t\tthis.instance.renderTo(this.$refs.container);\n\t},\n\ttemplate: `\n\t\t<div ref=\"container\" :style=\"{ 'width': size + 'px', 'height': size + 'px'}\"></div>\n\t`,\n};\n\nexport type {\n\tAvatarType,\n};\n"],"names":["AvatarConcreteClassByType","Object","freeze","round","AvatarRound","AvatarRoundGuest","AvatarRoundExtranet","AvatarRoundAccent","hexagon","AvatarHexagon","AvatarHexagonGuest","AvatarHexagonExtranet","AvatarHexagonAccent","square","AvatarSquare","AvatarSquareGuest","AvatarSquareExtranet","AvatarSquareAccent","Avatar","name","props","options","type","required","default","String","validator","val","keys","includes","data","size","created","ConcreteClass","instance","mounted","renderTo","$refs","container","template"],"mappings":";;;;;;;CAQO,MAAMA,yBAAgE,GAAGC,MAAM,CAACC,MAAM,CAAC;GAC7FC,KAAK,EAAEC,qBAAW;GAClB,aAAa,EAAEC,0BAAgB;GAC/B,gBAAgB,EAAEC,6BAAmB;GACrC,cAAc,EAAEC,2BAAiB;GACjCC,OAAO,EAAEC,uBAAa;GACtB,eAAe,EAAEC,4BAAkB;GACnC,kBAAkB,EAAEC,+BAAqB;GACzC,gBAAgB,EAAEC,6BAAmB;GACrCC,MAAM,EAAEC,sBAAY;GACpB,cAAc,EAAEC,2BAAiB;GACjC,iBAAiB,EAAEC,8BAAoB;GACvC,eAAe,EAAEC;CAClB,CAAC,CAAC;;CCjBF;AACA,OAAaC,MAA+B,GAAG;GAC9CC,IAAI,EAAE,UAAU;GAChBC,KAAK,EAAE;KACNC,OAAO,EAAE;;OAERC,IAAI,EAAErB,MAAM;OACZsB,QAAQ,EAAE,KAAK;OACfC,OAAO,EAAE,OAAO,EAAE;MAClB;KACDF,IAAI,EAAE;;OAELA,IAAI,EAAEG,MAAM;OACZF,QAAQ,EAAE,KAAK;OACfC,OAAO,EAAE,OAAO;OAChBE,SAAS,CAACC,GAAG,EACb;SACC,OAAO1B,MAAM,CAAC2B,IAAI,CAAC5B,yBAAyB,CAAC,CAAC6B,QAAQ,CAACF,GAAG,CAAC;;;IAG7D;GACDG,IAAI,GACJ;KACC,OAAO;OACNC,IAAI,EAAE;MACN;IACD;GACDC,OAAO,GACP;KAAA;KACC,MAAMC,aAAa,GAAGjC,yBAAyB,CAAC,IAAI,CAACsB,IAAI,CAAC;;;KAG1D,IAAI,CAACY,QAAQ,GAAG,IAAID,aAAa,CAAC,IAAI,CAACZ,OAAO,CAAC;KAE/C,IAAI,CAACU,IAAI,yBAAG,IAAI,CAACV,OAAO,CAACU,IAAI,iCAAI,IAAI;IACrC;GACDI,OAAO,GACP;KACC,IAAI,CAACD,QAAQ,CAACE,QAAQ,CAAC,IAAI,CAACC,KAAK,CAACC,SAAS,CAAC;IAC5C;GACDC,QAAQ,EAAG;;;CAGZ,CAAC;;;;;;;;"}