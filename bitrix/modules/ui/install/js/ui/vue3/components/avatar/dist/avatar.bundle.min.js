this.BX=this.BX||{};this.BX.UI=this.BX.UI||{};this.BX.UI.Vue3=this.BX.UI.Vue3||{};(function(t,e,a){"use strict";const n=Object.freeze({round:e.AvatarRound,"round-guest":e.AvatarRoundGuest,"round-extranet":e.AvatarRoundExtranet,"round-accent":e.AvatarRoundAccent,hexagon:e.AvatarHexagon,"hexagon-guest":e.AvatarHexagonGuest,"hexagon-extranet":e.AvatarHexagonExtranet,"hexagon-accent":e.AvatarHexagonAccent,square:e.AvatarSquare,"square-guest":e.AvatarSquareGuest,"square-extranet":e.AvatarSquareExtranet,"square-accent":e.AvatarSquareAccent});const r={name:"UiAvatar",props:{options:{type:Object,required:false,default:()=>({})},type:{type:String,required:false,default:"round",validator(t){return Object.keys(n).includes(t)}}},data(){return{size:null}},created(){var t;const e=n[this.type];this.instance=new e(this.options);this.size=(t=this.options.size)!=null?t:null},mounted(){this.instance.renderTo(this.$refs.container)},template:`\n\t\t<div ref="container" :style="{ 'width': size + 'px', 'height': size + 'px'}"></div>\n\t`};t.Avatar=r})(this.BX.UI.Vue3.Components=this.BX.UI.Vue3.Components||{},BX.UI,BX.Vue3);
//# sourceMappingURL=avatar.bundle.map.js