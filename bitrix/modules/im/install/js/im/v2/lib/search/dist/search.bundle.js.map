{"version":3,"file":"search.bundle.js","sources":["../src/get-search-config.js","../src/store-updater.js","../src/helpers/get-recent-item-date.js","../src/helpers/get-recent-items.js","../src/local-search.js","../src/helpers/get-users-from-recent-items.js","../src/helpers/sort-items-by-date.js"],"sourcesContent":["import { Type } from 'main.core';\n\nimport type { SearchConfig, EntitySelectorRequestConfig } from './types/types';\n\nexport const EntityId = 'im-recent-v2';\nconst ContextId = 'IM_CHAT_SEARCH';\nconst SearchDialogId = 'im-chat-search';\n\nexport const getSearchConfig = (searchConfig: SearchConfig): EntitySelectorRequestConfig => {\n\tconst entity = {\n\t\tid: EntityId,\n\t\tdynamicLoad: true,\n\t\tdynamicSearch: true,\n\t\toptions: prepareConfigOptions(searchConfig),\n\t};\n\n\treturn {\n\t\tdialog: {\n\t\t\tentities: [\n\t\t\t\tentity,\n\t\t\t],\n\t\t\tpreselectedItems: [],\n\t\t\tclearUnavailableItems: false,\n\t\t\tcontext: ContextId,\n\t\t\tid: SearchDialogId,\n\t\t},\n\t};\n};\n\nconst prepareConfigOptions = (searchConfig: SearchConfig) => {\n\tconst options = {\n\t\twithChatByUsers: false,\n\t};\n\n\tif (!searchConfig)\n\t{\n\t\treturn { ...options, exclude: [] };\n\t}\n\n\tconst exclude = [];\n\n\tif (Type.isBoolean(searchConfig.chats) && !searchConfig.chats)\n\t{\n\t\texclude.push('chats');\n\t}\n\n\tif (Type.isBoolean(searchConfig.users) && !searchConfig.users)\n\t{\n\t\texclude.push('users');\n\t}\n\n\treturn { ...options, exclude };\n};\n","import { Core } from 'im.v2.application.core';\nimport { UserManager } from 'im.v2.lib.user';\nimport { SearchEntityIdTypes } from 'im.v2.const';\n\nimport type { ImRecentProviderItem } from './types/types';\n\nexport class StoreUpdater\n{\n\t#store: Object;\n\t#userManager: UserManager;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#userManager = new UserManager();\n\t}\n\n\tupdate(items: ImRecentProviderItem[]): Promise\n\t{\n\t\tconst { users, chats } = this.#prepareDataForModels(items);\n\n\t\treturn Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#store.dispatch('chats/set', chats),\n\t\t]);\n\t}\n\n\t#prepareDataForModels(items: ImRecentProviderItem[]): { users: Object[], chats: Object[] }\n\t{\n\t\tconst result = {\n\t\t\tusers: [],\n\t\t\tchats: [],\n\t\t};\n\n\t\titems.forEach((item) => {\n\t\t\tconst chatData = item.customData.chat;\n\n\t\t\tif (item.entityType === SearchEntityIdTypes.imUser)\n\t\t\t{\n\t\t\t\tresult.users.push(item.customData.user);\n\t\t\t}\n\n\t\t\tif (item.entityType === SearchEntityIdTypes.chat)\n\t\t\t{\n\t\t\t\tconst isUser = Boolean(item.customData.user);\n\t\t\t\tconst userData = isUser ? UserManager.getDialogForUser(item.customData.user) : {};\n\n\t\t\t\tresult.chats.push({\n\t\t\t\t\t...chatData,\n\t\t\t\t\t...userData,\n\t\t\t\t\tdialogId: item.id,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n}\n","import { Core } from 'im.v2.application.core';\n\nimport type { ImModelMessage } from 'im.v2.model';\n\nexport function getRecentItemDate(dialogId: string): string\n{\n\tconst message: ImModelMessage = Core.getStore().getters['recent/getMessage'](dialogId);\n\tif (!message)\n\t{\n\t\treturn '';\n\t}\n\n\treturn message.date.toISOString();\n}\n","import { Core } from 'im.v2.application.core';\n\nimport { getRecentItemDate } from './get-recent-item-date';\n\nimport type { SearchResultItem } from '../types/types';\nimport type { ImModelRecentItem } from 'im.v2.model';\n\nexport function getRecentListItems({ withFakeUsers }: {withFakeUsers: boolean}): SearchResultItem[]\n{\n\tlet recent: ImModelRecentItem[] = Core.getStore().getters['recent/getSortedCollection'];\n\trecent = recent.filter((item) => {\n\t\tif (withFakeUsers && item.isFakeElement)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !item.isBirthdayPlaceholder && !item.isFakeElement;\n\t});\n\n\treturn recent.map(({ dialogId }) => {\n\t\treturn {\n\t\t\tdialogId,\n\t\t\tdateMessage: getRecentItemDate(dialogId),\n\t\t};\n\t});\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { getRecentListItems } from './helpers/get-recent-items';\n\nimport type { SearchResultItem, LocalSearchItem, SearchConfig } from './types/types';\n\nconst collator = new Intl.Collator(undefined, { sensitivity: 'base' });\n\nexport class LocalSearch\n{\n\t#searchConfig: SearchConfig | undefined;\n\t#store: Store;\n\n\tconstructor(searchConfig: SearchConfig)\n\t{\n\t\tthis.#searchConfig = searchConfig;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tsearch(query: string, localCollection: SearchResultItem[]): SearchResultItem[]\n\t{\n\t\tconst localItems = this.#getLocalItems(localCollection);\n\t\tconst result = this.#search(query, localItems);\n\n\t\treturn this.#filterByConfig(result);\n\t}\n\n\t#search(query: string, localItems: LocalSearchItem[]): SearchResultItem[]\n\t{\n\t\tconst queryWords = Utils.text.getWordsFromString(query);\n\n\t\tconst foundItems: Map<string, SearchResultItem> = new Map();\n\t\tlocalItems.forEach((localItem) => {\n\t\t\tif (this.#searchByQueryWords(localItem, queryWords))\n\t\t\t{\n\t\t\t\tfoundItems.set(localItem.dialogId, {\n\t\t\t\t\tdialogId: localItem.dialogId,\n\t\t\t\t\tdateMessage: localItem.dateMessage,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn [...foundItems.values()];\n\t}\n\n\t#getRecentListItems(): LocalSearchItem[]\n\t{\n\t\treturn getRecentListItems({ withFakeUsers: true }).map((item) => {\n\t\t\treturn this.#prepareRecentItem(item.dialogId, item.dateMessage);\n\t\t});\n\t}\n\n\t#prepareRecentItem(dialogId: string, dateMessage: string): LocalSearchItem[]\n\t{\n\t\tconst dialog = this.#store.getters['chats/get'](dialogId, true);\n\t\tconst isUser = dialog.type === ChatType.user;\n\n\t\tconst recentItem = { dialogId, dialog, dateMessage };\n\n\t\tif (isUser)\n\t\t{\n\t\t\trecentItem.user = this.#store.getters['users/get'](dialogId, true);\n\t\t}\n\n\t\treturn recentItem;\n\t}\n\n\t#searchByQueryWords(localItem: LocalSearchItem, queryWords: string[]): boolean\n\t{\n\t\tif (localItem.user)\n\t\t{\n\t\t\treturn this.#searchByUserFields(localItem, queryWords);\n\t\t}\n\n\t\treturn this.#searchByDialogFields(localItem, queryWords);\n\t}\n\n\t#searchByDialogFields(localItem: LocalSearchItem, queryWords: string[]): boolean\n\t{\n\t\tconst searchField = [];\n\n\t\tif (localItem.dialog.name)\n\t\t{\n\t\t\tconst dialogNameWords = Utils.text.getWordsFromString(localItem.dialog.name.toLowerCase());\n\t\t\tsearchField.push(...dialogNameWords);\n\t\t}\n\n\t\treturn this.#doesItemMatchQuery(searchField, queryWords);\n\t}\n\n\t#searchByUserFields(localItem: LocalSearchItem, queryWords: string[]): boolean\n\t{\n\t\tconst searchField = [];\n\n\t\tif (localItem.user.name)\n\t\t{\n\t\t\tconst userNameWords = Utils.text.getWordsFromString(localItem.user.name.toLowerCase());\n\t\t\tsearchField.push(...userNameWords);\n\t\t}\n\n\t\tif (localItem.user.workPosition)\n\t\t{\n\t\t\tconst workPositionWords = Utils.text.getWordsFromString(localItem.user.workPosition.toLowerCase());\n\t\t\tsearchField.push(...workPositionWords);\n\t\t}\n\n\t\treturn this.#doesItemMatchQuery(searchField, queryWords);\n\t}\n\n\t#doesItemMatchQuery(fieldsForSearch: string[], queryWords: string[]): boolean\n\t{\n\t\tlet found = 0;\n\t\tqueryWords.forEach((queryWord) => {\n\t\t\tlet queryWordsMatchCount = 0;\n\t\t\tfieldsForSearch.forEach((field) => {\n\t\t\t\tconst word = field.slice(0, queryWord.length);\n\t\t\t\tif (collator.compare(queryWord, word) === 0)\n\t\t\t\t{\n\t\t\t\t\tqueryWordsMatchCount++;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (queryWordsMatchCount > 0)\n\t\t\t{\n\t\t\t\tfound++;\n\t\t\t}\n\t\t});\n\n\t\treturn found >= queryWords.length;\n\t}\n\n\t#getLocalItems(localCollection: SearchResultItem[]): LocalSearchItem[]\n\t{\n\t\tconst recentItems = this.#getRecentListItems();\n\t\tconst localItems = this.#getLocalItemsFromDialogIds(localCollection);\n\n\t\treturn this.#mergeItems(localItems, recentItems);\n\t}\n\n\t#getLocalItemsFromDialogIds(localCollection: SearchResultItem[]): LocalSearchItem[]\n\t{\n\t\treturn localCollection.map((item) => {\n\t\t\treturn this.#prepareRecentItem(item.dialogId, item.dateMessage);\n\t\t});\n\t}\n\n\t#mergeItems(items1: LocalSearchItem[], items2: LocalSearchItem[]): LocalSearchItem[]\n\t{\n\t\tconst itemsMap = new Map();\n\t\tconst mergedArray = [...items1, ...items2];\n\n\t\tfor (const recentItem of mergedArray)\n\t\t{\n\t\t\tif (!itemsMap.has(recentItem.dialogId))\n\t\t\t{\n\t\t\t\titemsMap.set(recentItem.dialogId, recentItem);\n\t\t\t}\n\t\t}\n\n\t\treturn [...itemsMap.values()];\n\t}\n\n\t#filterByConfig(items: SearchResultItem[]): SearchResultItem[]\n\t{\n\t\tif (!this.#searchConfig)\n\t\t{\n\t\t\treturn items;\n\t\t}\n\n\t\treturn items.filter((item) => {\n\t\t\tif (this.#searchConfig.chats && item.dialogId.startsWith('chat'))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn !item.dialogId.startsWith('chat') && this.#searchConfig.users;\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { ChatType, UserType } from 'im.v2.const';\n\nimport { getRecentListItems } from './get-recent-items';\n\nimport type { SearchResultItem } from '../types/types';\nimport type { ImModelChat, ImModelUser } from 'im.v2.model';\n\nconst MAX_USERS_IN_RECENT_SEARCH_LIST = 50;\n\nexport function getUsersFromRecentItems({ withFakeUsers }: {withFakeUsers: boolean}): SearchResultItem[]\n{\n\treturn getRecentListItems({ withFakeUsers }).filter(({ dialogId }) => {\n\t\tconst chat: ImModelChat = Core.getStore().getters['chats/get'](dialogId, true);\n\t\tconst user: ImModelUser = Core.getStore().getters['users/get'](dialogId, true);\n\n\t\treturn chat.type === ChatType.user && user.type !== UserType.bot && user.id !== Core.getUserId();\n\t}).slice(0, MAX_USERS_IN_RECENT_SEARCH_LIST);\n}\n","import { Core } from 'im.v2.application.core';\nimport { ChatType, UserType } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport type { ImModelChat, ImModelUser } from 'im.v2.model';\nimport type { SearchResultItem } from 'im.v2.lib.search';\n\nexport const sortByDate = (items: SearchResultItem[]): SearchResultItem[] => {\n\treturn [...items].sort((firstItem, secondItem) => {\n\t\t// Both items have dates - compare them\n\t\tif (firstItem.dateMessage && secondItem.dateMessage)\n\t\t{\n\t\t\treturn Utils.date.cast(secondItem.dateMessage) - Utils.date.cast(firstItem.dateMessage);\n\t\t}\n\n\t\t// Only one item has a date - item with date comes first\n\t\tif (firstItem.dateMessage || secondItem.dateMessage)\n\t\t{\n\t\t\treturn firstItem.dateMessage ? -1 : 1;\n\t\t}\n\n\t\t// Case 3: Neither item has a date - non-extranet item comes first\n\t\tconst firstIsExtranet = isExtranet(firstItem.dialogId);\n\t\tconst secondIsExtranet = isExtranet(secondItem.dialogId);\n\t\tif (firstIsExtranet !== secondIsExtranet)\n\t\t{\n\t\t\treturn firstIsExtranet ? 1 : -1;\n\t\t}\n\n\t\treturn 0;\n\t});\n};\n\nconst isExtranet = (dialogId: string): boolean => {\n\tconst dialog: ImModelChat = Core.getStore().getters['chats/get'](dialogId);\n\tif (!dialog)\n\t{\n\t\treturn false;\n\t}\n\n\tif (dialog.type === ChatType.user)\n\t{\n\t\tconst user: ImModelUser = Core.getStore().getters['users/get'](dialogId);\n\n\t\treturn user && user.type === UserType.extranet;\n\t}\n\n\treturn dialog.extranet;\n};\n"],"names":["EntityId","ContextId","SearchDialogId","getSearchConfig","searchConfig","entity","id","dynamicLoad","dynamicSearch","options","prepareConfigOptions","dialog","entities","preselectedItems","clearUnavailableItems","context","withChatByUsers","exclude","Type","isBoolean","chats","push","users","StoreUpdater","constructor","Core","getStore","UserManager","update","items","Promise","all","setUsersToModel","dispatch","result","forEach","item","chatData","customData","chat","entityType","SearchEntityIdTypes","imUser","user","isUser","Boolean","userData","getDialogForUser","dialogId","getRecentItemDate","message","getters","date","toISOString","getRecentListItems","withFakeUsers","recent","filter","isFakeElement","isBirthdayPlaceholder","map","dateMessage","collator","Intl","Collator","undefined","sensitivity","LocalSearch","search","query","localCollection","localItems","queryWords","Utils","text","getWordsFromString","foundItems","Map","localItem","set","values","type","ChatType","recentItem","searchField","name","dialogNameWords","toLowerCase","userNameWords","workPosition","workPositionWords","fieldsForSearch","found","queryWord","queryWordsMatchCount","field","word","slice","length","compare","recentItems","items1","items2","itemsMap","mergedArray","has","startsWith","MAX_USERS_IN_RECENT_SEARCH_LIST","getUsersFromRecentItems","UserType","bot","getUserId","sortByDate","sort","firstItem","secondItem","cast","firstIsExtranet","isExtranet","secondIsExtranet","extranet"],"mappings":"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"}