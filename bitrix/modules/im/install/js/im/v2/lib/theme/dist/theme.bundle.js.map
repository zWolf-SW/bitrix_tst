{"version":3,"file":"theme.bundle.js","sources":["../src/color-scheme.js","../src/theme.js"],"sourcesContent":["export const ThemeType = Object.freeze({\n\tlight: 'light',\n\tdark: 'dark',\n});\n\nexport const SelectableBackground = Object.freeze({\n\t// dark ones\n\t1: {\n\t\tcolor: '#9fcfff',\n\t\ttype: ThemeType.dark,\n\t},\n\t2: {\n\t\tcolor: '#81d8bf',\n\t\ttype: ThemeType.dark,\n\t},\n\t3: {\n\t\tcolor: '#7fadd1',\n\t\ttype: ThemeType.dark,\n\t},\n\t4: {\n\t\tcolor: '#7a90b6',\n\t\ttype: ThemeType.dark,\n\t},\n\t5: {\n\t\tcolor: '#5f9498',\n\t\ttype: ThemeType.dark,\n\t},\n\t6: {\n\t\tcolor: '#799fe1',\n\t\ttype: ThemeType.dark,\n\t},\n\t// light ones\n\t7: {\n\t\tcolor: '#cfeefa',\n\t\ttype: ThemeType.light,\n\t},\n\t9: {\n\t\tcolor: '#efded3',\n\t\ttype: ThemeType.light,\n\t},\n\t11: {\n\t\tcolor: '#eff4f6',\n\t\ttype: ThemeType.light,\n\t},\n});\n\nexport const SpecialBackgroundId = {\n\tcollab: 'collab',\n\tmartaAI: 'martaAI',\n\tcopilot: 'copilot',\n};\n\nconst COPILOT_BACKGROUND_ID = 4;\nexport const SpecialBackground = {\n\t[SpecialBackgroundId.collab]: {\n\t\tcolor: '#76c68b',\n\t\ttype: ThemeType.dark,\n\t},\n\t[SpecialBackgroundId.martaAI]: {\n\t\tcolor: '#4596f9',\n\t\ttype: ThemeType.dark,\n\t},\n\t[SpecialBackgroundId.copilot]: SelectableBackground[COPILOT_BACKGROUND_ID],\n};\n\nexport const ImageFileByBackgroundId = {\n\t[SpecialBackgroundId.collab]: 'collab-v2',\n\t[SpecialBackgroundId.martaAI]: 'marta-ai',\n\t[SpecialBackgroundId.copilot]: COPILOT_BACKGROUND_ID.toString(),\n};\n\nexport type BackgroundItem = {\n\tcolor: string,\n\ttype: $Values<typeof ThemeType>\n};\n","import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, Settings } from 'im.v2.const';\n\nimport {\n\tSelectableBackground,\n\tSpecialBackground,\n\tSpecialBackgroundId,\n\tThemeType,\n\tImageFileByBackgroundId,\n} from './color-scheme';\n\nimport type { BackgroundItem } from './color-scheme';\n\nexport { SelectableBackground, SpecialBackgroundId as SpecialBackground, ThemeType, ThemeManager };\n\nconst IMAGE_FOLDER_PATH = '/bitrix/js/im/images/chat-v2-background';\n\nexport type BackgroundStyle = {\n\tbackgroundColor: string,\n\tbackgroundImage: string,\n\tbackgroundRepeat: string,\n\tbackgroundSize: string\n};\n\nconst BackgroundPatternColor = Object.freeze({\n\twhite: 'white',\n\tgray: 'gray',\n});\n\nconst ThemeManager = {\n\tisLightTheme(): boolean\n\t{\n\t\tconst selectedBackgroundId = Core.getStore().getters['application/settings/get'](Settings.appearance.background);\n\t\tconst selectedColorScheme: BackgroundItem = SelectableBackground[selectedBackgroundId];\n\n\t\treturn selectedColorScheme?.type === ThemeType.light;\n\t},\n\n\tisDarkTheme(): boolean\n\t{\n\t\tconst selectedBackgroundId = Core.getStore().getters['application/settings/get'](Settings.appearance.background);\n\t\tconst selectedColorScheme: BackgroundItem = SelectableBackground[selectedBackgroundId];\n\n\t\treturn selectedColorScheme?.type === ThemeType.dark;\n\t},\n\n\tgetCurrentBackgroundStyle(dialogId?: string): BackgroundStyle\n\t{\n\t\tconst backgroundId = resolveBackgroundId(dialogId);\n\n\t\treturn this.getBackgroundStyleById(backgroundId);\n\t},\n\n\tgetBackgroundStyleById(backgroundId: string | number): BackgroundStyle\n\t{\n\t\tconst backgroundsList = { ...SelectableBackground, ...SpecialBackground };\n\t\tconst colorScheme: BackgroundItem = backgroundsList[backgroundId];\n\t\tif (!colorScheme)\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst patternColor = colorScheme.type === ThemeType.light\n\t\t\t? BackgroundPatternColor.gray\n\t\t\t: BackgroundPatternColor.white\n\t\t;\n\n\t\tconst fileName = ImageFileByBackgroundId[backgroundId] ?? backgroundId;\n\t\tconst patternImage = `url('${IMAGE_FOLDER_PATH}/pattern-${patternColor}.svg')`;\n\t\tconst highlightImage = `url('${IMAGE_FOLDER_PATH}/${fileName}.png')`;\n\n\t\treturn {\n\t\t\tbackgroundColor: colorScheme.color,\n\t\t\tbackgroundImage: `${patternImage}, ${highlightImage}`,\n\t\t\tbackgroundPosition: 'top right, center',\n\t\t\tbackgroundRepeat: 'repeat, no-repeat',\n\t\t\tbackgroundSize: 'auto, cover',\n\t\t};\n\t},\n};\n\n/** Background selection priority:\n * 1. If there is no dialog context: user selected background (from user settings)\n * 2. Background by chat type (collab/copilot)\n * 3. Chat background (from chat fields)\n * 4. Bot background (from bot fields)\n * 5. User selected background (from user settings)\n */\nconst resolveBackgroundId = (dialogId?: string): string => {\n\tconst userBackground = Core.getStore().getters['application/settings/get'](Settings.appearance.background);\n\tif (!Type.isStringFilled(dialogId))\n\t{\n\t\treturn userBackground;\n\t}\n\n\tconst chatType = Core.getStore().getters['chats/get'](dialogId, true).type;\n\tif (chatType === ChatType.collab)\n\t{\n\t\treturn SpecialBackgroundId.collab;\n\t}\n\n\tif (chatType === ChatType.copilot)\n\t{\n\t\treturn SpecialBackgroundId.copilot;\n\t}\n\n\tconst chatBackground = Core.getStore().getters['chats/getBackgroundId'](dialogId);\n\tconst botBackground = Core.getStore().getters['users/bots/getBackgroundId'](dialogId);\n\tif (SpecialBackgroundId[chatBackground])\n\t{\n\t\treturn SpecialBackgroundId[chatBackground];\n\t}\n\n\tif (SpecialBackgroundId[botBackground])\n\t{\n\t\treturn SpecialBackgroundId[botBackground];\n\t}\n\n\treturn userBackground;\n};\n"],"names":["ThemeType","Object","freeze","light","dark","SelectableBackground","color","type","SpecialBackgroundId","collab","martaAI","copilot","COPILOT_BACKGROUND_ID","SpecialBackground","ImageFileByBackgroundId","toString","IMAGE_FOLDER_PATH","BackgroundPatternColor","white","gray","ThemeManager","isLightTheme","selectedBackgroundId","Core","getStore","getters","Settings","appearance","background","selectedColorScheme","isDarkTheme","getCurrentBackgroundStyle","dialogId","backgroundId","resolveBackgroundId","getBackgroundStyleById","backgroundsList","colorScheme","patternColor","fileName","patternImage","highlightImage","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","userBackground","Type","isStringFilled","chatType","ChatType","chatBackground","botBackground"],"mappings":"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"}