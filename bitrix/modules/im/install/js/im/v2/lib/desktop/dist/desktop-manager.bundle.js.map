{"version":3,"file":"desktop-manager.bundle.js","sources":["../src/classes/check-utils.js","../src/classes/conference.js","../src/classes/encoder.js","../src/helpers/bx-link-processor.js","../src/classes/event-handlers/bx-link.js","../src/classes/event-handlers/auth.js","../src/classes/event-handlers/status.js","../src/classes/event-handlers/counter.js","../src/classes/event-handlers/hotkey.js","../src/classes/event-handlers/new-tab.js","../src/helpers/slider-bindings.js","../src/helpers/data-updater.js","../src/classes/event-handlers/wake-up.js","../src/classes/reload-checker.js","../src/classes/chat-window.js","../src/classes/browser-window.js","../src/classes/broadcast-manager.js","../src/desktop-manager.js"],"sourcesContent":["import { Dom, Extension } from 'main.core';\n\nconst IMAGE_DESKTOP_RUN = 'icon.png';\nconst IMAGE_DESKTOP_TWO_WINDOW_MODE = 'internal.png';\n\nconst IMAGE_CHECK_URL = 'http://127.0.0.1:20141';\nconst IMAGE_CHECK_TIMEOUT = 500;\nconst IMAGE_CLASS = 'bx-im-messenger__out-of-view';\n\nconst checkTimeoutList = {};\n\nexport const CheckUtils = {\n\ttestImageLoad(image = IMAGE_DESKTOP_RUN): Promise<boolean>\n\t{\n\t\tlet resolvePromise = null;\n\n\t\tconst loadCheckPromise = new Promise((resolve) => {\n\t\t\tresolvePromise = resolve;\n\t\t});\n\n\t\tconst dateCheck = Date.now();\n\t\tlet isPromiseResolvedToFalse = false;\n\n\t\tconst imageForCheck = Dom.create({\n\t\t\ttag: 'img',\n\t\t\tattrs: {\n\t\t\t\tsrc: `${IMAGE_CHECK_URL}/${image}?${dateCheck}`,\n\t\t\t\t'data-id': dateCheck,\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tclassName: IMAGE_CLASS,\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\terror() {\n\t\t\t\t\tif (isPromiseResolvedToFalse)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst checkId = this.dataset.id;\n\t\t\t\t\tresolvePromise(false);\n\n\t\t\t\t\tclearTimeout(checkTimeoutList[checkId]);\n\t\t\t\t\tDom.remove(this);\n\t\t\t\t},\n\t\t\t\tload() {\n\t\t\t\t\tconst checkId = this.dataset.id;\n\t\t\t\t\tresolvePromise(true);\n\n\t\t\t\t\tclearTimeout(checkTimeoutList[checkId]);\n\t\t\t\t\tDom.remove(this);\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\tdocument.body.append(imageForCheck);\n\n\t\tcheckTimeoutList[dateCheck] = setTimeout(() => {\n\t\t\tisPromiseResolvedToFalse = true;\n\n\t\t\tresolvePromise(false);\n\t\t\tDom.remove(imageForCheck);\n\t\t}, IMAGE_CHECK_TIMEOUT);\n\n\t\treturn loadCheckPromise;\n\t},\n\n\ttestInternetConnection(): Promise\n\t{\n\t\tconst currentTimestamp = Date.now();\n\n\t\tconst settings = Extension.getSettings('im.v2.lib.desktop');\n\t\tconst internetCheckUrl = settings.get('internetCheckUrl');\n\n\t\treturn new Promise((resolve) => {\n\t\t\tfetch(`${internetCheckUrl}.${currentTimestamp}`)\n\t\t\t\t.then((response: Response) => {\n\t\t\t\t\tif (response.status === 200)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(true);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(false);\n\t\t\t\t});\n\t\t});\n\t},\n\n\tIMAGE_DESKTOP_RUN,\n\tIMAGE_DESKTOP_TWO_WINDOW_MODE,\n};\n","import { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Loc, Reflection } from 'main.core';\n\nlet conferenceList = [];\nlet conferenceIndex = 0;\n\nexport const Conference = {\n\topenConference(code: string): boolean\n\t{\n\t\tif (!Utils.conference.isValidCode(code))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!DesktopApi.isDesktop())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet windowSize = null;\n\n\t\tconst sizes = [\n\t\t\t{ width: 2560, height: 1440 },\n\t\t\t{ width: 2048, height: 1152 },\n\t\t\t{ width: 1920, height: 1080 },\n\t\t\t{ width: 1600, height: 900 },\n\t\t\t{ width: 1366, height: 768 },\n\t\t\t{ width: 1024, height: 576 },\n\t\t];\n\n\t\tfor (const size of sizes)\n\t\t{\n\t\t\twindowSize = size;\n\t\t\tif (screen.width > size.width && screen.height > size.height)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconferenceList = conferenceList.filter((name) => {\n\t\t\treturn Boolean(DesktopApi.findWindow(name));\n\t\t});\n\n\t\tconferenceList.push(Utils.conference.getWindowNameByCode(code));\n\n\t\tDesktopApi.createWindow(Utils.conference.getWindowNameByCode(code), (controller) => {\n\t\t\tcontroller.SetProperty('title', Loc.getMessage('IM_LIB_DESKTOP_CONFERENCE_TITLE'));\n\t\t\tcontroller.SetProperty('clientSize', { Width: windowSize.width, Height: windowSize.height });\n\n\t\t\t// we need the first 'center' command to prevent the window from jumping after we show it\n\t\t\tcontroller.ExecuteCommand('center');\n\t\t\tcontroller.SetProperty('minClientSize', { Width: 940, Height: 400 });\n\t\t\tcontroller.SetProperty('backgroundColor', '#2B3038');\n\t\t\tcontroller.ExecuteCommand('html.load', `<script>location.href=\"/desktop_app/router.php?alias=${code}&videoconf\";</script>`);\n\t\t\tcontroller.ExecuteCommand('show');\n\n\t\t\t// we need the second 'center' command because we know the exact size of the window after we show it\n\t\t\tcontroller.ExecuteCommand('center');\n\t\t});\n\n\t\treturn true;\n\t},\n\ttoggleConference(): boolean\n\t{\n\t\tif (conferenceIndex > conferenceList.length - 1)\n\t\t{\n\t\t\tconferenceIndex = 0;\n\n\t\t\tDesktopApi.showWindow();\n\n\t\t\treturn true;\n\t\t}\n\n\t\tconferenceList = conferenceList.filter((name) => {\n\t\t\treturn Boolean(DesktopApi.findWindow(name));\n\t\t});\n\n\t\tfor (let index = conferenceIndex; index < conferenceList.length; index++)\n\t\t{\n\t\t\tconferenceIndex++;\n\n\t\t\tconst target = DesktopApi.findWindow(conferenceList[index]);\n\t\t\tif (target)\n\t\t\t{\n\t\t\t\tDesktopApi.activateWindow(target);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n};\n","import {Type} from 'main.core';\n\nconst ENCODE_SEPARATOR = '!!';\n\nexport const Encoder = {\n\tencodeParams(params: {[key]: any}): string\n\t{\n\t\tif (!Type.isPlainObject(params))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet result = '';\n\t\tconst first = true;\n\n\t\tObject.entries(params).forEach(([key, value]) => {\n\t\t\tconst prefix = first ? '' : ENCODE_SEPARATOR;\n\t\t\tresult += `${prefix}${key}${ENCODE_SEPARATOR}${value}`;\n\t\t});\n\n\t\treturn result;\n\t},\n\n\tdecodeParams(encodedParams: string): {[key]: any}\n\t{\n\t\tconst result = {};\n\t\tif (!Type.isStringFilled(encodedParams))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tconst chunks = encodedParams.split(ENCODE_SEPARATOR);\n\t\tfor (let i = 0; i < chunks.length; i += 2)\n\t\t{\n\t\t\tconst key = chunks[i];\n\t\t\tconst value = chunks[i+1];\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tencodeParamsJson(params): string\n\t{\n\t\tif (!Type.isPlainObject(params))\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\n\t\tlet result = '';\n\t\ttry\n\t\t{\n\t\t\tresult = encodeURIComponent(JSON.stringify(params));\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('DesktopUtils: could not encode params.', error);\n\t\t\tresult = '{}';\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tdecodeParamsJson(encodedParams: string): {[key]: any}\n\t{\n\t\tlet result = {};\n\t\tif (!Type.isStringFilled(encodedParams))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tresult = JSON.parse(decodeURIComponent(encodedParams));\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('DesktopUtils: could not decode encoded params.', error);\n\t\t}\n\n\t\treturn result;\n\t}\n};","import { Messenger } from 'im.public';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { DesktopBxLink, LegacyDesktopBxLink } from 'im.v2.const';\nimport { DesktopManager } from 'im.v2.lib.desktop';\n\nimport { Encoder } from '../classes/encoder';\n\nimport type { DesktopBxLinkKey, LegacyDesktopBxLinkKey, RawParams } from '../classes/event-handlers/bx-link';\n\nexport const BxLinkProcessor = {\n\thandleCommand(command: DesktopBxLinkKey, rawParams: ?RawParams): void\n\t{\n\t\tconst params = rawParams ?? {};\n\n\t\tObject.entries(params).forEach(([key, value]) => {\n\t\t\tparams[key] = decodeURIComponent(value);\n\t\t});\n\n\t\tif (command !== DesktopBxLink.openPage && !DesktopApi.isAirDesignEnabledInDesktop())\n\t\t{\n\t\t\tDesktopApi.activateWindow();\n\t\t}\n\n\t\tif (command === DesktopBxLink.chat)\n\t\t{\n\t\t\tconst messageId = params.messageId ?? 0;\n\t\t\tvoid Messenger.openChat(params.dialogId, messageId);\n\t\t}\n\t\telse if (command === DesktopBxLink.lines)\n\t\t{\n\t\t\tvoid Messenger.openLines(params.dialogId);\n\t\t}\n\t\telse if (command === DesktopBxLink.conference)\n\t\t{\n\t\t\tvoid DesktopManager.getInstance().openConference(params.code);\n\t\t}\n\t\telse if (command === DesktopBxLink.call)\n\t\t{\n\t\t\tconst withVideo = params.withVideo !== 'N';\n\t\t\tvoid Messenger.startVideoCall(params.dialogId, withVideo);\n\t\t}\n\t\telse if (command === DesktopBxLink.phone)\n\t\t{\n\t\t\tconst decodedParams = Encoder.decodeParamsJson(params.phoneParams);\n\t\t\tvoid Messenger.startPhoneCall(params.number, decodedParams);\n\t\t}\n\t\telse if (command === DesktopBxLink.callList)\n\t\t{\n\t\t\tconst decodedParams = Encoder.decodeParamsJson(params.callListParams);\n\t\t\tvoid Messenger.startCallList(params.callListId, decodedParams);\n\t\t}\n\t\telse if (command === DesktopBxLink.notifications)\n\t\t{\n\t\t\tvoid Messenger.openNotifications();\n\t\t}\n\t\telse if (command === DesktopBxLink.recentSearch)\n\t\t{\n\t\t\tvoid Messenger.openRecentSearch();\n\t\t}\n\t\telse if (command === DesktopBxLink.copilot)\n\t\t{\n\t\t\tvoid Messenger.openCopilot(params.dialogId);\n\t\t}\n\t\telse if (command === DesktopBxLink.collab)\n\t\t{\n\t\t\tvoid Messenger.openCollab(params.dialogId);\n\t\t}\n\t\telse if (command === DesktopBxLink.settings)\n\t\t{\n\t\t\tvoid Messenger.openSettings({ onlyPanel: params.section });\n\t\t}\n\t\telse if (command === DesktopBxLink.chatCreation)\n\t\t{\n\t\t\tvoid Messenger.openChatCreation(params.chatType);\n\t\t}\n\t\telse if (command === DesktopBxLink.openLayout)\n\t\t{\n\t\t\tconst { id, entityId } = params;\n\n\t\t\tvoid Messenger.openNavigationItem({\n\t\t\t\tid,\n\t\t\t\tentityId,\n\t\t\t});\n\t\t}\n\t\telse if (command === DesktopBxLink.timeManager)\n\t\t{\n\t\t\tBX.Timeman?.Monitor?.openReport();\n\t\t}\n\t\telse if (command === DesktopBxLink.openTab)\n\t\t{\n\t\t\tDesktopApi.setActiveTab();\n\t\t}\n\t\telse if (command === DesktopBxLink.openPage)\n\t\t{\n\t\t\tconst options = Encoder.decodeParamsJson(params.options);\n\t\t\tDesktopApi.openPage(options.url, options.options);\n\t\t}\n\t\telse if (command === DesktopBxLink.botContext)\n\t\t{\n\t\t\tconst { dialogId, context } = params;\n\t\t\tconst decodedContext = Encoder.decodeParamsJson(context);\n\n\t\t\tvoid Messenger.openChatWithBotContext(dialogId, decodedContext);\n\t\t}\n\t},\n\thandleLegacyCommand(command: LegacyDesktopBxLinkKey, rawParams: ?RawParams): void\n\t{\n\t\tconst params = rawParams ?? {};\n\n\t\tObject.entries(params).forEach(([key, value]) => {\n\t\t\tparams[key] = decodeURIComponent(value);\n\t\t});\n\n\t\tif (!DesktopApi.isAirDesignEnabledInDesktop())\n\t\t{\n\t\t\tDesktopApi.activateWindow();\n\t\t}\n\n\t\tif (command === LegacyDesktopBxLink.messenger)\n\t\t{\n\t\t\tif (params.dialog)\n\t\t\t{\n\t\t\t\tvoid Messenger.openChat(params.dialog);\n\t\t\t}\n\t\t\telse if (params.chat)\n\t\t\t{\n\t\t\t\tvoid Messenger.openChat(`chat${params.chat}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvoid Messenger.openChat();\n\t\t\t}\n\t\t}\n\t\telse if (command === LegacyDesktopBxLink.chat && params.id)\n\t\t{\n\t\t\tvoid Messenger.openChat(`chat${params.id}`);\n\t\t}\n\t\telse if (command === LegacyDesktopBxLink.notify)\n\t\t{\n\t\t\tvoid Messenger.openNotifications();\n\t\t}\n\t\telse if (command === LegacyDesktopBxLink.callTo)\n\t\t{\n\t\t\tif (params.video)\n\t\t\t{\n\t\t\t\tvoid Messenger.startVideoCall(params.video);\n\t\t\t}\n\t\t\telse if (params.audio)\n\t\t\t{\n\t\t\t\tvoid Messenger.startVideoCall(params.audio, false);\n\t\t\t}\n\t\t\telse if (params.phone)\n\t\t\t{\n\t\t\t\tvoid Messenger.startPhoneCall(params.phone);\n\t\t\t}\n\t\t}\n\t\telse if (command === LegacyDesktopBxLink.callList)\n\t\t{\n\t\t\tvoid Messenger.openRecentSearch();\n\t\t}\n\t},\n};\n","import { EventType, DesktopBxLink, LegacyDesktopBxLink, DesktopBroadcastAction, WINDOW_ACTIVATION_DELAY } from 'im.v2.const';\nimport { DesktopApi, DesktopFeature } from 'im.v2.lib.desktop-api';\nimport { DesktopBroadcastManager } from 'im.v2.lib.desktop';\n\nimport { BxLinkProcessor } from '../../helpers/bx-link-processor';\n\nexport type DesktopBxLinkKey = $Keys<typeof DesktopBxLink>;\nexport type LegacyDesktopBxLinkKey = $Keys<typeof LegacyDesktopBxLink>;\nexport type RawParams = {\n\tdialogId: string,\n}\n\nexport class BxLinkHandler\n{\n\tstatic init(): BxLinkHandler\n\t{\n\t\treturn new BxLinkHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#subscribeToBxProtocolEvent();\n\t\tthis.#subscribeToLegacyBxProtocolEvent();\n\t}\n\n\t#subscribeToBxProtocolEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onBxLink, async (command: DesktopBxLinkKey, rawParams: ?RawParams) => {\n\t\t\tif (!DesktopApi.isAirDesignEnabledInDesktop())\n\t\t\t{\n\t\t\t\tBxLinkProcessor.handleCommand(command, rawParams);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tDesktopApi.showBrowserWindow();\n\n\t\t\tif (DesktopApi.isFeatureSupported(DesktopFeature.portalTabActivation.id))\n\t\t\t{\n\t\t\t\tawait DesktopApi.handlePortalTabActivation();\n\t\t\t}\n\n\t\t\t// delay is needed because desktop window activation takes some time\n\t\t\t// to complete and method is not async by its nature\n\t\t\tsetTimeout(() => {\n\t\t\t\tDesktopBroadcastManager.getInstance().sendActionMessage({\n\t\t\t\t\taction: DesktopBroadcastAction.bxLink,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tcommand,\n\t\t\t\t\t\trawParams,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}, WINDOW_ACTIVATION_DELAY);\n\t\t});\n\t}\n\n\t#subscribeToLegacyBxProtocolEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onBxLink, (command: LegacyDesktopBxLinkKey, rawParams: ?RawParams) => {\n\t\t\tBxLinkProcessor.handleLegacyCommand(command, rawParams);\n\t\t});\n\t}\n}\n","import {EventType, RestMethod} from 'im.v2.const';\nimport {runAction} from 'im.v2.lib.rest';\n\nimport {DesktopApi} from 'im.v2.lib.desktop-api';\n\nexport class AuthHandler\n{\n\tstatic init(): AuthHandler\n\t{\n\t\treturn new AuthHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#subscribeToLogoutEvent();\n\t}\n\n\t#subscribeToLogoutEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onExit, this.#onExit.bind(this));\n\t}\n\n\t#onExit()\n\t{\n\t\trunAction(RestMethod.imV2DesktopLogout)\n\t\t\t.finally(() => {\n\t\t\t\tDesktopApi.shutdown();\n\t\t\t});\n\t}\n}","import { Browser, Event } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { EventType, RestMethod, Settings } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nimport { DesktopManager } from '../../desktop-manager';\n\nexport class StatusHandler\n{\n\tstatic init(): StatusHandler\n\t{\n\t\treturn new StatusHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#subscribeToAwayEvent();\n\t\tthis.#subscribeToFocusEvent();\n\t\tthis.#subscribeToBlurEvent();\n\t\tthis.#subscribeToIconClickEvent();\n\n\t\tthis.#setInitialStatus();\n\t\tthis.#subscribeToStatusChange();\n\t}\n\n\t// region icon click\n\t#subscribeToIconClickEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onIconClick, this.#onIconClick.bind(this));\n\t}\n\n\t#onIconClick()\n\t{\n\t\tDesktopManager.getInstance().toggleConference();\n\t}\n\n\t// endregion icon click\n\n\t// region away\n\t#subscribeToAwayEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onUserAway, this.#onUserAway.bind(this));\n\t}\n\n\t#onUserAway(away: boolean)\n\t{\n\t\tconst method = away ? RestMethod.imUserStatusIdleStart : RestMethod.imUserStatusIdleEnd;\n\t\tCore.getRestClient().callMethod(method)\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(`Desktop: error in ${method}  - ${error}`);\n\t\t\t})\n\t\t;\n\t}\n\t// endregion away\n\n\t// region focus/blur events\n\t#subscribeToFocusEvent()\n\t{\n\t\tEvent.bind(window, 'focus', this.#removeNativeNotifications.bind(this));\n\t}\n\n\t#subscribeToBlurEvent()\n\t{\n\t\t// TODO remove this after refactor notification balloons\n\t\tEvent.bind(window, 'blur', this.#removeNativeNotifications.bind(this));\n\t}\n\n\t#removeNativeNotifications()\n\t{\n\t\tif (!Browser.isWin() || !DesktopApi.isChatWindow())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tDesktopApi.removeNativeNotifications();\n\t}\n\t// endregion focus/blur events\n\n\t// region user status\n\t#setInitialStatus()\n\t{\n\t\tconst status = Core.getStore().getters['application/settings/get'](Settings.user.status);\n\t\tDesktopApi.setIconStatus(status);\n\t}\n\n\t#subscribeToStatusChange()\n\t{\n\t\tconst statusWatcher = (state, getters) => {\n\t\t\treturn getters['application/settings/get'](Settings.user.status);\n\t\t};\n\t\tCore.getStore().watch(statusWatcher, (newStatus: string) => {\n\t\t\tDesktopApi.setIconStatus(newStatus);\n\t\t});\n\t}\n\t// endregion user status\n}\n","import { Core } from 'im.v2.application.core';\nimport { EventType } from 'im.v2.const';\n\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { EventEmitter } from 'main.core.events';\n\nimport type { Store } from 'ui.vue3.vuex';\n\nexport class CounterHandler\n{\n\t#store: Store;\n\n\tstatic init(): CounterHandler\n\t{\n\t\treturn new CounterHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\n\t\tthis.#onCounterChange();\n\t\tthis.#subscribeToCountersChange();\n\t}\n\n\t#subscribeToCountersChange()\n\t{\n\t\tEventEmitter.subscribe(EventType.counter.onNotificationCounterChange, this.#onCounterChange.bind(this));\n\t\tEventEmitter.subscribe(EventType.counter.onChatCounterChange, this.#onCounterChange.bind(this));\n\t}\n\n\t#onCounterChange()\n\t{\n\t\tconst chatCounter = this.#store.getters['counters/getTotalChatCounter'];\n\t\tconst notificationCounter = this.#store.getters['notifications/getCounter'];\n\n\t\tconst isImportant = chatCounter > 0;\n\t\tDesktopApi.setCounter(chatCounter + notificationCounter, isImportant);\n\t}\n}","import { Event } from 'main.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nexport class HotkeyHandler\n{\n\tstatic init(): HotkeyHandler\n\t{\n\t\treturn new HotkeyHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#bindHotkeys();\n\t}\n\n\t#bindHotkeys()\n\t{\n\t\tEvent.bind(window, 'keydown', (event) => {\n\t\t\tconst reloadCombination = Utils.key.isCombination(event, 'Ctrl+R');\n\t\t\tif (reloadCombination)\n\t\t\t{\n\t\t\t\tDesktopApi.reloadWindow();\n\t\t\t\tLogger.desktop('NOTICE: User reload window (hotkey)');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst logFolderCombination = Utils.key.isCombination(event, 'Ctrl+Shift+L');\n\t\t\tif (logFolderCombination)\n\t\t\t{\n\t\t\t\tDesktopApi.openLogsFolder();\n\t\t\t\tLogger.desktop('NOTICE: User open log folder (hotkey)');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst devToolsCombination = Utils.key.isCombination(event, 'Ctrl+Shift+D');\n\t\t\tif (devToolsCombination)\n\t\t\t{\n\t\t\t\tDesktopApi.openDeveloperTools();\n\t\t\t\tLogger.desktop('NOTICE: User open developer tools (hotkey)');\n\t\t\t}\n\t\t});\n\t}\n}\n","import { EventType } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nexport class NewTabHandler\n{\n\tstatic init(): NewTabHandler\n\t{\n\t\treturn new NewTabHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#subscribeToNewTabEvent();\n\t}\n\n\t#subscribeToNewTabEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onNewTabClick, this.#onNewTabClick.bind(this));\n\t}\n\n\t#onNewTabClick()\n\t{\n\t\tDesktopApi.createTab('/desktop/menu/');\n\t}\n}\n","import { DesktopApi } from 'im.v2.lib.desktop-api';\n\nexport const SliderBindings = {\n\tinit()\n\t{\n\t\tconst sliderBindingStatus = DesktopApi.getSliderBindingsStatus();\n\t\tif (sliderBindingStatus)\n\t\t{\n\t\t\tBX.SidePanel.Instance.enableAnchorBinding();\n\n\t\t\treturn;\n\t\t}\n\n\t\tBX.SidePanel.Instance.disableAnchorBinding();\n\t},\n};\n","import { ChatService } from 'im.v2.provider.service.chat';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { RecentService } from 'im.v2.provider.service.recent';\n\nimport type { ImModelLayout } from 'im.v2.model';\n\nexport const DesktopDataUpdater = {\n\tasync reloadChatInfo(): Promise<void>\n\t{\n\t\tawait RecentService.getInstance().requestItems({ firstPage: true });\n\n\t\tconst currentLayout = LayoutManager.getInstance().getLayout();\n\n\t\tif (currentLayout.entityId)\n\t\t{\n\t\t\tawait this.reopenChat(currentLayout);\n\t\t}\n\t},\n\tasync reopenChat(currentLayout: ImModelLayout): Promise<void>\n\t{\n\t\tLayoutManager.getInstance().clearCurrentLayoutEntityId();\n\n\t\tconst chatService = new ChatService();\n\t\tawait chatService.resetChat(currentLayout.entityId);\n\n\t\tvoid LayoutManager.getInstance().setLayout(currentLayout);\n\t},\n};\n","import { Core } from 'im.v2.application.core';\nimport { CallManager } from 'im.v2.lib.call';\nimport { DesktopManager } from 'im.v2.lib.desktop';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { EventType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { DesktopDataUpdater } from '../../helpers/data-updater';\nimport { CheckUtils } from '../check-utils';\n\nexport class WakeUpHandler\n{\n\t#initDate: Date;\n\t#wakeUpTimer = null;\n\tsidePanelManager: Object = BX.SidePanel.Instance;\n\n\tstatic init(): WakeUpHandler\n\t{\n\t\treturn new WakeUpHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#initDate = new Date();\n\n\t\tDesktopApi.subscribe(EventType.desktop.onWakeUp, this.#onWakeUp.bind(this));\n\t}\n\n\tasync #onWakeUp()\n\t{\n\t\tconst hasConnection = await CheckUtils.testInternetConnection();\n\t\tif (!hasConnection)\n\t\t{\n\t\t\tLogger.desktop('StatusHandler: onWakeUp event, no internet connection, delay 60 sec');\n\n\t\t\tclearTimeout(this.#wakeUpTimer);\n\t\t\tthis.#wakeUpTimer = setTimeout(this.#onWakeUp.bind(this), 60 * 1000);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (Utils.date.isSameHour(new Date(), this.#initDate))\n\t\t{\n\t\t\tLogger.desktop('StatusHandler: onWakeUp event, same hour - restart pull client');\n\t\t\tCore.getPullClient().restart();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.sidePanelManager.opened)\n\t\t\t{\n\t\t\t\tclearTimeout(this.#wakeUpTimer);\n\t\t\t\tthis.#wakeUpTimer = setTimeout(this.#onWakeUp.bind(this), 60 * 1000);\n\n\t\t\t\tLogger.desktop('StatusHandler: onWakeUp event, slider is open, delay 60 sec');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (CallManager.getInstance().hasCurrentCall())\n\t\t\t{\n\t\t\t\tclearTimeout(this.#wakeUpTimer);\n\t\t\t\tthis.#wakeUpTimer = setTimeout(this.#onWakeUp.bind(this), 60 * 1000);\n\n\t\t\t\tLogger.desktop('StatusHandler: onWakeUp event, call is active, delay 60 sec');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tLogger.desktop('StatusHandler: onWakeUp event, reload window');\n\n\t\t\tif (!DesktopManager.getInstance().canReloadWindow())\n\t\t\t{\n\t\t\t\tawait DesktopDataUpdater.reloadChatInfo();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tDesktopApi.reloadWindow();\n\t\t}\n\t}\n}\n","import { CallManager } from 'im.v2.lib.call';\nimport { DesktopManager } from 'im.v2.lib.desktop';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nimport { CheckUtils } from './check-utils';\nimport { DesktopDataUpdater } from '../helpers/data-updater';\n\nconst ONE_HOUR = 60 * 60 * 1000;\n\nexport class ReloadChecker\n{\n\t#initDate: Date;\n\t#sidePanelManager: BX.SidePanel.Manager = BX.SidePanel.Instance;\n\n\tstatic init(): ReloadChecker\n\t{\n\t\treturn new ReloadChecker();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#initDate = new Date();\n\t\tthis.#startReloadCheck();\n\t}\n\n\t#startReloadCheck(): void\n\t{\n\t\tsetInterval(async () => {\n\t\t\tconst isReloadNeeded = await this.#isReloadNeeded();\n\n\t\t\tif (!isReloadNeeded)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!DesktopManager.getInstance().canReloadWindow())\n\t\t\t{\n\t\t\t\tawait DesktopDataUpdater.reloadChatInfo();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#reloadWindow();\n\t\t}, ONE_HOUR);\n\t}\n\n\tasync #isReloadNeeded(): Promise<boolean>\n\t{\n\t\tif (Utils.date.isSameDay(new Date(), this.#initDate))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.#sidePanelManager.opened)\n\t\t{\n\t\t\tLogger.desktop('Checker: checkDayForReload, slider is open - delay reload');\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (CallManager.getInstance().hasCurrentCall())\n\t\t{\n\t\t\tLogger.desktop('Checker: checkDayForReload, call is active - delay reload');\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn CheckUtils.testInternetConnection();\n\t}\n\n\t#reloadWindow(): void\n\t{\n\t\tLogger.desktop('Checker: checkDayForReload, new day - reload window');\n\t\tDesktopApi.reloadWindow();\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\n\nimport { Core } from 'im.v2.application.core';\nimport { EventType } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { BxLinkHandler } from './event-handlers/bx-link';\nimport { AuthHandler } from './event-handlers/auth';\nimport { StatusHandler } from './event-handlers/status';\nimport { CounterHandler } from './event-handlers/counter';\nimport { HotkeyHandler } from './event-handlers/hotkey';\nimport { NewTabHandler } from './event-handlers/new-tab';\nimport { SliderBindings } from '../helpers/slider-bindings';\nimport { WakeUpHandler } from './event-handlers/wake-up';\nimport { ReloadChecker } from './reload-checker';\n\n/* eslint-disable no-undef */\nexport class DesktopChatWindow\n{\n\tstatic init(): DesktopChatWindow\n\t{\n\t\treturn new DesktopChatWindow();\n\t}\n\n\tconstructor()\n\t{\n\t\tReloadChecker.init();\n\t\tWakeUpHandler.init();\n\t\tStatusHandler.init();\n\t\tAuthHandler.init();\n\t\tBxLinkHandler.init();\n\t\tCounterHandler.init();\n\t\tHotkeyHandler.init();\n\t\tNewTabHandler.init();\n\t\tSliderBindings.init();\n\n\t\tthis.#sendInitEvent();\n\t\tthis.#subscribeOnErrorEvent();\n\t\tthis.#initComplete();\n\t}\n\n\t#sendInitEvent()\n\t{\n\t\tconst { currentUser } = Core.getApplicationData();\n\t\tDesktopApi.emit(EventType.desktop.onInit, [{\n\t\t\tuserInfo: currentUser ?? {},\n\t\t}]);\n\t}\n\n\t#initComplete()\n\t{\n\t\tDesktopApi.setLogInfo = function(...params)\n\t\t{\n\t\t\tLogger.desktop(...params);\n\t\t};\n\n\t\twindow.BX.debugEnable(true);\n\n\t\tDesktopApi.printWelcomePrompt();\n\t}\n\n\t#subscribeOnErrorEvent()\n\t{\n\t\tEventEmitter.subscribe(EventType.request.onAuthError, () => {\n\t\t\treturn this.#handleInvalidAuthError();\n\t\t});\n\t}\n\n\t#handleInvalidAuthError(): Promise\n\t{\n\t\treturn DesktopApi.login();\n\t}\n}\n","import { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { NewTabHandler } from './event-handlers/new-tab';\nimport { HotkeyHandler } from './event-handlers/hotkey';\nimport { WakeUpHandler } from './event-handlers/wake-up';\nimport { ReloadChecker } from './reload-checker';\nimport { SliderBindings } from '../helpers/slider-bindings';\n\n/* eslint-disable no-undef */\nexport class DesktopBrowserWindow\n{\n\tstatic init(): DesktopBrowserWindow\n\t{\n\t\treturn new DesktopBrowserWindow();\n\t}\n\n\tconstructor()\n\t{\n\t\tif (DesktopApi.isAirDesignEnabledInDesktop())\n\t\t{\n\t\t\tReloadChecker.init();\n\t\t\tWakeUpHandler.init();\n\t\t\tHotkeyHandler.init();\n\t\t\tSliderBindings.init();\n\t\t}\n\n\t\tNewTabHandler.init();\n\n\t\tthis.#initComplete();\n\t}\n\n\t#initComplete()\n\t{\n\t\tDesktopApi.setLogInfo = function(...params)\n\t\t{\n\t\t\tLogger.desktop(...params);\n\t\t};\n\t}\n}\n","import { Event } from 'main.core';\n\nimport { DesktopBroadcastAction } from 'im.v2.const';\nimport { CallManager } from 'im.v2.lib.call';\nimport { MessageNotifierManager } from 'im.v2.lib.message-notifier';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nimport { BxLinkProcessor } from '../helpers/bx-link-processor';\n\nimport type { JsonObject } from 'main.core';\nimport type { NotifierClickParams } from 'im.v2.lib.message-notifier';\nimport type { DesktopBxLinkKey, RawParams } from './event-handlers/bx-link';\n\ntype DesktopBroadcastActionValue = $Values<typeof DesktopBroadcastAction>;\n\ntype ActionMessageEvent = {\n\taction: DesktopBroadcastActionValue,\n\tparams: JsonObject,\n}\n\ntype BxLinkParams = {\n\tcommand: DesktopBxLinkKey,\n\trawParams: ?RawParams\n}\n\nconst CHANNEL_DESKTOP = 'im-channel-desktop';\n\nexport class DesktopBroadcastManager\n{\n\t#actionHandlers = {\n\t\t[DesktopBroadcastAction.notification]: this.#onNotifierClick.bind(this),\n\t\t[DesktopBroadcastAction.answerButtonClick]: this.#onAnswerButtonClick.bind(this),\n\t\t[DesktopBroadcastAction.bxLink]: this.#handleBxLinkCommand.bind(this),\n\t};\n\n\tstatic getInstance(): DesktopBroadcastManager\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tstatic init()\n\t{\n\t\tDesktopBroadcastManager.getInstance();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.initBroadcastHandler();\n\t}\n\n\tinitBroadcastHandler()\n\t{\n\t\tthis.channel = new BroadcastChannel(CHANNEL_DESKTOP);\n\n\t\tif (DesktopApi.isChatWindow())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tEvent.bind(this.channel, 'message', (event: MessageEvent) => {\n\t\t\tconst { data } = event;\n\n\t\t\tif (!DesktopApi.isActiveTab())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst handleAction = this.#actionHandlers[data.action];\n\n\t\t\tif (!handleAction)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thandleAction(data.params);\n\t\t});\n\t}\n\n\tsendActionMessage(message: ActionMessageEvent)\n\t{\n\t\tthis.channel.postMessage(message);\n\t}\n\n\t#onNotifierClick(params: NotifierClickParams)\n\t{\n\t\tMessageNotifierManager.getInstance().onNotifierClick(params);\n\t}\n\n\t#onAnswerButtonClick(params: JsonObject)\n\t{\n\t\tconst { mediaParams, callParams } = params;\n\n\t\tCallManager.getInstance().onAnswerButtonClick(mediaParams, callParams);\n\t}\n\n\t#handleBxLinkCommand(params: BxLinkParams)\n\t{\n\t\tBxLinkProcessor.handleCommand(params.command, params.rawParams);\n\t}\n}\n","import { Extension, Type } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\nimport { BitrixVue } from 'ui.vue3';\n\nimport { Core } from 'im.v2.application.core';\nimport { DesktopBxLink, Settings } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { DesktopApi, DesktopFeature } from 'im.v2.lib.desktop-api';\nimport { DesktopUpdateBanner } from 'im.v2.component.desktop.update-banner';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\n\nimport { CheckUtils } from './classes/check-utils';\nimport { Conference } from './classes/conference';\nimport { DesktopChatWindow } from './classes/chat-window';\nimport { DesktopBrowserWindow } from './classes/browser-window';\nimport { Encoder } from './classes/encoder';\nimport { DesktopBroadcastManager } from './classes/broadcast-manager';\n\nimport type { CreatableChatType } from 'im.v2.component.content.chat-forms.forms';\n\nexport { DesktopBroadcastManager } from './classes/broadcast-manager';\n\nconst DESKTOP_PROTOCOL_VERSION = 2;\nconst LOCATION_RESET_TIMEOUT = 1000;\nconst DESKTOP_VERSION_WITH_AIR_DESIGN_SUPPORT = 17;\nconst BANNER_COMPONENT_NAME = 'update-banner';\n\nexport class DesktopManager\n{\n\tstatic instance: DesktopManager;\n\n\t#desktopIsActive: boolean;\n\t#desktopActiveVersion: number;\n\t#locationChangedToBx = false;\n\t#enableRedirectCounter = 1;\n\n\tstatic getInstance(): DesktopManager\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tstatic init()\n\t{\n\t\tDesktopManager.getInstance();\n\t}\n\n\tstatic isDesktop(): boolean\n\t{\n\t\treturn DesktopApi.isDesktop();\n\t}\n\n\tstatic isChatWindow(): boolean\n\t{\n\t\treturn DesktopApi.isChatWindow();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#initDesktopStatus();\n\n\t\tif (!DesktopManager.isDesktop())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#shouldShowDesktopUpdateBanner())\n\t\t{\n\t\t\tthis.#showDesktopUpdateBanner();\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (DesktopApi.isAirDesignEnabledInDesktop())\n\t\t{\n\t\t\tDesktopBroadcastManager.init();\n\t\t}\n\n\t\tif (DesktopApi.isChatWindow())\n\t\t{\n\t\t\tDesktopChatWindow.init();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDesktopBrowserWindow.init();\n\t\t}\n\t}\n\n\tisDesktopActive(): boolean\n\t{\n\t\tif (DesktopManager.isDesktop())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.#desktopIsActive;\n\t}\n\n\tsetDesktopActive(flag: boolean)\n\t{\n\t\tthis.#desktopIsActive = flag;\n\t}\n\n\tsetDesktopVersion(version: number)\n\t{\n\t\tthis.#desktopActiveVersion = version;\n\t}\n\n\tgetDesktopVersion(): number\n\t{\n\t\treturn this.#desktopActiveVersion;\n\t}\n\n\tisLocationChangedToBx(): boolean\n\t{\n\t\treturn this.#locationChangedToBx;\n\t}\n\n\tcanReloadWindow(): boolean\n\t{\n\t\treturn !DesktopApi.isAirDesignEnabledInDesktop() || LayoutManager.getInstance().isEmbeddedMode();\n\t}\n\n\tredirectToChat(dialogId: string = '', messageId: number = 0): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToChat', dialogId);\n\t\tlet link = `bx://${DesktopBxLink.chat}/dialogId/${dialogId}`;\n\t\tif (messageId > 0)\n\t\t{\n\t\t\tlink += `/messageId/${messageId}`;\n\t\t}\n\t\tthis.openBxLink(link);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToChatWithBotContext(dialogId: string = '', context: Object = {}): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToChatWithBotContext', dialogId);\n\t\tlet link = `bx://${DesktopBxLink.botContext}/dialogId/${dialogId}`;\n\t\tif (!Type.isPlainObject(context))\n\t\t{\n\t\t\treturn Promise.reject();\n\t\t}\n\n\t\tconst preparedContext = Encoder.encodeParamsJson(context);\n\t\tlink += `/context/${preparedContext}`;\n\n\t\tthis.openBxLink(link);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToLines(dialogId: string = ''): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToLines', dialogId);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.lines}/dialogId/${dialogId}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToCopilot(dialogId: string = ''): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToCopilot', dialogId);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.copilot}/dialogId/${dialogId}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToCollab(dialogId: string = ''): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToCollab', dialogId);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.collab}/dialogId/${dialogId}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToNotifications(): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToNotifications');\n\t\tthis.openBxLink(`bx://${DesktopBxLink.notifications}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToRecentSearch(): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToRecentSearch');\n\t\tthis.openBxLink(`bx://${DesktopBxLink.recentSearch}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToConference(code: string): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToConference', code);\n\n\t\tthis.openBxLink(`bx://${DesktopBxLink.conference}/code/${code}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToSettings(sectionName: string): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToSettings', sectionName);\n\n\t\tthis.openBxLink(`bx://${DesktopBxLink.settings}/section/${sectionName}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\topenConference(code: string): Promise\n\t{\n\t\tLogger.warn('Desktop: openConference', code);\n\n\t\tconst result = Conference.openConference(code);\n\t\tif (!result)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n\n\ttoggleConference()\n\t{\n\t\tLogger.warn('Desktop: toggleConference');\n\n\t\tConference.toggleConference();\n\t}\n\n\tredirectToChatCreation(chatType: CreatableChatType): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToChatCreation', chatType);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.chatCreation}/chatType/${chatType}/`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToVideoCall(dialogId: string = '', withVideo: boolean = true): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToVideoCall', dialogId, withVideo);\n\t\tconst withVideoParam = withVideo ? 'Y' : 'N';\n\t\tthis.openBxLink(`bx://${DesktopBxLink.call}/dialogId/${dialogId}/withVideo/${withVideoParam}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToPhoneCall(number: string, params: Object<any, string>): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToPhoneCall', number, params);\n\t\tconst encodedParams = Encoder.encodeParamsJson(params);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.phone}/number/${number}/phoneParams/${encodedParams}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToCallList(callListId: number, params: Object<string, any>): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToCallList', callListId, params);\n\t\tconst encodedParams = Encoder.encodeParamsJson(params);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.callList}/callListId/${callListId}/callListParams/${encodedParams}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\topenAccountTab(domainName: string)\n\t{\n\t\tthis.openBxLink(`bx://v2/${domainName}/${DesktopBxLink.openTab}`);\n\t}\n\n\topenPage(url: string, options: { skipNativeBrowser?: boolean } = {})\n\t{\n\t\tconst encodedParams = Encoder.encodeParamsJson({ url, options });\n\n\t\tthis.openBxLink(`bx://${DesktopBxLink.openPage}/options/${encodedParams}`);\n\t}\n\n\tredirectToLayout({ id, entityId }): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToLayout', id, entityId);\n\t\tconst preparedEntityId = entityId ?? '';\n\t\tthis.openBxLink(`bx://${DesktopBxLink.openLayout}/id/${id}/entityId/${preparedEntityId}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync checkStatusInDifferentContext(): Promise<boolean>\n\t{\n\t\tif (!this.isDesktopActive())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (DesktopApi.isChatWindow())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (DesktopApi.isDesktop() && !DesktopApi.isChatWindow())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn CheckUtils.testImageLoad();\n\t}\n\n\tcheckForRedirect(): Promise<boolean>\n\t{\n\t\tif (!this.isRedirectEnabled() || !this.isRedirectOptionEnabled())\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tif (DesktopApi.isAirDesignEnabledInDesktop())\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn this.checkStatusInDifferentContext();\n\t}\n\n\tasync checkForOpenBrowserPage(): Promise<boolean>\n\t{\n\t\tawait Core.ready();\n\n\t\tif (!this.isDesktopActive() || !this.isRedirectOptionEnabled())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst desktopVersion = this.getDesktopVersion();\n\t\tif (!DesktopApi.isFeatureSupportedInVersion(desktopVersion, DesktopFeature.openPage.id))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn CheckUtils.testImageLoad(CheckUtils.IMAGE_DESKTOP_TWO_WINDOW_MODE);\n\t}\n\n\tisRedirectEnabled(): boolean\n\t{\n\t\treturn this.#enableRedirectCounter > 0;\n\t}\n\n\tenableRedirect()\n\t{\n\t\tthis.#enableRedirectCounter++;\n\t}\n\n\tdisableRedirect()\n\t{\n\t\tthis.#enableRedirectCounter--;\n\t}\n\n\tisRedirectOptionEnabled(): boolean\n\t{\n\t\tif (!FeatureManager.isFeatureAvailable(Feature.isDesktopRedirectAvailable))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (DesktopApi.isDesktop() && !DesktopApi.isChatWindow())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Core.getStore().getters['application/settings/get'](Settings.desktop.enableRedirect);\n\t}\n\n\topenBxLink(rawUrl: string)\n\t{\n\t\tconst preparedUrl = this.#prepareBxUrl(rawUrl);\n\n\t\tthis.#locationChangedToBx = true;\n\t\tsetTimeout(() => {\n\t\t\tconst event = new BaseEvent({ compatData: [] });\n\t\t\tEventEmitter.emit(window, 'BXLinkOpened', event);\n\t\t\tthis.#locationChangedToBx = false;\n\t\t}, LOCATION_RESET_TIMEOUT);\n\n\t\tlocation.href = preparedUrl;\n\t}\n\n\t#prepareBxUrl(url: string): string\n\t{\n\t\tif (/^bx:\\/\\/v(\\d)\\//.test(url))\n\t\t{\n\t\t\treturn url;\n\t\t}\n\n\t\treturn url.replace('bx://', `bx://v${DESKTOP_PROTOCOL_VERSION}/${location.hostname}/`);\n\t}\n\n\t#shouldShowDesktopUpdateBanner(): boolean\n\t{\n\t\tconst isOldDesktopVersion = DesktopApi.getMajorVersion() < DESKTOP_VERSION_WITH_AIR_DESIGN_SUPPORT;\n\n\t\treturn isOldDesktopVersion && DesktopApi.isAirDesignEnabledInDesktop();\n\t}\n\n\t#showDesktopUpdateBanner()\n\t{\n\t\tconst desktopUpdateBanner = BitrixVue.createApp({\n\t\t\tname: BANNER_COMPONENT_NAME,\n\t\t\tcomponents: { DesktopUpdateBanner },\n\t\t\ttemplate: '<DesktopUpdateBanner />',\n\t\t});\n\n\t\tdesktopUpdateBanner.mount(document.body);\n\n\t\tAnalytics.getInstance().desktopUpdateBanner.onShow();\n\t}\n\n\t#initDesktopStatus()\n\t{\n\t\tconst settings = Extension.getSettings('im.v2.lib.desktop');\n\t\tthis.setDesktopActive(settings.get('desktopIsActive'));\n\t\tthis.setDesktopVersion(settings.get('desktopActiveVersion'));\n\t}\n}\n"],"names":["IMAGE_DESKTOP_RUN","IMAGE_DESKTOP_TWO_WINDOW_MODE","IMAGE_CHECK_URL","IMAGE_CHECK_TIMEOUT","IMAGE_CLASS","checkTimeoutList","CheckUtils","testImageLoad","image","resolvePromise","loadCheckPromise","Promise","resolve","dateCheck","Date","now","isPromiseResolvedToFalse","imageForCheck","Dom","create","tag","attrs","src","props","className","events","error","checkId","dataset","id","clearTimeout","remove","load","document","body","append","setTimeout","testInternetConnection","currentTimestamp","settings","Extension","getSettings","internetCheckUrl","get","fetch","then","response","status","catch","conferenceList","conferenceIndex","Conference","openConference","code","Utils","conference","isValidCode","DesktopApi","isDesktop","windowSize","sizes","width","height","size","screen","filter","name","Boolean","findWindow","push","getWindowNameByCode","createWindow","controller","SetProperty","Loc","getMessage","Width","Height","ExecuteCommand","toggleConference","length","showWindow","index","target","activateWindow","ENCODE_SEPARATOR","Encoder","encodeParams","params","Type","isPlainObject","result","Object","entries","forEach","key","value","prefix","first","decodeParams","encodedParams","isStringFilled","chunks","split","i","encodeParamsJson","encodeURIComponent","JSON","stringify","console","decodeParamsJson","parse","decodeURIComponent","BxLinkProcessor","handleCommand","command","rawParams","DesktopBxLink","openPage","isAirDesignEnabledInDesktop","chat","messageId","Messenger","openChat","dialogId","lines","openLines","DesktopManager","getInstance","call","withVideo","startVideoCall","phone","decodedParams","phoneParams","startPhoneCall","number","callList","callListParams","startCallList","callListId","notifications","openNotifications","recentSearch","openRecentSearch","copilot","openCopilot","collab","openCollab","openSettings","onlyPanel","section","chatCreation","openChatCreation","chatType","openLayout","entityId","openNavigationItem","timeManager","BX","Timeman","Monitor","openReport","openTab","setActiveTab","options","url","botContext","context","decodedContext","openChatWithBotContext","handleLegacyCommand","LegacyDesktopBxLink","messenger","dialog","notify","callTo","video","audio","BxLinkHandler","init","constructor","subscribe","EventType","desktop","onBxLink","showBrowserWindow","isFeatureSupported","DesktopFeature","portalTabActivation","handlePortalTabActivation","DesktopBroadcastManager","sendActionMessage","action","DesktopBroadcastAction","bxLink","WINDOW_ACTIVATION_DELAY","AuthHandler","onExit","bind","runAction","RestMethod","imV2DesktopLogout","finally","shutdown","StatusHandler","onIconClick","onUserAway","away","method","imUserStatusIdleStart","imUserStatusIdleEnd","Core","getRestClient","callMethod","Event","window","Browser","isWin","isChatWindow","removeNativeNotifications","getStore","getters","Settings","user","setIconStatus","statusWatcher","state","watch","newStatus","CounterHandler","EventEmitter","counter","onNotificationCounterChange","onChatCounterChange","chatCounter","notificationCounter","isImportant","setCounter","HotkeyHandler","event","reloadCombination","isCombination","reloadWindow","Logger","logFolderCombination","openLogsFolder","devToolsCombination","openDeveloperTools","NewTabHandler","onNewTabClick","createTab","SliderBindings","sliderBindingStatus","getSliderBindingsStatus","SidePanel","Instance","enableAnchorBinding","disableAnchorBinding","DesktopDataUpdater","reloadChatInfo","RecentService","requestItems","firstPage","currentLayout","LayoutManager","getLayout","reopenChat","clearCurrentLayoutEntityId","chatService","ChatService","resetChat","setLayout","WakeUpHandler","sidePanelManager","onWakeUp","hasConnection","date","isSameHour","getPullClient","restart","opened","CallManager","hasCurrentCall","canReloadWindow","ONE_HOUR","ReloadChecker","setInterval","isReloadNeeded","isSameDay","DesktopChatWindow","currentUser","getApplicationData","emit","onInit","userInfo","setLogInfo","debugEnable","printWelcomePrompt","request","onAuthError","login","DesktopBrowserWindow","CHANNEL_DESKTOP","instance","notification","answerButtonClick","initBroadcastHandler","channel","BroadcastChannel","data","isActiveTab","handleAction","message","postMessage","MessageNotifierManager","onNotifierClick","mediaParams","callParams","onAnswerButtonClick","DESKTOP_PROTOCOL_VERSION","LOCATION_RESET_TIMEOUT","DESKTOP_VERSION_WITH_AIR_DESIGN_SUPPORT","BANNER_COMPONENT_NAME","isDesktopActive","setDesktopActive","flag","setDesktopVersion","version","getDesktopVersion","isLocationChangedToBx","isEmbeddedMode","redirectToChat","warn","link","openBxLink","redirectToChatWithBotContext","reject","preparedContext","redirectToLines","redirectToCopilot","redirectToCollab","redirectToNotifications","redirectToRecentSearch","redirectToConference","redirectToSettings","sectionName","redirectToChatCreation","redirectToVideoCall","withVideoParam","redirectToPhoneCall","redirectToCallList","openAccountTab","domainName","redirectToLayout","preparedEntityId","checkStatusInDifferentContext","checkForRedirect","isRedirectEnabled","isRedirectOptionEnabled","checkForOpenBrowserPage","ready","desktopVersion","isFeatureSupportedInVersion","enableRedirect","disableRedirect","FeatureManager","isFeatureAvailable","Feature","isDesktopRedirectAvailable","rawUrl","preparedUrl","BaseEvent","compatData","location","href","test","replace","hostname","isOldDesktopVersion","getMajorVersion","desktopUpdateBanner","BitrixVue","createApp","components","DesktopUpdateBanner","template","mount","Analytics","onShow"],"mappings":"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"}