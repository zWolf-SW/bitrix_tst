{"version":3,"file":"sidebar.bundle.js","sources":["../src/configs/base.js","../src/classes/block-filter.js","../src/classes/config.js","../src/configs/chat.js","../src/configs/user.js","../src/configs/bot.js","../src/configs/notes.js","../src/configs/lines.js","../src/configs/collab.js","../src/configs/support.js","../src/configs/comment.js","../src/configs/channel.js","../src/configs/copilot.js","../src/sidebar.js"],"sourcesContent":["import { SidebarMainPanelBlock } from 'im.v2.const';\n\nexport const baseBlocks = [\n\tSidebarMainPanelBlock.chat,\n\tSidebarMainPanelBlock.tariffLimit,\n\tSidebarMainPanelBlock.info,\n\tSidebarMainPanelBlock.fileList,\n\tSidebarMainPanelBlock.fileUnsortedList,\n\tSidebarMainPanelBlock.taskList,\n\tSidebarMainPanelBlock.meetingList,\n\tSidebarMainPanelBlock.marketAppList,\n];\n","import { Core } from 'im.v2.application.core';\nimport { ChatType, PlacementType, SidebarMainPanelBlock } from 'im.v2.const';\nimport { ChannelManager } from 'im.v2.lib.channel';\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\nimport { MarketManager } from 'im.v2.lib.market';\n\nimport type { ImModelChat } from 'im.v2.model';\nimport type { SidebarMainPanelBlockType } from 'im.v2.const';\n\nexport class BlockFilter\n{\n\t#dialogId: string;\n\t#chat: ImModelChat;\n\t#blocks: SidebarMainPanelBlockType[];\n\n\tconstructor(dialogId: string, blocks: SidebarMainPanelBlockType[])\n\t{\n\t\tthis.#dialogId = dialogId;\n\t\tthis.#chat = Core.getStore().getters['chats/get'](dialogId, true);\n\t\tthis.#blocks = blocks;\n\t}\n\n\trun(): SidebarMainPanelBlockType[]\n\t{\n\t\tconst blocksSet = new Set(this.#blocks);\n\n\t\tif (this.#isFileMigrationFinished())\n\t\t{\n\t\t\tblocksSet.delete(SidebarMainPanelBlock.fileUnsortedList);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tblocksSet.delete(SidebarMainPanelBlock.fileList);\n\t\t}\n\n\t\tif (!this.#hasMarketApps())\n\t\t{\n\t\t\tblocksSet.delete(SidebarMainPanelBlock.marketAppList);\n\t\t}\n\n\t\tif (!this.#hasHistoryLimit())\n\t\t{\n\t\t\tblocksSet.delete(SidebarMainPanelBlock.tariffLimit);\n\t\t}\n\n\t\treturn [...blocksSet];\n\t}\n\n\t#isFileMigrationFinished(): boolean\n\t{\n\t\treturn FeatureManager.isFeatureAvailable(Feature.sidebarFiles);\n\t}\n\n\t#hasMarketApps(): boolean\n\t{\n\t\treturn MarketManager.getInstance().getAvailablePlacementsByType(PlacementType.sidebar, this.#dialogId).length > 0;\n\t}\n\n\t#hasHistoryLimit(): boolean\n\t{\n\t\tconst isChannelCommentsChat = ChatType.comment === this.#chat.type;\n\t\tconst isChannelChat = ChannelManager.isChannel(this.#dialogId);\n\n\t\tif (isChannelChat || isChannelCommentsChat || FeatureManager.chatHistory.isAvailable())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Core.getStore().getters['sidebar/hasHistoryLimit'](this.#chat.chatId);\n\t}\n}\n","import { Loc } from 'main.core';\n\nimport { baseBlocks } from '../configs/base';\nimport { BlockFilter } from './block-filter';\n\nimport type { SidebarMainPanelBlockType } from 'im.v2.const';\n\ntype RawConfig = {\n\tblocks: SidebarMainPanelBlockType[],\n\theaderTitle: string,\n\theaderMenuEnabled: boolean,\n};\n\nexport class SidebarConfig\n{\n\t#blocks: SidebarMainPanelBlockType[];\n\t#headerTitle: string;\n\t#headerMenuEnabled: boolean;\n\n\tconstructor(rawConfig: RawConfig = {})\n\t{\n\t\tconst preparedConfig = { ...this.#getDefaultConfig(), ...rawConfig };\n\n\t\tconst { blocks, headerTitle, headerMenuEnabled } = preparedConfig;\n\t\tthis.#blocks = blocks;\n\t\tthis.#headerTitle = headerTitle;\n\t\tthis.#headerMenuEnabled = headerMenuEnabled;\n\t}\n\n\tgetBlocks(dialogId: string): SidebarMainPanelBlockType[]\n\t{\n\t\treturn (new BlockFilter(dialogId, this.#blocks)).run();\n\t}\n\n\tgetHeaderTitle(): string\n\t{\n\t\treturn this.#headerTitle;\n\t}\n\n\tisMenuEnabled(): boolean\n\t{\n\t\treturn this.#headerMenuEnabled;\n\t}\n\n\t#getDefaultConfig(): RawConfig\n\t{\n\t\treturn {\n\t\t\tblocks: baseBlocks,\n\t\t\theaderTitle: Loc.getMessage('IM_SIDEBAR_HEADER_TITLE'),\n\t\t\theaderMenuEnabled: true,\n\t\t};\n\t}\n}\n","import { ChatType, SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isChat = (chatContext: ImModelChat) => chatContext.type === ChatType.chat;\n\nconst chatConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.chat,\n\t\tSidebarMainPanelBlock.tariffLimit,\n\t\tSidebarMainPanelBlock.info,\n\t\tSidebarMainPanelBlock.fileList,\n\t\tSidebarMainPanelBlock.fileUnsortedList,\n\t\tSidebarMainPanelBlock.taskList,\n\t\tSidebarMainPanelBlock.meetingList,\n\t\tSidebarMainPanelBlock.marketAppList,\n\t],\n});\n\nexport { isChat, chatConfig };\n","import { ChatType, SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isUser = (chatContext: ImModelChat) => chatContext.type === ChatType.user;\n\nconst userConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.user,\n\t\tSidebarMainPanelBlock.tariffLimit,\n\t\tSidebarMainPanelBlock.info,\n\t\tSidebarMainPanelBlock.fileList,\n\t\tSidebarMainPanelBlock.fileUnsortedList,\n\t\tSidebarMainPanelBlock.taskList,\n\t\tSidebarMainPanelBlock.meetingList,\n\t\tSidebarMainPanelBlock.marketAppList,\n\t],\n});\n\nexport { isUser, userConfig };\n","import { Core } from 'im.v2.application.core';\nimport { UserType, SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isBot = (chatContext: ImModelChat) => {\n\tconst user = Core.getStore().getters['users/get'](chatContext.dialogId);\n\n\treturn user?.type === UserType.bot;\n};\n\nconst botConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.user,\n\t\tSidebarMainPanelBlock.tariffLimit,\n\t\tSidebarMainPanelBlock.info,\n\t\tSidebarMainPanelBlock.fileList,\n\t\tSidebarMainPanelBlock.fileUnsortedList,\n\t\tSidebarMainPanelBlock.marketAppList,\n\t],\n});\n\nexport { isBot, botConfig };\n","import { Core } from 'im.v2.application.core';\nimport { ChatType, SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isNotes = (chatContext: ImModelChat) => {\n\treturn chatContext.type === ChatType.user && Number(chatContext.dialogId) === Core.getUserId();\n};\n\nconst notesConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.notes,\n\t\tSidebarMainPanelBlock.tariffLimit,\n\t\tSidebarMainPanelBlock.info,\n\t\tSidebarMainPanelBlock.fileList,\n\t\tSidebarMainPanelBlock.fileUnsortedList,\n\t],\n});\n\nexport { isNotes, notesConfig };\n","import { ChatType, SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isLines = (chatContext: ImModelChat) => chatContext.type === ChatType.lines;\n\nconst linesConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.chat,\n\t\tSidebarMainPanelBlock.info,\n\t\tSidebarMainPanelBlock.fileList,\n\t],\n\theaderMenuEnabled: false,\n});\n\nexport { isLines, linesConfig };\n","import { Loc } from 'main.core';\n\nimport { ChatType, SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isCollab = (chatContext: ImModelChat) => chatContext.type === ChatType.collab;\n\nconst collabConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.chat,\n\t\tSidebarMainPanelBlock.info,\n\t\tSidebarMainPanelBlock.fileList,\n\t\tSidebarMainPanelBlock.fileUnsortedList,\n\t\tSidebarMainPanelBlock.collabHelpdesk,\n\t],\n\theaderTitle: Loc.getMessage('IM_SIDEBAR_COLLAB_HEADER_TITLE'),\n});\n\nexport { isCollab, collabConfig };\n","import { Core } from 'im.v2.application.core';\nimport { SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isSupport = (chatContext: ImModelChat) => Core.getStore().getters['sidebar/multidialog/isSupport'](chatContext.dialogId);\n\nconst supportConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.support,\n\t\tSidebarMainPanelBlock.tariffLimit,\n\t\tSidebarMainPanelBlock.multidialog,\n\t\tSidebarMainPanelBlock.info,\n\t\tSidebarMainPanelBlock.fileList,\n\t],\n});\n\nexport { isSupport, supportConfig };\n","import { Loc } from 'main.core';\n\nimport { ChatType, SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isComment = (chatContext: ImModelChat) => chatContext.type === ChatType.comment;\n\nconst commentConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.post,\n\t\tSidebarMainPanelBlock.info,\n\t\tSidebarMainPanelBlock.fileList,\n\t\tSidebarMainPanelBlock.taskList,\n\t\tSidebarMainPanelBlock.meetingList,\n\t],\n\theaderTitle: Loc.getMessage('IM_SIDEBAR_COMMENTS_HEADER_TITLE'),\n\theaderMenuEnabled: false,\n});\n\nexport { isComment, commentConfig };\n","import { Loc } from 'main.core';\n\nimport { ChannelManager } from 'im.v2.lib.channel';\nimport { SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isChannel = (chatContext: ImModelChat) => ChannelManager.isChannel(chatContext.dialogId);\n\nconst channelConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.chat,\n\t\tSidebarMainPanelBlock.info,\n\t\tSidebarMainPanelBlock.fileList,\n\t],\n\theaderTitle: Loc.getMessage('IM_SIDEBAR_CHANNEL_HEADER_TITLE'),\n});\n\nexport { isChannel, channelConfig };\n","import { ChatType, SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { SidebarConfig } from '../classes/config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nconst isCopilot = (chatContext: ImModelChat) => chatContext.type === ChatType.copilot;\n\nconst copilotConfig = new SidebarConfig({\n\tblocks: [\n\t\tSidebarMainPanelBlock.copilot,\n\t\tSidebarMainPanelBlock.tariffLimit,\n\t\tSidebarMainPanelBlock.copilotInfo,\n\t\tSidebarMainPanelBlock.taskList,\n\t\tSidebarMainPanelBlock.meetingList,\n\t],\n});\n\nexport { isCopilot, copilotConfig };\n","import { Core } from 'im.v2.application.core';\nimport { FeatureManager, Feature } from 'im.v2.lib.feature';\n\nimport { SidebarConfig } from './classes/config';\nimport { isChat, chatConfig } from './configs/chat';\nimport { isUser, userConfig } from './configs/user';\nimport { isBot, botConfig } from './configs/bot';\nimport { isNotes, notesConfig } from './configs/notes';\nimport { isLines, linesConfig } from './configs/lines';\nimport { isCollab, collabConfig } from './configs/collab';\nimport { isSupport, supportConfig } from './configs/support';\nimport { isComment, commentConfig } from './configs/comment';\nimport { isChannel, channelConfig } from './configs/channel';\nimport { isCopilot, copilotConfig } from './configs/copilot';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nexport { SidebarConfig } from './classes/config';\n\nexport type ContextCheckFunction = (context: ImModelChat) => boolean\n\nexport class SidebarManager\n{\n\tstatic #instance = null;\n\n\t#defaultConfigMap: Map<ContextCheckFunction, SidebarConfig> = new Map();\n\t#customConfigMap: Map<ContextCheckFunction, SidebarConfig> = new Map();\n\n\tstatic getInstance(): SidebarManager\n\t{\n\t\tif (!this.#instance)\n\t\t{\n\t\t\tthis.#instance = new SidebarManager();\n\t\t}\n\n\t\treturn this.#instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#checkMigrationStatus();\n\t\tthis.#registerDefaultConfigs();\n\t}\n\n\tregisterConfig(callback: ContextCheckFunction, sidebarConfig: SidebarConfig): void\n\t{\n\t\tthis.#customConfigMap.set(callback, sidebarConfig);\n\t}\n\n\tgetConfig(dialogId: string): SidebarConfig\n\t{\n\t\tconst chat = Core.getStore().getters['chats/get'](dialogId, true);\n\n\t\tconst allConfigEntries = [...this.#customConfigMap.entries(), ...this.#defaultConfigMap.entries()];\n\t\tfor (const [callback, config] of allConfigEntries)\n\t\t{\n\t\t\tif (callback(chat))\n\t\t\t{\n\t\t\t\treturn config;\n\t\t\t}\n\t\t}\n\n\t\treturn (new SidebarConfig());\n\t}\n\n\t#checkMigrationStatus()\n\t{\n\t\tconst filesMigrated = FeatureManager.isFeatureAvailable(Feature.sidebarFiles);\n\t\tconst linksMigrated = FeatureManager.isFeatureAvailable(Feature.sidebarLinks);\n\t\tvoid Core.getStore().dispatch('sidebar/setFilesMigrated', filesMigrated);\n\t\tvoid Core.getStore().dispatch('sidebar/setLinksMigrated', linksMigrated);\n\t}\n\n\t#registerDefaultConfigs()\n\t{\n\t\t// most specific configs first\n\t\tthis.#defaultConfigMap.set(isCopilot, copilotConfig);\n\t\tthis.#defaultConfigMap.set(isChannel, channelConfig);\n\t\tthis.#defaultConfigMap.set(isComment, commentConfig);\n\t\tthis.#defaultConfigMap.set(isSupport, supportConfig);\n\t\tthis.#defaultConfigMap.set(isBot, botConfig);\n\t\tthis.#defaultConfigMap.set(isNotes, notesConfig);\n\t\tthis.#defaultConfigMap.set(isLines, linesConfig);\n\t\tthis.#defaultConfigMap.set(isCollab, collabConfig);\n\t\tthis.#defaultConfigMap.set(isUser, userConfig);\n\t\tthis.#defaultConfigMap.set(isChat, chatConfig);\n\t}\n}\n"],"names":["baseBlocks","SidebarMainPanelBlock","chat","tariffLimit","info","fileList","fileUnsortedList","taskList","meetingList","marketAppList","BlockFilter","constructor","dialogId","blocks","Core","getStore","getters","run","blocksSet","Set","delete","FeatureManager","isFeatureAvailable","Feature","sidebarFiles","MarketManager","getInstance","getAvailablePlacementsByType","PlacementType","sidebar","length","isChannelCommentsChat","ChatType","comment","type","isChannelChat","ChannelManager","isChannel","chatHistory","isAvailable","chatId","SidebarConfig","rawConfig","preparedConfig","headerTitle","headerMenuEnabled","getBlocks","getHeaderTitle","isMenuEnabled","Loc","getMessage","isChat","chatContext","chatConfig","isUser","user","userConfig","isBot","UserType","bot","botConfig","isNotes","Number","getUserId","notesConfig","notes","isLines","lines","linesConfig","isCollab","collab","collabConfig","collabHelpdesk","isSupport","supportConfig","support","multidialog","isComment","commentConfig","post","channelConfig","isCopilot","copilot","copilotConfig","copilotInfo","SidebarManager","Map","registerConfig","callback","sidebarConfig","set","getConfig","allConfigEntries","entries","config","filesMigrated","linksMigrated","sidebarLinks","dispatch"],"mappings":"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"}