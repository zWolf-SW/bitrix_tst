this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,s,t,r,n){"use strict";const i="/bitrix/js/im/v2/lib/update-state/shared-worker/dist/shared-worker.bundle.js";const o="Bitrix24 UpdateState";const a="bitrix_sessid";class c{static init(){return new c}constructor(){if(!("SharedWorker"in window)){return}this.registerSharedWorker();this.subscribeToEvents()}registerSharedWorker(){this.worker=new SharedWorker(i,o);this.handleMessageFromWorker();this.startUpdateState();this.worker.port.start()}setCsrfToken(e){if(!s.Type.isStringFilled(e)){return}s.Loc.setMessage({CSRF_TOKEN_NAME:e})}getCsrfToken(){return s.Loc.getMessage(a)}getSessionTimeInMilliseconds(){const{sessionTime:e}=n.Core.getApplicationData();return e*1e3}subscribeToEvents(){s.Event.bind(window,"online",(()=>{this.worker.port.postMessage({force:true,sessionTime:this.getSessionTimeInMilliseconds(),csrfToken:this.getCsrfToken()})}))}handleMessageFromWorker(){s.Event.bind(this.worker.port,"message",(e=>{const{csrfToken:s,response:t}=e.data;this.setCsrfToken(s);this.fireCountersEvent(t)}))}startUpdateState(){this.worker.port.postMessage({force:false,sessionTime:this.getSessionTimeInMilliseconds(),csrfToken:this.getCsrfToken()})}fireCountersEvent(e){if(!(e!=null&&e.counters)){return}t.EventEmitter.emit(window,r.EventType.counter.onImUpdateCounter,new s.Event.BaseEvent({data:{counters:e.counters},compatData:[e.counters]}))}}e.UpdateStateManager=c})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX,BX.Event,BX.Messenger.v2.Const,BX.Messenger.v2.Application);
//# sourceMappingURL=update-state-manager.bundle.map.js