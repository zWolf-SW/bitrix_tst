{"version":3,"file":"rest.bundle.js","sources":["../src/rest.js"],"sourcesContent":["import { ajax, Type, type JsonObject } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { EventType } from 'im.v2.const';\nimport { Core } from 'im.v2.application.core';\n\ntype RunActionConfig = {\n\tdata?: JsonObject,\n\tanalyticsLabel?: JsonObject\n};\n\ntype RunActionResultData = any;\n\ntype RunActionResult = {\n\tstatus: 'success' | 'error',\n\tdata: RunActionResultData,\n\terrors: RunActionError[]\n};\n\ntype RunActionResponse = RunActionResultData | RunActionError[];\n\nexport type RunActionError = {\n\tcode: number | string,\n\tcustomData: any,\n\tmessage: string\n};\n\nexport type CallBatchError = {\n\tmethod: string,\n\tcode: string,\n\tdescription: string,\n};\n\ntype BatchQuery = {\n\t[method: string]: {[param: string]: any}\n}\n\ntype ErrorsConfig = {\n\tretryCount: number,\n\ttimeout: ?number,\n}\n\nconst INVALID_AUTH_ERROR_CODE = 'invalid_authentication';\n\nconst errorCodesConfig = {\n\t[INVALID_AUTH_ERROR_CODE]: { retryCount: 1, timeout: null },\n};\n\nlet retryCounter = null;\n\nexport const runAction = (action: string, config: RunActionConfig = {}): Promise<RunActionResponse> => {\n\tconst preparedConfig = { ...config, data: prepareRequestData(config.data) };\n\n\treturn new Promise((resolve, reject) => {\n\t\tajax.runAction(action, preparedConfig).then((response: RunActionResult) => {\n\t\t\tretryCounter = null;\n\n\t\t\treturn resolve(response.data);\n\t\t}).catch((response: RunActionResult) => {\n\t\t\tif (retryCounter === 0)\n\t\t\t{\n\t\t\t\treturn reject(response.errors);\n\t\t\t}\n\n\t\t\tif (needRetryRequest(response.errors))\n\t\t\t{\n\t\t\t\treturn handleErrors(action, preparedConfig, response);\n\t\t\t}\n\n\t\t\treturn reject(response.errors);\n\t\t});\n\t});\n};\n\nconst needRetryRequest = (responseErrors: RunActionError[]): boolean => {\n\treturn responseErrors.some((responseError) => errorCodesConfig[responseError.code]);\n};\n\nconst handleErrors = async (\n\taction: string,\n\tconfig: RunActionConfig,\n\tresponse: RunActionResult,\n): Promise<RunActionResult> => {\n\tconst errorConfig = getErrorConfig(response.errors);\n\n\tif (!retryCounter)\n\t{\n\t\tretryCounter = errorConfig.retryCount;\n\t}\n\n\tretryCounter--;\n\n\tif (hasInvalidAuthError(response.errors))\n\t{\n\t\tawait EventEmitter.emitAsync(EventType.request.onAuthError, { errors: response.errors });\n\t}\n\n\tif (errorConfig.timeout)\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve(runAction(action, config));\n\t\t\t}, errorConfig.timeout);\n\t\t});\n\t}\n\n\treturn runAction(action, config);\n};\n\nconst getErrorConfig = (responseErrors: RunActionError[]): ErrorsConfig => {\n\tconst error = responseErrors.find((responseError) => errorCodesConfig[responseError.code]);\n\n\treturn errorCodesConfig[error.code];\n};\n\nconst hasInvalidAuthError = (responseErrors: RunActionError[]): boolean => {\n\treturn responseErrors.some((error) => error.code === INVALID_AUTH_ERROR_CODE);\n};\n\nexport const callBatch = (query: BatchQuery): Promise<{[method: string]: any}> => {\n\tconst preparedQuery = {};\n\tconst methodsToCall = new Set();\n\tObject.entries(query).forEach(([method, params]) => {\n\t\tmethodsToCall.add(method);\n\t\tpreparedQuery[method] = [method, params];\n\t});\n\n\treturn new Promise((resolve, reject) => {\n\t\tCore.getRestClient().callBatch(preparedQuery, (result) => {\n\t\t\tconst data = {};\n\t\t\tfor (const method of methodsToCall)\n\t\t\t{\n\t\t\t\tconst methodResult: RestResult = result[method];\n\t\t\t\tif (methodResult.error())\n\t\t\t\t{\n\t\t\t\t\tconst { error: code, error_description: description } = methodResult.error().ex;\n\t\t\t\t\treject({ method, code, description });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdata[method] = methodResult.data();\n\t\t\t}\n\n\t\t\treturn resolve(data);\n\t\t});\n\t});\n};\n\nconst prepareRequestData = (data: JsonObject): JsonObject => {\n\tif (data instanceof FormData)\n\t{\n\t\treturn data;\n\t}\n\n\tif (!Type.isObjectLike(data))\n\t{\n\t\treturn {};\n\t}\n\n\tconst preparedData = {};\n\tfor (const [key, value] of Object.entries(data))\n\t{\n\t\tlet preparedValue = value;\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tpreparedValue = value === true ? 'Y' : 'N';\n\t\t}\n\n\t\tpreparedData[key] = preparedValue;\n\t}\n\n\treturn preparedData;\n};\n"],"names":["INVALID_AUTH_ERROR_CODE","errorCodesConfig","retryCount","timeout","retryCounter","runAction","action","config","preparedConfig","data","prepareRequestData","Promise","resolve","reject","ajax","then","response","catch","errors","needRetryRequest","handleErrors","responseErrors","some","responseError","code","errorConfig","getErrorConfig","hasInvalidAuthError","EventEmitter","emitAsync","EventType","request","onAuthError","setTimeout","error","find","callBatch","query","preparedQuery","methodsToCall","Set","Object","entries","forEach","method","params","add","Core","getRestClient","result","methodResult","error_description","description","ex","FormData","Type","isObjectLike","preparedData","key","value","preparedValue","isBoolean"],"mappings":"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"}