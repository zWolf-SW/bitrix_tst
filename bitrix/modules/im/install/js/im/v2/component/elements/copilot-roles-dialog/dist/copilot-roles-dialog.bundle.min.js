this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t){"use strict";const s={name:"CopilotRolesDialog",props:{title:{type:String,default:""}},emits:["selectRole","close"],computed:{titleText(){return this.title||this.loc("IM_ELEMENTS_COPILOT_ROLES_DIALOG_DEFAULT_TITLE")}},created(){this.roleDialog=new t.RolesDialog({moduleId:"im",contextId:"im-copilot-create-chat",title:this.titleText});this.subscribeToEvents()},mounted(){void this.roleDialog.show()},beforeUnmount(){if(!this.roleDialog){return}this.roleDialog.hide();this.unsubscribeFromEvents()},methods:{subscribeToEvents(){this.roleDialog.subscribe(t.RolesDialogEvents.SELECT_ROLE,this.onSelectRole);this.roleDialog.subscribe(t.RolesDialogEvents.HIDE,this.onHide)},unsubscribeFromEvents(){this.roleDialog.unsubscribe(t.RolesDialogEvents.SELECT_ROLE,this.onSelectRole);this.roleDialog.unsubscribe(t.RolesDialogEvents.HIDE,this.onHide)},onSelectRole(e){const{role:t}=e.getData();if(!t){return}this.$emit("selectRole",t)},onHide(){this.$emit("close")},loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:"<template></template>"};e.CopilotRolesDialog=s})(this.BX.Messenger.v2.Component.Elements=this.BX.Messenger.v2.Component.Elements||{},BX.AI);
//# sourceMappingURL=copilot-roles-dialog.bundle.map.js