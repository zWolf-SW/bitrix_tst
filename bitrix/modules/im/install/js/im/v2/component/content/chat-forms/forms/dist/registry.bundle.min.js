this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,a,n,s,i,r,h,o,g,l,c,d,C,m,p,M){"use strict";const u={name:"GroupChatCreation",components:{TitleInput:M.TitleInput,ChatAvatar:M.ChatAvatar,ChatMembersSelector:M.ChatMembersSelector,SettingsSection:M.SettingsSection,RightsSection:M.RightsSection,AppearanceSection:M.AppearanceSection,ButtonPanel:M.ButtonPanel,CreateChatHeading:M.CreateChatHeading},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[],undeselectedItems:[],settings:{isAvailableInSearch:false,description:"",autoDeleteDelay:0},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},watch:{chatTitle(t){n.CreateChatManager.getInstance().setChatTitle(t)}},created(){h.EventEmitter.subscribe(p.EventType.layout.onLayoutChange,this.onLayoutChange);this.initDefaultRolesForRights();this.undeselectedItems=n.CreateChatManager.getInstance().getUndeselectedItems();this.rights.ownerId=n.CreateChatManager.getInstance().getOwnerId();this.chatMembers=n.CreateChatManager.getInstance().getChatMembers();this.restoreFields();n.CreateChatManager.getInstance().setChatType(p.ChatType.chat);n.CreateChatManager.getInstance().setCreationStatus(true);n.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){n.CreateChatManager.getInstance().clearExternalFields();if(this.exitByCancel||this.exitByChatTypeSwitch||this.exitByCreation){return}this.saveFields()},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},onAutoDeleteChange(t){this.settings.autoDeleteDelay=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},async onCreateClick(){this.isCreating=true;const{newDialogId:t}=await this.getChatService().createChat({title:this.chatTitle,avatar:this.avatarFile,memberEntities:this.chatMembers,ownerId:this.rights.ownerId,managers:this.rights.managerIds,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages,autoDeleteDelay:this.settings.autoDeleteDelay}).catch((()=>{this.isCreating=false}));this.isCreating=false;this.exitByCreation=true;n.CreateChatManager.getInstance().setCreationStatus(false);void c.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;n.CreateChatManager.getInstance().setCreationStatus(false);c.Messenger.openChat()},onAvatarChange(t){this.avatarFile=t;n.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onScroll(){var t,e,a,n;(t=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=o.MenuManager.getMenuById(p.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=o.MenuManager.getMenuById(p.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},onLayoutChange(t){const{to:e}=t.getData();if(e.name===p.Layout.createChat.name&&e.entityId!==p.ChatType.chat){this.exitByChatTypeSwitch=true}},saveFields(){n.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers,settings:this.settings,rights:this.rights})},restoreFields(){const t=n.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:s,settings:i,rights:r}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=s;this.settings=i;this.rights=r},initDefaultRolesForRights(){const{manageUsersAdd:t,manageUsersDelete:e,manageUi:n,manageMessages:s}=a.PermissionManager.getInstance().getDefaultRolesForActionGroups();this.rights.manageUsersAdd=t;this.rights.manageUsersDelete=e;this.rights.manageUi=n;this.rights.manageMessages=s},getChatService(){if(!this.chatService){this.chatService=new C.ChatService}return this.chatService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-chat-forms__content --chat" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar :avatarFile="avatarFile" :chatTitle="chatTitle" @avatarChange="onAvatarChange" />\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHAT_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_MEMBERS_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector \n\t\t\t\t\t:undeselectedItems="undeselectedItems" \n\t\t\t\t\t:chatMembers="chatMembers"\n\t\t\t\t\t:allowTeamsSelect="true"\n\t\t\t\t\t@membersChange="onMembersChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<SettingsSection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t:description="settings.description"\n\t\t\t\t:autoDeleteDelay="settings.autoDeleteDelay"\n\t\t\t\t@autoDeleteDelayChange="onAutoDeleteChange"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t\t@descriptionChange="onDescriptionChange"\n\t\t\t/>\n\t\t\t<RightsSection\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/> \n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_CHAT_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const v={name:"ConferenceCreation",components:{TitleInput:M.TitleInput,ChatAvatar:M.ChatAvatar,ChatMembersSelector:M.ChatMembersSelector,SettingsSection:M.SettingsSection,RightsSection:M.RightsSection,AppearanceSection:M.AppearanceSection,ConferenceSection:M.ConferenceSection,ButtonPanel:M.ButtonPanel,CreateChatHeading:M.CreateChatHeading},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[["user",l.Core.getUserId()]],conference:{passwordNeeded:false,password:""},settings:{description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},computed:{EmptyAvatarType:()=>m.EmptyAvatarType},watch:{chatTitle(t){n.CreateChatManager.getInstance().setChatTitle(t)}},created(){h.EventEmitter.subscribe(p.EventType.layout.onLayoutChange,this.onLayoutChange);this.rights.ownerId=l.Core.getUserId();this.initDefaultRolesForRights();this.restoreFields();n.CreateChatManager.getInstance().setChatType(p.ChatType.videoconf);n.CreateChatManager.getInstance().setCreationStatus(true);n.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){if(this.exitByCancel||this.exitByChatTypeSwitch){return}this.saveFields()},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},onAvatarChange(t){this.avatarFile=t;n.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onPasswordNeededChange(t){this.conference.passwordNeeded=t},onPasswordChange(t){this.conference.password=t},async onCreateClick(){if(!this.checkPassword()){e.Notifier.conference.onPasswordError();return}this.isCreating=true;const{newDialogId:t}=await this.getChatService().createChat({entityType:p.ChatType.videoconf,title:this.chatTitle,avatar:this.avatarFile,memberEntities:this.chatMembers,ownerId:this.rights.ownerId,managers:this.rights.managerIds,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages,conferencePassword:this.conference.passwordNeeded?this.conference.password:""}).catch((()=>{this.isCreating=false}));this.isCreating=false;n.CreateChatManager.getInstance().setCreationStatus(false);void c.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;n.CreateChatManager.getInstance().setCreationStatus(false);c.Messenger.openChat()},onScroll(){var t,e,a,n;(t=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=o.MenuManager.getMenuById(p.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=o.MenuManager.getMenuById(p.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},onLayoutChange(t){const{to:e}=t.getData();if(e.name===p.Layout.createChat.name&&e.entityId!==p.ChatType.videoconf){this.exitByChatTypeSwitch=true}},saveFields(){n.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers,settings:this.settings,rights:this.rights,conference:this.conference})},restoreFields(){const t=n.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:s,conference:i,settings:r,rights:h}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=s;this.conference=i;this.settings=r;this.rights=h},initDefaultRolesForRights(){const{manageUsersAdd:t,manageUsersDelete:e,manageUi:n,manageMessages:s}=a.PermissionManager.getInstance().getDefaultRolesForActionGroups();this.rights.manageUsersAdd=t;this.rights.manageUsersDelete=e;this.rights.manageUi=n;this.rights.manageMessages=s},checkPassword(){const t=3;if(!this.conference.passwordNeeded){return true}const e=this.conference.password.trim();return e!==""&&e.length>=t},getChatService(){if(!this.chatService){this.chatService=new C.ChatService}return this.chatService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-chat-forms__content --conference" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar \n\t\t\t\t\t:avatarFile="avatarFile" \n\t\t\t\t\t:chatTitle="chatTitle"\n\t\t\t\t\t:type="EmptyAvatarType.squared"\t\n\t\t\t\t\t@avatarChange="onAvatarChange" \n\t\t\t\t/>\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CONFERENCE_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_MEMBERS_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector :chatMembers="chatMembers" @membersChange="onMembersChange" />\n\t\t\t</div>\n\t\t\t<ConferenceSection\n\t\t\t\t:passwordNeeded="conference.passwordNeeded"\n\t\t\t\t:password="conference.password"\n\t\t\t\t@passwordNeededChange="onPasswordNeededChange"\n\t\t\t\t@passwordChange="onPasswordChange"\n\t\t\t/>\n\t\t\t<SettingsSection\n\t\t\t\t:withSearchOption="false"\n\t\t\t\t:withAutoDeleteOption="false"\n\t\t\t\t:description="settings.description"\n\t\t\t\t@descriptionChange="onDescriptionChange"\n\t\t\t/>\n\t\t\t<RightsSection\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_CONFERENCE_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const I={name:"ChannelCreation",components:{TitleInput:M.TitleInput,ChatAvatar:M.ChatAvatar,ChatMembersSelector:M.ChatMembersSelector,RightsSection:M.RightsSection,AppearanceSection:M.AppearanceSection,PrivacySection:M.PrivacySection,ButtonPanel:M.ButtonPanel,TextareaInput:M.TextareaInput,CreateChatHeading:M.CreateChatHeading},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[],undeselectedItems:[],settings:{isAvailableInSearch:false,description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},computed:{ChatType:()=>p.ChatType,EmptyAvatarType:()=>m.EmptyAvatarType},watch:{chatTitle(t){n.CreateChatManager.getInstance().setChatTitle(t)}},created(){h.EventEmitter.subscribe(p.EventType.layout.onLayoutChange,this.onLayoutChange);this.initDefaultRolesForRights();this.undeselectedItems=n.CreateChatManager.getInstance().getUndeselectedItems();this.rights.ownerId=n.CreateChatManager.getInstance().getOwnerId();this.chatMembers=n.CreateChatManager.getInstance().getChatMembers();this.restoreFields();n.CreateChatManager.getInstance().setChatType(p.ChatType.channel);n.CreateChatManager.getInstance().setCreationStatus(true);n.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){n.CreateChatManager.getInstance().clearExternalFields();h.EventEmitter.unsubscribe(p.EventType.layout.onLayoutChange,this.onLayoutChange);if(this.exitByCancel||this.exitByChatTypeSwitch||this.exitByCreation){return}this.saveFields()},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},async onCreateClick(){this.isCreating=true;const{newDialogId:t}=await this.getChatService().createChat({type:p.ChatType.channel,title:this.chatTitle,avatar:this.avatarFile,memberEntities:this.chatMembers,ownerId:this.rights.ownerId,managers:this.rights.managerIds,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages}).catch((()=>{this.isCreating=false}));this.isCreating=false;this.exitByCreation=true;n.CreateChatManager.getInstance().setCreationStatus(false);n.CreateChatManager.getInstance().setPreselectedMembers([]);void c.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;n.CreateChatManager.getInstance().setCreationStatus(false);n.CreateChatManager.getInstance().setPreselectedMembers([]);c.Messenger.openChat()},onAvatarChange(t){this.avatarFile=t;n.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onScroll(){var t,e,a,n;(t=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=o.MenuManager.getMenuById(p.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=o.MenuManager.getMenuById(p.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},onLayoutChange(t){const{to:e}=t.getData();if(e.name===p.Layout.createChat.name&&e.entityId!==p.ChatType.channel){this.exitByChatTypeSwitch=true}},saveFields(){n.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers,settings:this.settings,rights:this.rights})},restoreFields(){const t=n.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:s,settings:i,rights:r}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=s;this.settings=i;this.rights=r},initDefaultRolesForRights(){const{manageUsersAdd:t,manageUsersDelete:e,manageUi:n,manageMessages:s}=a.PermissionManager.getInstance().getDefaultRolesForActionGroups(p.ChatType.channel);this.rights.manageUsersAdd=t;this.rights.manageUsersDelete=e;this.rights.manageUi=n;this.rights.manageMessages=s},getChatService(){if(!this.chatService){this.chatService=new C.ChatService}return this.chatService},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div class="bx-im-content-chat-forms__content --channel" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar \n\t\t\t\t\t:avatarFile="avatarFile" \n\t\t\t\t\t:chatTitle="chatTitle" \n\t\t\t\t\t:type="EmptyAvatarType.squared"\n\t\t\t\t\t@avatarChange="onAvatarChange" \n\t\t\t\t/>\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHANNEL_TITLE_PLACEHOLDER_V2')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHANNEL_DESCRIPTION_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__description_container">\n\t\t\t\t<TextareaInput\n\t\t\t\t\t:value="settings.description"\n\t\t\t\t\t:placeholder="loc('IM_CREATE_CHANNEL_DESCRIPTION_PLACEHOLDER_V3')"\n\t\t\t\t\t:border="false"\n\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<PrivacySection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t/>\n\t\t\t<CreateChatHeading\n\t\t\t\t:text="loc('IM_CREATE_CHANNEL_MEMBERS_TITLE')"\n\t\t\t\t:hintText="loc('IM_CREATE_CHANNEL_MEMBERS_HINT')"\n\t\t\t/>\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector \n\t\t\t\t\t:chatMembers="chatMembers"\n\t\t\t\t\t:undeselectedItems="undeselectedItems"\n\t\t\t\t\t:allowTeamsSelect="true"\n\t\t\t\t\t@membersChange="onMembersChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<RightsSection\n\t\t\t\t:chatType="ChatType.channel"\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_CHANNEL_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const T="bx-im-create-collab-description-banner__link";const b="--title";const y="--invite";const A={name:"DescriptionBanner",computed:{preparedTitle(){return s.Loc.getMessage("IM_CREATE_COLLAB_BANNER_TITLE",{"[learn-more]":`<span class="${T} ${b} --solid">`,"[/learn-more]":"</span>"})},preparedInviteText(){return s.Loc.getMessage("IM_CREATE_COLLAB_BANNER_TEXT_2",{"[learn-more]":`<span class="${T} ${y} --dashed">`,"[/learn-more]":"</span>"})}},methods:{onTitleClick(t){if(!s.Dom.hasClass(t.target,b)){return}const e="22706764";i.openHelpdeskArticle(e)},onInviteClick(t){if(!s.Dom.hasClass(t.target,y)){return}const e="22706836";i.openHelpdeskArticle(e)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-create-collab-description-banner__container" ref="container">\n\t\t\t<div class="bx-im-create-collab-description-banner__icon"></div>\n\t\t\t<div class="bx-im-create-collab-description-banner__content">\n\t\t\t\t<div class="bx-im-create-collab-description-banner__title" v-html="preparedTitle" @click="onTitleClick"></div>\n\t\t\t\t<div class="bx-im-create-collab-description-banner__text">\n\t\t\t\t\t{{ loc('IM_CREATE_COLLAB_BANNER_TEXT_1') }}\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-create-collab-description-banner__text" v-html="preparedInviteText" @click="onInviteClick"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const U={name:"RightsSection",components:{CreateChatExternalSection:M.CreateChatExternalSection},props:{collabId:{type:Number,default:0}},emits:["change"],data(){return{formResult:null}},methods:{async onClick(){const t={};if(this.collabId>0){t.collabId=this.collabId}if(this.formResult){t.formData=this.formResult}this.form=await r.AccessRights.openForm(t);this.bindEvents()},bindEvents(){h.EventEmitter.subscribe(this.form,"save",this.onSave);h.EventEmitter.subscribe(this.form,"cancel",this.onCancel)},unbindEvents(){h.EventEmitter.unsubscribe(this.form,"save",this.onSave);h.EventEmitter.unsubscribe(this.form,"cancel",this.onCancel)},onSave(t){this.formResult=t.getData();this.$emit("change",this.formResult);this.unbindEvents()},onCancel(){this.unbindEvents()},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<CreateChatExternalSection\n\t\t\t:title="loc('IM_CREATE_CHAT_RIGHTS_SECTION')"\n\t\t\t@click="onClick"\n\t\t\tname="rights"\n\t\t/>\n\t`};const S={name:"CollabCreation",components:{TitleInput:M.TitleInput,ChatAvatar:M.ChatAvatar,DescriptionBanner:A,CreateChatHeading:M.CreateChatHeading,TextareaInput:M.TextareaInput,ButtonPanel:M.ButtonPanel,RightsSection:U,AutoDelete:M.AutoDelete},data(){return{isCreating:false,avatarFile:null,chatTitle:"",description:"",groupSettings:{ownerId:l.Core.getUserId(),moderatorMembers:[],options:{},permissions:null},autoDeleteDelay:0}},watch:{chatTitle(t){n.CreateChatManager.getInstance().setChatTitle(t)}},computed:{EmptyAvatarType:()=>m.EmptyAvatarType,createButtonColorScheme(){return{borderColor:p.Color.transparent,backgroundColor:p.Color.collab60,iconColor:p.Color.white,textColor:p.Color.white,hoverColor:p.Color.collab50}}},created(){h.EventEmitter.subscribe(p.EventType.layout.onLayoutChange,this.onLayoutChange);this.restoreFields();n.CreateChatManager.getInstance().setChatType(p.ChatType.collab);n.CreateChatManager.getInstance().setCreationStatus(true);n.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){h.EventEmitter.unsubscribe(p.EventType.layout.onLayoutChange,this.onLayoutChange);if(this.exitByCancel||this.exitByChatTypeSwitch||this.exitByCreation){return}this.saveFields()},methods:{restoreFields(){const t=n.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,description:s,autoDeleteDelay:i}=t;this.chatTitle=e;this.avatarFile=a;this.description=s;this.autoDeleteDelay=i},saveFields(){n.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,description:this.description,autoDeleteDelay:this.autoDeleteDelay})},onLayoutChange(t){const{to:e}=t.getData();if(e.name===p.Layout.createChat.name&&e.entityId!==p.ChatType.collab){this.exitByChatTypeSwitch=true}},async onCreateClick(){this.isCreating=true;try{const{newDialogId:t}=await this.getChatService().createCollab({title:this.chatTitle,avatar:this.avatarFile,description:this.description,ownerId:this.groupSettings.ownerId,moderatorMembers:this.groupSettings.moderatorMembers,options:this.groupSettings.options,permissions:this.groupSettings.permissions,autoDeleteDelay:this.autoDeleteDelay});this.isCreating=false;this.exitByCreation=true;n.CreateChatManager.getInstance().setCreationStatus(false);await c.Messenger.openChat(t);h.EventEmitter.emit(p.EventType.header.openAddToChatPopup)}catch{this.isCreating=false}},onCancelClick(){this.exitByCancel=true;n.CreateChatManager.getInstance().setCreationStatus(false);c.Messenger.openChat()},onAvatarChange(t){this.avatarFile=t;n.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onDescriptionChange(t){this.description=t},onRightsChange(t){const{ownerId:e,moderators:a,permissions:n,options:s}=t;this.groupSettings.ownerId=e;this.groupSettings.moderatorMembers=a;this.groupSettings.permissions=n;this.groupSettings.options=s},getChatService(){if(!this.chatService){this.chatService=new C.ChatService}return this.chatService},onAutoDeleteDelayChange(t){this.autoDeleteDelay=t},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div class="bx-im-content-chat-forms__content --collab">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar \n\t\t\t\t\t:avatarFile="avatarFile" \n\t\t\t\t\t:chatTitle="chatTitle" \n\t\t\t\t\t:type="EmptyAvatarType.collab" \n\t\t\t\t\t@avatarChange="onAvatarChange" \n\t\t\t\t/>\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_COLLAB_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<DescriptionBanner />\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_COLLAB_DESCRIPTION_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__description_container">\n\t\t\t\t<TextareaInput\n\t\t\t\t\t:value="description"\n\t\t\t\t\t:placeholder="loc('IM_CREATE_COLLAB_DESCRIPTION_PLACEHOLDER')"\n\t\t\t\t\t:border="false"\n\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<RightsSection @change="onRightsChange" />\n\t\t\t<AutoDelete \n\t\t\t\t:initialDelay="autoDeleteDelay" \n\t\t\t\t@delayChange="onAutoDeleteDelayChange" \n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_COLLAB_CONFIRM')"\n\t\t\t:createButtonColorScheme="createButtonColorScheme"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const E={chat:"chat",videoconf:"videoconf",channel:"channel",collab:"collab"};const f={[p.ChatType.chat]:u,[p.ChatType.videoconf]:v,[p.ChatType.channel]:I,[p.ChatType.collab]:S,default:u};const _={name:"CreateChatContent",components:{GroupChatCreation:u,ConferenceCreation:v,ChannelCreation:I,CollabCreation:S},props:{entityId:{type:String,required:true}},computed:{ChatType:()=>p.ChatType,chatType(){return this.entityId},creationComponent(){var t;return(t=f[this.chatType])!=null?t:f.default}},template:`\n\t\t<div class="bx-im-content-chat-forms__container">\n\t\t\t<component :is="creationComponent" />\n\t\t</div>\n\t`};var D=babelHelpers.classPrivateFieldLooseKey("initialManagers");var w=babelHelpers.classPrivateFieldLooseKey("initialMembers");class B{constructor(){Object.defineProperty(this,D,{writable:true,value:[]});Object.defineProperty(this,w,{writable:true,value:[]})}setInitialManagers(t){babelHelpers.classPrivateFieldLooseBase(this,D)[D]=t}setInitialChatMembers(t){babelHelpers.classPrivateFieldLooseBase(this,w)[w]=t}getAddedMemberEntities(t){const e=new Set(babelHelpers.classPrivateFieldLooseBase(this,w)[w].map((t=>JSON.stringify(t))));return t.filter((t=>!e.has(JSON.stringify(t))))}getDeletedMemberEntities(t){const e=new Set(t.map((t=>JSON.stringify(t))));return babelHelpers.classPrivateFieldLooseBase(this,w)[w].filter((t=>!e.has(JSON.stringify(t))))}getAddedManagers(t){const e=new Set(babelHelpers.classPrivateFieldLooseBase(this,D)[D]);return t.filter((t=>!e.has(t)))}getDeletedManagers(t){const e=new Set(t);return babelHelpers.classPrivateFieldLooseBase(this,D)[D].filter((t=>!e.has(t)))}}const L="imUpdateChatCollapsedUsers";const F="/bitrix/js/im/v2/component/content/chat-forms/src/css/images/collapsed-users-avatar.svg";function R({title:t,onclick:e}){const a=`\n\t\t<div class="bx-im-content-chat-forms__collapsed-users">\n\t\t\t${t}\n\t\t\t<div class="bx-im-content-chat-forms__collapsed-users-icon"></div>\n\t\t</div>\n\t`;return{id:0,entityId:L,avatar:F,title:{text:a,type:"html"},deselectable:false,tagOptions:{onclick:e}}}const x={name:"GroupChatUpdating",components:{TitleInput:M.TitleInput,ChatAvatar:M.ChatAvatar,ButtonPanel:M.ButtonPanel,CreateChatHeading:M.CreateChatHeading,ChatMembersSelector:M.ChatMembersSelector,SettingsSection:M.SettingsSection,RightsSection:M.RightsSection},props:{dialogId:{type:String,required:true}},data(){return{isLoading:true,isUpdating:false,areUsersCollapsed:false,collapsedUsersCount:0,avatarFile:null,avatarUrl:"",chatTitle:"",chatMembers:[],settings:{isAvailableInSearch:false,description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},ChatType:()=>p.ChatType,collapsedUsers(){if(!this.areUsersCollapsed){return[]}const t=this.loc("IM_UPDATE_GROUP_CHAT_COLLAPSED_ELEMENT",{"#COUNT#":this.collapsedUsersCount});const e=R({title:t,onclick:this.onCollapsedUsersClick});return[e]},canChangeSearchAvailability(){return[p.ChatType.open,p.ChatType.chat].includes(this.dialog.type)},changedChatType(){if(!this.canChangeSearchAvailability){return this.dialog.type}return this.settings.isAvailableInSearch?p.ChatType.open:p.ChatType.chat}},async created(){await this.fillForm();this.memberDiffManager=new B;this.memberDiffManager.setInitialChatMembers(this.chatMembers);this.memberDiffManager.setInitialManagers(this.rights.managerIds);this.isLoading=false},methods:{onMembersChange(t){this.chatMembers=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},onDescriptionChange(t){this.settings.description=t},async fillForm(){this.chatTitle=this.dialog.name;this.avatarUrl=this.dialog.avatar;this.settings.description=this.dialog.description;this.chatMembers=await this.getMemberEntities();this.rights.ownerId=this.dialog.ownerId;this.rights.manageMessages=this.dialog.permissions.manageMessages;this.rights.managerIds=this.dialog.managerList;this.rights.manageUi=this.dialog.permissions.manageUi;this.rights.manageUsersAdd=this.dialog.permissions.manageUsersAdd;this.rights.manageUsersDelete=this.dialog.permissions.manageUsersDelete;this.settings.isAvailableInSearch=this.dialog.type===p.ChatType.open},async getMemberEntities(){const{memberEntities:t,areUsersCollapsed:e,userCount:a}=await this.getChatService().getMemberEntities(this.chatId);if(e){this.areUsersCollapsed=true;this.collapsedUsersCount=a;return t}return t},async onUpdateClick(){d.Analytics.getInstance().chatEdit.onSubmitForm(this.dialogId);d.Analytics.getInstance().ignoreNextChatOpen(this.dialogId);this.isUpdating=true;await this.getChatService().updateChat(this.chatId,{title:this.chatTitle,avatar:this.avatarFile,type:this.changedChatType,addedMemberEntities:this.memberDiffManager.getAddedMemberEntities(this.chatMembers),deletedMemberEntities:this.memberDiffManager.getDeletedMemberEntities(this.chatMembers),addedManagers:this.memberDiffManager.getAddedManagers(this.rights.managerIds),deletedManagers:this.memberDiffManager.getDeletedManagers(this.rights.managerIds),ownerId:this.rights.ownerId,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages}).catch((()=>{this.isUpdating=false}));this.isUpdating=false;return c.Messenger.openChat(this.dialogId)},onCancelClick(){d.Analytics.getInstance().ignoreNextChatOpen(this.dialogId);void c.Messenger.openChat(this.dialogId)},onAvatarChange(t){this.avatarFile=t;this.avatarUrl=""},onScroll(){var t,e,a,n;(t=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=o.MenuManager.getMenuById(p.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=o.MenuManager.getMenuById(p.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},getChatService(){if(!this.chatService){this.chatService=new C.ChatService}return this.chatService},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)},async onCollapsedUsersClick(){const t=await g.showExitUpdateChatConfirm(this.dialogId);if(!t){return}await this.onUpdateClick();h.EventEmitter.emit(p.EventType.sidebar.open,{panel:p.SidebarDetailBlock.members,dialogId:this.dialogId})}},template:`\n\t\t<div v-if="isLoading" class="bx-im-content-chat-forms__skeleton"></div>\n\t\t<div v-else class="bx-im-content-chat-forms__content --chat" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar\n\t\t\t\t\t:avatarFile="avatarFile" \n\t\t\t\t\t:existingAvatarUrl="avatarUrl" \n\t\t\t\t\t:chatTitle="chatTitle" \n\t\t\t\t\t@avatarChange="onAvatarChange" \n\t\t\t\t/>\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHAT_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_MEMBERS_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector \n\t\t\t\t\t:customElements="collapsedUsers"\n\t\t\t\t\t:chatMembers="chatMembers"\n\t\t\t\t\t:allowTeamsSelect="dialog.type !== ChatType.videoconf"\n\t\t\t\t\t@membersChange="onMembersChange" \n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<SettingsSection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t:description="settings.description"\n\t\t\t\t:withSearchOption="canChangeSearchAvailability"\n\t\t\t\t:withAutoDeleteOption="false"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t\t@descriptionChange="onDescriptionChange"\n\t\t\t/>\n\t\t\t<RightsSection\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isUpdating || isLoading"\n\t\t\t:createButtonTitle="loc('IM_UPDATE_CONFIRM')"\n\t\t\t@create="onUpdateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const P={name:"ChannelUpdating",components:{TitleInput:M.TitleInput,ChatAvatar:M.ChatAvatar,ChatMembersSelector:M.ChatMembersSelector,RightsSection:M.RightsSection,AppearanceSection:M.AppearanceSection,PrivacySection:M.PrivacySection,ButtonPanel:M.ButtonPanel,TextareaInput:M.TextareaInput,CreateChatHeading:M.CreateChatHeading},props:{dialogId:{type:String,required:true}},data(){return{isLoading:true,isUpdating:false,areUsersCollapsed:false,collapsedUsersCount:0,avatarFile:null,avatarUrl:"",chatTitle:"",chatMembers:[],settings:{isAvailableInSearch:true,description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},computed:{ChatType:()=>p.ChatType,EmptyAvatarType:()=>m.EmptyAvatarType,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},chatType(){return this.dialog.type},collapsedUsers(){if(!this.areUsersCollapsed){return[]}const t=this.loc("IM_UPDATE_CHANNEL_COLLAPSED_ELEMENT",{"#COUNT#":this.collapsedUsersCount});const e=R({title:t,onclick:this.onCollapsedUsersClick});return[e]},changedChatType(){return this.settings.isAvailableInSearch?p.ChatType.openChannel:p.ChatType.channel}},async created(){await this.fillForm();this.memberDiffManager=new B;this.memberDiffManager.setInitialChatMembers(this.chatMembers);this.memberDiffManager.setInitialManagers(this.rights.managerIds);this.isLoading=false},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},async onUpdateClick(){d.Analytics.getInstance().chatEdit.onSubmitForm(this.dialogId);d.Analytics.getInstance().ignoreNextChatOpen(this.dialogId);this.isUpdating=true;await this.getChatService().updateChat(this.chatId,{title:this.chatTitle,avatar:this.avatarFile,type:this.changedChatType,addedMemberEntities:this.memberDiffManager.getAddedMemberEntities(this.chatMembers),deletedMemberEntities:this.memberDiffManager.getDeletedMemberEntities(this.chatMembers),addedManagers:this.memberDiffManager.getAddedManagers(this.rights.managerIds),deletedManagers:this.memberDiffManager.getDeletedManagers(this.rights.managerIds),ownerId:this.rights.ownerId,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages}).catch((()=>{this.isUpdating=false}));this.isUpdating=false;return c.Messenger.openChat(this.dialogId)},onCancelClick(){d.Analytics.getInstance().ignoreNextChatOpen(this.dialogId);void c.Messenger.openChat(this.dialogId)},onAvatarChange(t){this.avatarFile=t;this.avatarUrl=""},onScroll(){var t,e,a,n;(t=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=o.MenuManager.getMenuById(p.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=o.MenuManager.getMenuById(p.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=o.MenuManager.getMenuById(p.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},getChatService(){if(!this.chatService){this.chatService=new C.ChatService}return this.chatService},async fillForm(){this.chatTitle=this.dialog.name;this.avatarUrl=this.dialog.avatar;this.settings.description=this.dialog.description;this.chatMembers=await this.getMemberEntities();this.rights.ownerId=this.dialog.ownerId;this.rights.manageMessages=this.dialog.permissions.manageMessages;this.rights.managerIds=this.dialog.managerList;this.rights.manageUi=this.dialog.permissions.manageUi;this.rights.manageUsersAdd=this.dialog.permissions.manageUsersAdd;this.rights.manageUsersDelete=this.dialog.permissions.manageUsersDelete;this.settings.isAvailableInSearch=this.dialog.type===p.ChatType.openChannel},async getMemberEntities(){const{memberEntities:t,areUsersCollapsed:e,userCount:a}=await this.getChatService().getMemberEntities(this.chatId);if(e){this.areUsersCollapsed=true;this.collapsedUsersCount=a;return t}return t},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)},async onCollapsedUsersClick(){const t=await g.showExitUpdateChatConfirm(this.dialogId);if(!t){return}await this.onUpdateClick();h.EventEmitter.emit(p.EventType.sidebar.open,{panel:p.SidebarDetailBlock.members,dialogId:this.dialogId})}},template:`\n\t\t<div v-if="isLoading" class="bx-im-content-chat-forms__skeleton"></div>\n\t\t<div v-else class="bx-im-content-chat-forms__content --channel" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar\n\t\t\t\t\t:avatarFile="avatarFile"\n\t\t\t\t\t:chatTitle="chatTitle"\n\t\t\t\t\t:existingAvatarUrl="avatarUrl"\n\t\t\t\t\t:type="EmptyAvatarType.squared"\n\t\t\t\t\t@avatarChange="onAvatarChange"\n\t\t\t\t/>\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHANNEL_TITLE_PLACEHOLDER_V2')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHANNEL_DESCRIPTION_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__description_container">\n\t\t\t\t<TextareaInput\n\t\t\t\t\t:value="settings.description"\n\t\t\t\t\t:placeholder="loc('IM_CREATE_CHANNEL_DESCRIPTION_PLACEHOLDER_V3')"\n\t\t\t\t\t:border="false"\n\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<PrivacySection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t/>\n\t\t\t<CreateChatHeading\n\t\t\t\t:text="loc('IM_CREATE_CHANNEL_MEMBERS_TITLE')"\n\t\t\t\t:hintText="loc('IM_CREATE_CHANNEL_MEMBERS_HINT')"\n\t\t\t/>\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector\n\t\t\t\t\t:customElements="collapsedUsers"\n\t\t\t\t\t:chatMembers="chatMembers"\n\t\t\t\t\t:allowTeamsSelect="true"\n\t\t\t\t\t@membersChange="onMembersChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<RightsSection\n\t\t\t\t:chatType="ChatType.channel"\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isLoading || isUpdating"\n\t\t\t:createButtonTitle="loc('IM_UPDATE_CONFIRM')"\n\t\t\t@create="onUpdateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const N={name:"CollabUpdating",components:{TitleInput:M.TitleInput,ChatAvatar:M.ChatAvatar,TextareaInput:M.TextareaInput,ButtonPanel:M.ButtonPanel,CreateChatHeading:M.CreateChatHeading,RightsSection:U},props:{dialogId:{type:String,required:true}},data(){return{isUpdating:false,avatarFile:null,avatarUrl:"",chatTitle:"",description:"",groupSettings:{ownerId:l.Core.getUserId(),moderatorMembers:[],options:null,permissions:null,isModified:false}}},computed:{EmptyAvatarType:()=>m.EmptyAvatarType,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},collabId(){const{collabId:t}=this.$store.getters["chats/collabs/getByChatId"](this.chatId);return t},updateButtonColorScheme(){return{borderColor:p.Color.transparent,backgroundColor:p.Color.collab60,iconColor:p.Color.white,textColor:p.Color.white,hoverColor:p.Color.collab50}}},created(){this.fillForm();this.initDiffManager()},methods:{initDiffManager(){this.memberDiffManager=new B;const t=this.dialog.managerList.filter((t=>t!==l.Core.getUserId()));this.memberDiffManager.setInitialManagers(t)},async fillForm(){this.chatTitle=this.dialog.name;this.avatarUrl=this.dialog.avatar;this.description=this.dialog.description},onAvatarChange(t){this.avatarFile=t;this.avatarUrl=""},onDescriptionChange(t){this.description=t},onRightsChange(t){const{ownerId:e,moderators:a,permissions:n,options:s}=t;this.groupSettings.ownerId=e;this.groupSettings.moderatorMembers=a;this.groupSettings.permissions=n;this.groupSettings.options=s;this.groupSettings.isModified=true},async onUpdateClick(){d.Analytics.getInstance().chatEdit.onSubmitForm(this.dialogId);d.Analytics.getInstance().ignoreNextChatOpen(this.dialogId);this.isUpdating=true;let t={title:this.chatTitle,avatar:this.avatarFile,description:this.description};if(this.groupSettings.isModified){const e={ownerId:this.groupSettings.ownerId,options:this.groupSettings.options,permissions:this.groupSettings.permissions,addModeratorMembers:this.memberDiffManager.getAddedManagers(this.groupSettings.moderatorMembers),deleteModeratorMembers:this.memberDiffManager.getDeletedManagers(this.groupSettings.moderatorMembers)};t={...t,groupSettings:e}}try{await this.getChatService().updateCollab(this.dialogId,t);this.isUpdating=false;void c.Messenger.openChat(this.dialogId)}catch{this.isUpdating=false}},onCancelClick(){d.Analytics.getInstance().ignoreNextChatOpen(this.dialogId);void c.Messenger.openChat(this.dialogId)},getChatService(){if(!this.chatService){this.chatService=new C.ChatService}return this.chatService},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div class="bx-im-content-chat-forms__content --collab">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar\n\t\t\t\t\t:avatarFile="avatarFile"\n\t\t\t\t\t:existingAvatarUrl="avatarUrl"\n\t\t\t\t\t:chatTitle="chatTitle"\n\t\t\t\t\t:type="EmptyAvatarType.collab"\n\t\t\t\t\t@avatarChange="onAvatarChange"\n\t\t\t\t/>\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_COLLAB_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_COLLAB_DESCRIPTION_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__description_container">\n\t\t\t\t<TextareaInput\n\t\t\t\t\t:value="description"\n\t\t\t\t\t:placeholder="loc('IM_CREATE_COLLAB_DESCRIPTION_PLACEHOLDER')"\n\t\t\t\t\t:border="false"\n\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<RightsSection :collabId="collabId" @change="onRightsChange" />\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isUpdating"\n\t\t\t:createButtonTitle="loc('IM_UPDATE_CONFIRM')"\n\t\t\t:createButtonColorScheme="updateButtonColorScheme"\n\t\t\t@create="onUpdateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const O={name:"UpdateChatContent",components:{GroupChatUpdating:x,ChannelUpdating:P,CollabUpdating:N},props:{entityId:{type:String,required:true}},computed:{ChatType:()=>p.ChatType,chatType(){const t=this.$store.getters["chats/get"](this.entityId,true);return t.type},isChannel(){const t=new Set([p.ChatType.channel,p.ChatType.openChannel]);return t.has(this.chatType)},isChat(){const t=new Set([p.ChatType.chat,p.ChatType.open,p.ChatType.videoconf]);return t.has(this.chatType)},isCollab(){return this.chatType===p.ChatType.collab}},template:`\n\t\t<div class="bx-im-content-chat-forms__container">\n\t\t\t<GroupChatUpdating v-if="isChat" :dialogId="this.entityId" />\n\t\t\t<ChannelUpdating v-else-if="isChannel" :dialogId="this.entityId" />\n\t\t\t<CollabUpdating v-else-if="isCollab" :dialogId="this.entityId" />\n\t\t</div>\n\t`};t.CreateChatContent=_;t.CreatableChat=E;t.UpdateChatContent=O})(this.BX.Messenger.v2.Component.Content=this.BX.Messenger.v2.Component.Content||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX.Socialnetwork.Collab,BX.Event,BX.Main,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Const,BX.Messenger.v2.Component.Content);
//# sourceMappingURL=registry.bundle.map.js