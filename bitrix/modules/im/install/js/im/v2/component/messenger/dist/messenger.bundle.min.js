this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,n,s,i,o,a,r,g,C,l,v,u,c,p,m,M,L,y,d,h,B,X,b,_,I,O,N,f,k,x,A){"use strict";const w={name:"MessengerRoot",components:{MessengerNavigation:g.MessengerNavigation,RecentListContainer:C.RecentListContainer,ChannelListContainer:v.ChannelListContainer,CollabListContainer:u.CollabListContainer,OpenlineListContainer:l.OpenlineListContainer,ChatContent:c.ChatContent,CreateChatContent:p.CreateChatContent,UpdateChatContent:p.UpdateChatContent,OpenlinesContent:m.OpenlinesContent,NotificationContent:L.NotificationContent,OpenlinesV2Content:M.OpenlinesV2Content,MarketContent:y.MarketContent,SettingsContent:d.SettingsContent,CopilotListContainer:h.CopilotListContainer,CopilotContent:B.CopilotContent},data(){return{openlinesContentOpened:false}},computed:{layout(){return this.$store.getters["application/getLayout"]},layoutName(){var t;return(t=this.layout)==null?void 0:t.name},currentLayout(){return O.Layout[this.layout.name]},entityId(){return this.layout.entityId},isOpenline(){return this.layout.name===O.Layout.openlines.name},hasList(){return Boolean(this.currentLayout.list)},containerClasses(){return{"--dark-theme":f.ThemeManager.isDarkTheme(),"--light-theme":f.ThemeManager.isLightTheme(),"--desktop":k.DesktopManager.isDesktop(),"--air":x.LayoutManager.getInstance().isAirDesignEnabled()}},callContainerClass(){return[N.CallManager.viewContainerClass]},hasNavigation(){const t=!x.LayoutManager.getInstance().isAirDesignEnabled();return t!=null?t:true}},watch:{layoutName:{handler(t){if(t!==O.Layout.openlines.name){return}this.openlinesContentOpened=true},immediate:true}},created(){I.InitManager.start();b.CounterManager.getInstance().emitCounters();x.LayoutManager.init();_.Logger.warn("MessengerRoot created");void this.getLayoutManager().prepareInitialLayout();this.sendAnalytics()},beforeUnmount(){this.getLayoutManager().destroy()},methods:{onNavigationClick(t){A.NavigationManager.open(t)},onEntitySelect({layoutName:t,entityId:e}){this.getLayoutManager().setLayout({name:t,entityId:e})},getLayoutManager(){return x.LayoutManager.getInstance()},sendAnalytics(){X.Analytics.getInstance().onOpenMessenger()}},template:`\n\t\t<div class="bx-im-messenger__scope bx-im-messenger__container" :class="containerClasses">\n\t\t\t<MessengerNavigation\n\t\t\t\tv-if="hasNavigation"\n\t\t\t\t:currentLayoutName="currentLayout.name" \n\t\t\t\t@navigationClick="onNavigationClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-messenger__layout_container">\n\t\t\t\t<div class="bx-im-messenger__layout_content">\n\t\t\t\t\t<div v-if="currentLayout.list" class="bx-im-messenger__list_container">\n\t\t\t\t\t\t<KeepAlive>\n\t\t\t\t\t\t\t<component :is="currentLayout.list" @selectEntity="onEntitySelect" />\n\t\t\t\t\t\t</KeepAlive>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-messenger__content_container" :class="{'--with-list': hasList}">\n\t\t\t\t\t\t<div v-if="openlinesContentOpened" class="bx-im-messenger__openlines_container" :class="{'--hidden': !isOpenline}">\n\t\t\t\t\t\t\t<OpenlinesContent v-show="isOpenline" :entityId="entityId" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<component v-if="!isOpenline" :is="currentLayout.content" :entityId="entityId" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div :class="callContainerClass"></div>\n\t`};t.Messenger=w})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX,BX.Messenger.Integration.Viewer,BX,BX,BX.Messenger.v2.Css,BX.Messenger.v2.Css,BX.Messenger.v2.Css,BX.Messenger.v2.Component,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=messenger.bundle.map.js