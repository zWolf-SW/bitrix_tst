this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,n,a,s,i,r,o,c,l,d,h,p,_,u,m){"use strict";const g={components:{ChatButton:e.ChatButton},props:{isCreating:{type:Boolean,required:true},createButtonTitle:{type:String,required:true},createButtonColorScheme:{type:[Object,null],required:false,default:null}},emits:["create","cancel"],computed:{ButtonSize:()=>e.ButtonSize,ButtonColor:()=>e.ButtonColor},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-chat-forms-button-panel__container">\n\t\t\t<ChatButton\n\t\t\t\t:size="ButtonSize.XL"\n\t\t\t\t:color="ButtonColor.Success"\n\t\t\t\t:customColorScheme="createButtonColorScheme"\n\t\t\t\t:text="createButtonTitle"\n\t\t\t\t:isLoading="isCreating"\n\t\t\t\t:isDisabled="isCreating"\n\t\t\t\t@click="$emit('create')"\n\t\t\t\tclass="bx-im-chat-forms-button-panel__create-button"\n\t\t\t/>\n\t\t\t<ChatButton\n\t\t\t\t:size="ButtonSize.XL"\n\t\t\t\t:color="ButtonColor.Link"\n\t\t\t\t:text="loc('IM_CREATE_CHAT_CANCEL')"\n\t\t\t\t:isDisabled="isCreating"\n\t\t\t\t@click="$emit('cancel')"\n\t\t\t/>\n\t\t</div>\n\t`};const C={name:"ChatAvatar",components:{EmptyAvatar:n.EmptyAvatar},props:{avatarFile:{required:true,validator(t){return t instanceof File||h.Type.isNull(t)}},existingAvatarUrl:{type:String,default:""},chatTitle:{type:String,required:true},type:{type:String,default:n.EmptyAvatarType.default}},emits:["avatarChange"],computed:{AvatarSize:()=>n.AvatarSize,preparedAvatar(){if(!this.avatarFile){return null}return URL.createObjectURL(this.avatarFile)},avatarToShow(){return this.preparedAvatar||this.existingAvatarUrl}},methods:{onAvatarChangeClick(){this.$refs.avatarInput.click()},async onAvatarSelect(t){const e=t.target;const n=e.files[0];if(!n){return}const a=await this.getChatService().prepareAvatar(n);if(!a){return}this.$emit("avatarChange",a)},getChatService(){if(!this.chatService){this.chatService=new a.ChatService}return this.chatService}},template:`\n\t\t<EmptyAvatar \n\t\t\t:size="AvatarSize.XXL"\n\t\t\t:url="avatarToShow"\n\t\t\t:title="chatTitle"\n\t\t\t:type="type"\n\t\t\t@click="onAvatarChangeClick"\n\t\t\tclass="bx-im-chat-forms-chat-avatar__container"\n\t\t/>\n\t\t<input \n\t\t\ttype="file" \n\t\t\t@change="onAvatarSelect" \n\t\t\taccept="image/*" \n\t\t\tclass="bx-im-chat-forms-chat-avatar__input" \n\t\t\tref="avatarInput"\n\t\t>\n\t`};const T={props:{chatMembers:{type:Array,required:true},customElements:{type:Array,default:()=>[]},undeselectedItems:{type:Array,default(){return[["user",d.Core.getUserId()]]}},allowTeamsSelect:{type:Boolean,default:false}},emits:["membersChange"],created(){const t=this.loc("IM_CREATE_CHAT_USER_SELECTOR_ADD_MEMBERS_V2");this.membersSelector=new l.TagSelector({maxHeight:99,placeholder:"",addButtonCaption:t,addButtonCaptionMore:t,showCreateButton:false,items:this.customElements,dialogOptions:{enableSearch:true,alwaysShowLabels:true,context:"IM_CHAT_CREATE",entities:this.getEntitiesConfig(),preselectedItems:this.chatMembers,undeselectedItems:this.undeselectedItems,events:{"Item:onSelect":this.onItemsChange,"Item:onDeselect":this.onItemsChange}}})},mounted(){this.membersSelector.renderTo(this.$refs.members)},methods:{getEntitiesConfig(){const t=[{id:"user"}];const e=i.FeatureManager.isFeatureAvailable(i.Feature.chatDepartments);t.push(this.getDepartmentEntityConfig(e));if(this.allowTeamsSelect&&i.FeatureManager.isFeatureAvailable(i.Feature.teamsInStructureAvailable)){t.push(this.getEntityTeamsConfig(e))}return t},getDepartmentEntityConfig(t){if(t){return{id:"department",options:{selectMode:"usersAndDepartments",allowFlatDepartments:true,allowSelectRootDepartment:true}}}return{id:"department"}},getEntityTeamsConfig(t){const e={includedNodeEntityTypes:["team"],useMultipleTabs:true,visual:{avatarMode:"node",tagStyle:"none"}};const n={...e,selectMode:"usersAndDepartments",allowFlatDepartments:true,allowSelectRootDepartment:true};return{id:"structure-node",options:t?n:e}},onItemsChange(t){const e=t.getTarget();const n=e.getSelectedItems();this.$emit("membersChange",n.map((t=>this.prepareTag(t))))},prepareTag(t){return[t.getEntityId(),t.getId()]},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-chat-forms-chat-members__container" ref="members"></div>\n\t`};const E={name:"CreateChatHeading",components:{ChatHint:c.ChatHint},props:{text:{type:String,required:true},hintText:{type:String,required:false,default:""}},computed:{preparedText(){return this.text.replace("#SUBTITLE_START#",'<span class="bx-im-content-create-chat__subheading">').replace("#SUBTITLE_END#","</span>")}},template:`\n\t\t<div class="bx-im-content-create-chat__heading_container">\n\t\t\t<div class="bx-im-content-create-chat__heading" v-html="preparedText"></div>\n\t\t\t<ChatHint v-if="hintText" :text="hintText" />\n\t\t</div>\n\t`};const A={name:"RadioOption",props:{items:{type:Array,required:true}},emits:["change"],data(){return{groupName:h.Text.getRandom()}},computed:{options(){return this.items},selectedValue(){return this.options.find((t=>t.selected===true))}},methods:{onInput(t){this.$emit("change",t.value)}},template:`\n\t\t<div class="bx-im-content-create-chat-radio__container">\n\t\t\t<label v-for="option in options" class="bx-im-content-create-chat-radio__item ui-ctl ui-ctl-radio">\n\t\t\t\t<input type="radio" class="ui-ctl-element" :name="groupName" :checked="option.selected" @input="onInput(option)">\n\t\t\t\t<div class="ui-ctl-label-text">\n\t\t\t\t\t\x3c!-- Text --\x3e\n\t\t\t\t\t<div v-if="option.html" class="bx-im-content-create-chat-radio__label_title" v-html="option.text"></div>\n\t\t\t\t\t<div v-else class="bx-im-content-create-chat-radio__label_title">{{ option.text }}</div>\n\t\t\t\t\t\x3c!-- Subtext --\x3e\n\t\t\t\t\t<template v-if="option.subtext">\n\t\t\t\t\t\t<div v-if="option.html" class="bx-im-content-create-chat-radio__label_subtitle" v-html="option.subtext"></div>\n\t\t\t\t\t\t<div v-else class="bx-im-content-create-chat-radio__label_subtitle">{{ option.subtext }}</div>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t</label>\n\t\t</div>\n\t`};const S={name:"TextareaInput",props:{value:{type:String,default:""},placeholder:{type:String,required:true},border:{type:Boolean,required:false,default:true},rounded:{type:Boolean,required:false,default:true}},emits:["input"],computed:{containerClasses(){return{"--no-border":!this.border,"--rounded":this.rounded}}},methods:{onInput(t){this.$emit("input",t.target.value)}},template:`\n\t\t<div class="bx-im-content-create-chat__textarea_container" :class="containerClasses">\n\t\t\t<div class="ui-ctl ui-ctl-textarea ui-ctl-w100 ui-ctl-no-resize">\n\t\t\t\t<textarea\n\t\t\t\t\t:value="value"\n\t\t\t\t\t:placeholder="placeholder"\n\t\t\t\t\t@input="onInput"\n\t\t\t\t\tclass="bx-im-content-create-chat__textarea ui-ctl-element"\n\t\t\t\t></textarea>\n\t\t\t</div>\n\t\t</div>\n\t`};const I={name:"TitleInput",props:{modelValue:{type:String,default:""},placeholder:{type:String,required:true}},emits:["update:modelValue"],mounted(){this.$refs.titleInput.focus()},methods:{onInput(t){this.$emit("update:modelValue",t.target.value)}},template:`\n\t\t<div class="bx-im-chat-forms-title-input__container">\n\t\t\t<input\n\t\t\t\t:value="modelValue"\n\t\t\t\t:placeholder="placeholder"\n\t\t\t\t@input="onInput"\n\t\t\t\tclass="bx-im-chat-forms-title-input__input"\n\t\t\t\tref="titleInput"\n\t\t\t/>\n\t\t</div>\n\t`};const v={name:"AutoDelete",components:{Toggle:u.Toggle,ChatHint:c.ChatHint,AutoDeleteDropdown:r.AutoDeleteDropdown,AutoDeletePopup:r.AutoDeletePopup},props:{initialDelay:{type:Number,default:0}},emits:["delayChange"],data(){return{delay:this.initialDelay,showPopup:false}},computed:{ToggleSize:()=>u.ToggleSize,hintText(){return this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_MESSAGES_AUTO_DELETE_HINT")},isEnabled(){return this.delay!==p.AutoDeleteDelay.Off},isFeatureAvailable(){return i.FeatureManager.isFeatureAvailable(i.Feature.messagesAutoDeleteAvailable)},isFeatureEnabled(){return i.FeatureManager.isFeatureAvailable(i.Feature.messagesAutoDeleteEnabled)}},watch:{delay(t){this.$emit("delayChange",t)}},methods:{onChangeAutoDeleteState(){if(!this.isFeatureEnabled){i.FeatureManager.messagesAutoDelete.openFeatureSlider();return}if(this.isEnabled){this.delay=p.AutoDeleteDelay.Off}else{this.showPopup=true}},onDelayChange(t){this.delay=t},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div v-if="isFeatureAvailable" class="bx-im-chat-forms-auto-delete__container">\n\t\t\t<Toggle\n\t\t\t\t:size="ToggleSize.M"\n\t\t\t\t:isEnabled="isEnabled"\n\t\t\t\t@click="onChangeAutoDeleteState"\n\t\t\t\tclass="bx-im-chat-forms-auto-delete__toggle"\n\t\t\t/>\n\t\t\t<div class="bx-im-chat-forms-auto-delete__label">\n\t\t\t\t<div class="bx-im-chat-forms-auto-delete__title">\n\t\t\t\t\t{{ loc('IM_CREATE_CHAT_SETTINGS_SECTION_MESSAGES_AUTO_DELETE_TITLE') }}\n\t\t\t\t\t<ChatHint :text="hintText" class="bx-im-chat-forms-auto-delete__hint" />\n\t\t\t\t</div>\n\t\t\t\t<AutoDeleteDropdown \n\t\t\t\t\t:currentDelay="delay" \n\t\t\t\t\t@delayChange="onDelayChange" \n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<AutoDeletePopup\n\t\t\t\tv-if="showPopup"\n\t\t\t\t:autoDeleteDelay="delay"\n\t\t\t\t@close="showPopup = false"\n\t\t\t\t@autoDeleteDelayChange="onDelayChange"\n\t\t\t/>\n\t\t</div>\n\t`};const M={components:{ExpandAnimation:o.ExpandAnimation},props:{name:{type:String,required:true},title:{type:String,required:true},alwaysOpened:{type:Boolean,default:false}},data(){return{isOpened:false}},computed:{containerClasses(){return[`--${this.name}`,{"--active":this.isOpened}]}},created(){if(this.alwaysOpened){this.isOpened=true}},methods:{onHeaderClick(){if(this.alwaysOpened){return}this.isOpened=!this.isOpened}},template:`\n\t\t<div :class="containerClasses" class="bx-im-content-create-chat__section bx-im-content-create-chat__section_scope">\n\t\t\t<div @click="onHeaderClick" class="bx-im-content-create-chat__section_header">\n\t\t\t\t<div class="bx-im-content-create-chat__section_left">\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_icon"></div>\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_text">{{ title }}</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="!alwaysOpened" class="bx-im-content-create-chat__section_right"></div>\t\n\t\t\t</div>\n\t\t\t<ExpandAnimation>\n\t\t\t\t<div v-if="isOpened" class="bx-im-content-create-chat__section_content_container">\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_content">\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ExpandAnimation>\n\t\t</div>\n\t`};const y={props:{name:{type:String,required:true},title:{type:String,required:true}},template:`\n\t\t<div :class="'--' + name" class="bx-im-content-create-chat__section bx-im-content-create-chat__section_scope --external">\n\t\t\t<div class="bx-im-content-create-chat__section_header">\n\t\t\t\t<div class="bx-im-content-create-chat__section_left">\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_icon"></div>\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_text">{{ title }}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-content-create-chat__section_right"></div>\t\n\t\t\t</div>\n\t\t</div>\n\t`};const x={components:{CreateChatSection:M,CreateChatHeading:E,TextareaInput:S,RadioOption:A,AutoDelete:v},props:{description:{type:String,required:true},withSearchOption:{type:Boolean,default:true},withAutoDeleteOption:{type:Boolean,default:true},isAvailableInSearch:{type:Boolean,default:false},autoDeleteDelay:{type:Number,default:0}},emits:["chatTypeChange","descriptionChange","autoDeleteDelayChange"],computed:{privacyOptions(){return[{value:false,text:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_PRIVATE_TITLE"),subtext:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_PRIVATE_SUBTITLE"),selected:!this.isAvailableInSearch},{value:true,text:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_OPEN_TITLE"),subtext:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_OPEN_SUBTITLE"),selected:this.isAvailableInSearch}]}},methods:{onTypeChange(t){this.$emit("chatTypeChange",t)},onDescriptionChange(t){this.$emit("descriptionChange",t)},onAutoDeleteDelayChange(t){this.$emit("autoDeleteDelayChange",t)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="settings" :title="loc('IM_CREATE_CHAT_SETTINGS_SECTION')">\n\t\t\t<div v-if="withSearchOption" class="bx-im-content-create-chat__section_block">\n\t\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_SETTINGS_SECTION_PRIVACY_MSGVER_1')" />\n\t\t\t\t<RadioOption :items="privacyOptions" @change="onTypeChange" />\n\t\t\t</div>\n\t\t\t<AutoDelete\n\t\t\t\tv-if="withAutoDeleteOption"\n\t\t\t\t:initialDelay="autoDeleteDelay"\n\t\t\t\t@delayChange="onAutoDeleteDelayChange" \n\t\t\t/>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_SETTINGS_SECTION_DESCRIPTION')" />\n\t\t\t\t<div class="bx-im-chat-forms-settings__description_container">\n\t\t\t\t\t<TextareaInput\n\t\t\t\t\t\t:value="description"\n\t\t\t\t\t\t:placeholder="loc('IM_CREATE_CHAT_SETTINGS_SECTION_DESCRIPTION_PLACEHOLDER_MSGVER_1')"\n\t\t\t\t\t\t:rounded="false"\n\t\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const f={name:"RoleSelector",components:{Dropdown:m.Dropdown,ChatHint:c.ChatHint},props:{title:{type:String,required:true},dropdownItems:{type:Array,required:true},dropdownId:{type:String,required:true},hintText:{type:String,required:false,default:""}},emits:["itemChange"],template:`\n\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t<div class="bx-im-content-create-chat__section-header">\n\t\t\t\t<div class="bx-im-content-create-chat__section-heading">\n\t\t\t\t\t{{ title }}\n\t\t\t\t</div>\n\t\t\t\t<ChatHint v-if="hintText" :text="hintText" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-forms-chat-settings__manage-select">\n\t\t\t\t<Dropdown\n\t\t\t\t\t:items="dropdownItems"\n\t\t\t\t\t:id="dropdownId" \n\t\t\t\t\t@itemChange="$emit('itemChange', $event)"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const R={name:"UserSelector",components:{ChatHint:c.ChatHint},props:{title:{type:String,required:true},hintText:{type:String,required:false,default:""}},template:`\n\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t<div class="bx-im-content-create-chat__section-header">\n\t\t\t\t<div class="bx-im-content-create-chat__section-heading">\n\t\t\t\t\t{{ title }}\n\t\t\t\t</div>\n\t\t\t\t<ChatHint v-if="hintText" :text="hintText" />\n\t\t\t</div>\n\t\t\t<slot></slot>\n\t\t</div>\n\t`};const N={name:"OwnerSelector",props:{ownerId:{type:Number,required:true}},emits:["ownerChange"],created(){this.membersSelector=new l.TagSelector({multiple:false,maxHeight:33,placeholder:"",addButtonCaption:this.loc("IM_CREATE_CHAT_USER_SELECTOR_CHANGE_OWNER"),addButtonCaptionMore:this.loc("IM_CREATE_CHAT_USER_SELECTOR_CHANGE_OWNER"),showCreateButton:false,dialogOptions:{enableSearch:false,context:"IM_CHAT_CREATE",entities:[{id:"user"},{id:"department"}],preselectedItems:[["user",this.ownerId]]},events:{onBeforeTagAdd:t=>{const{tag:e}=t.getData();e.setDeselectable(false)},onAfterTagAdd:t=>{const{tag:e}=t.getData();this.$emit("ownerChange",e.id)}}})},mounted(){this.membersSelector.renderTo(this.$refs.owner)},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-chat-forms-sections-owner__container" ref="owner"></div>\n\t`};const b={props:{managerIds:{type:Array,required:true}},emits:["managersChange"],computed:{currentUserId(){return d.Core.getUserId()}},created(){const t=this.managerIds.map((t=>["user",t]));this.membersSelector=new l.TagSelector({maxHeight:99,placeholder:"",addButtonCaption:this.loc("IM_CREATE_CHAT_RIGHTS_SECTION_ADD_MANAGERS"),addButtonCaptionMore:this.loc("IM_CREATE_CHAT_RIGHTS_SECTION_ADD_MANAGERS"),showCreateButton:false,dialogOptions:{enableSearch:false,context:"IM_CHAT_CREATE",entities:[{id:"user"},{id:"department"}],preselectedItems:t},events:{onAfterTagAdd:t=>{const e=t.getTarget();this.$emit("managersChange",e.getTags().map((t=>t.id)))},onAfterTagRemove:t=>{const e=t.getTarget();this.$emit("managersChange",e.getTags().map((t=>t.id)))}}})},mounted(){this.membersSelector.renderTo(this.$refs.managers)},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-chat-forms-sections-managers__container" ref="managers"></div>\n\t`};const H=[{value:p.UserRole.member,text:h.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_ROLE_MEMBER")},{value:p.UserRole.manager,text:h.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_ROLE_MANAGER_V2")},{value:p.UserRole.owner,text:h.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_ROLE_OWNER"),default:true}];const D={[p.ChatType.channel]:new Set([p.ChatActionGroup.manageUsersAdd,p.ChatActionGroup.manageUsersDelete,p.ChatActionGroup.manageMessages]),default:new Set([p.ChatActionGroup.manageUsersAdd,p.ChatActionGroup.manageUsersDelete,p.ChatActionGroup.manageUi,p.ChatActionGroup.manageMessages])};const w={[p.ChatType.channel]:h.Loc.getMessage("IM_CREATE_CHANNEL_RIGHTS_SECTION_MANAGE_USERS_ADD"),default:h.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_USERS_ADD")};const O={[p.ChatType.channel]:h.Loc.getMessage("IM_CREATE_CHANNEL_RIGHTS_SECTION_MANAGE_USERS_DELETE"),default:h.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_USERS_DELETE")};const U={[p.ChatType.channel]:h.Loc.getMessage("IM_CREATE_CHANNEL_RIGHTS_SECTION_MANAGE_SENDING"),default:h.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_SENDING_MSGVER_1")};const B={[p.ChatType.channel]:h.Loc.getMessage("IM_CREATE_CHANNEL_OWNER_HINT"),default:h.Loc.getMessage("IM_CREATE_CHAT_OWNER_HINT")};const L={[p.ChatType.channel]:h.Loc.getMessage("IM_CREATE_CHANNEL_MANAGER_HINT"),default:h.Loc.getMessage("IM_CREATE_CHAT_MANAGER_HINT")};const G={[p.ChatType.channel]:h.Loc.getMessage("IM_CREATE_CHANNEL_MANAGE_USERS_ADD_HINT"),default:h.Loc.getMessage("IM_CREATE_CHAT_MANAGE_USERS_ADD_HINT")};const P={[p.ChatType.channel]:h.Loc.getMessage("IM_CREATE_CHANNEL_MANAGE_USERS_DELETE_HINT"),default:h.Loc.getMessage("IM_CREATE_CHAT_MANAGE_USERS_DELETE_HINT")};const $={[p.ChatType.channel]:h.Loc.getMessage("IM_CREATE_CHANNEL_MANAGE_UI_HINT"),default:h.Loc.getMessage("IM_CREATE_CHAT_MANAGE_UI_HINT")};const q={[p.ChatType.channel]:h.Loc.getMessage("IM_CREATE_CHANNEL_MANAGE_SENDING_HINT"),default:h.Loc.getMessage("IM_CREATE_CHAT_MANAGE_SENDING_HINT")};const X={name:"RightsSection",components:{CreateChatSection:M,RoleSelector:f,UserSelector:R,OwnerSelector:N,ManagersSelector:b},props:{ownerId:{type:Number,required:true},managerIds:{type:Array,required:true},manageUsersAdd:{type:String,required:true},manageUsersDelete:{type:String,required:true},manageUi:{type:String,required:true},manageMessages:{type:String,required:true},chatType:{type:String,default:p.ChatType.chat}},emits:["ownerChange","managersChange","manageUsersAddChange","manageUsersDeleteChange","manageUiChange","manageMessagesChange"],computed:{PopupType:()=>p.PopupType,manageUsersAddItems(){return this.prepareDropdownItems(this.manageUsersAdd)},manageUsersDeleteItems(){return this.prepareDropdownItems(this.manageUsersDelete)},manageUiItems(){return this.prepareDropdownItems(this.manageUi)},manageMessagesItems(){return this.prepareDropdownItems(this.manageMessages)},showManageUiBlock(){var t;const e=(t=D[this.chatType])!=null?t:D.default;return e.has(p.ChatActionGroup.manageUi)},canAddUsersCaption(){var t;return(t=w[this.chatType])!=null?t:w.default},canKickUsersCaption(){var t;return(t=O[this.chatType])!=null?t:O.default},canSendCaption(){var t;return(t=U[this.chatType])!=null?t:U.default},ownerHint(){var t;return(t=B[this.chatType])!=null?t:B.default},managerHint(){var t;return(t=L[this.chatType])!=null?t:L.default},addUsersHint(){var t;return(t=G[this.chatType])!=null?t:G.default},deleteUsersHint(){var t;return(t=P[this.chatType])!=null?t:P.default},manageUiHint(){var t;return(t=$[this.chatType])!=null?t:$.default},sendMessagesHint(){var t;return(t=q[this.chatType])!=null?t:q.default}},methods:{prepareDropdownItems(t){return H.map((e=>({...e,default:e.value===t})))},onOwnerChange(t){this.$emit("ownerChange",t)},onManagersChange(t){this.$emit("managersChange",t)},onManageUsersAddChange(t){this.$emit("manageUsersAddChange",t)},onManageUsersDeleteChange(t){this.$emit("manageUsersDeleteChange",t)},onManageUiChange(t){this.$emit("manageUiChange",t)},onManageMessagesChange(t){this.$emit("manageMessagesChange",t)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="rights" :title="loc('IM_CREATE_CHAT_RIGHTS_SECTION')">\n\t\t\t<UserSelector :title="loc('IM_CREATE_CHAT_SETTINGS_SECTION_OWNER')" :hintText="ownerHint">\n\t\t\t\t<OwnerSelector :ownerId="ownerId" @ownerChange="onOwnerChange" />\n\t\t\t</UserSelector>\n\t\t\t<UserSelector :title="loc('IM_CREATE_CHAT_RIGHTS_SECTION_MANAGERS')" :hintText="managerHint">\n\t\t\t\t<ManagersSelector :managerIds="managerIds" @managersChange="onManagersChange" />\n\t\t\t</UserSelector>\n\t\t\t<RoleSelector\n\t\t\t\t:title="canAddUsersCaption"\n\t\t\t\t:hintText="addUsersHint"\n\t\t\t\t:dropdownId="PopupType.createChatManageUsersAddMenu"\n\t\t\t\t:dropdownItems="manageUsersAddItems"\n\t\t\t\t@itemChange="onManageUsersAddChange"\n\t\t\t/>\n\t\t\t<RoleSelector\n\t\t\t\t:title="canKickUsersCaption"\n\t\t\t\t:hintText="deleteUsersHint"\n\t\t\t\t:dropdownId="PopupType.createChatManageUsersDeleteMenu"\n\t\t\t\t:dropdownItems="manageUsersDeleteItems"\n\t\t\t\t@itemChange="onManageUsersDeleteChange"\n\t\t\t/>\n\t\t\t<RoleSelector\n\t\t\t\tv-if="showManageUiBlock"\n\t\t\t\t:title="loc('IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_UI_MSGVER_2')"\n\t\t\t\t:hintText="manageUiHint"\n\t\t\t\t:dropdownId="PopupType.createChatManageUiMenu"\n\t\t\t\t:dropdownItems="manageUiItems"\n\t\t\t\t@itemChange="onManageUiChange"\n\t\t\t/>\n\t\t\t<RoleSelector\n\t\t\t\t:title="canSendCaption"\n\t\t\t\t:hintText="sendMessagesHint"\n\t\t\t\t:dropdownId="PopupType.createChatManageMessagesMenu"\n\t\t\t\t:dropdownItems="manageMessagesItems"\n\t\t\t\t@itemChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</CreateChatSection>\n\t`};const F={components:{CreateChatSection:M,RadioOption:A},props:{withSearchOption:{type:Boolean,default:true},isAvailableInSearch:{type:Boolean,default:false}},emits:["chatTypeChange"],computed:{privacyOptions(){return[{value:false,text:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_PRIVATE_TITLE"),subtext:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_PRIVATE_SUBTITLE_V2"),selected:!this.isAvailableInSearch},{value:true,text:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_OPEN_TITLE"),subtext:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_OPEN_SUBTITLE_V2"),selected:this.isAvailableInSearch}]}},methods:{onTypeChange(t){this.$emit("chatTypeChange",t)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection\n\t\t\tname="privacy"\n\t\t\t:title="loc('IM_CREATE_CHAT_PRIVACY_SECTION_V2')"\n\t\t\t:alwaysOpened="true"\n\t\t>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<RadioOption :items="privacyOptions" @change="onTypeChange" />\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const k={components:{CreateChatSection:M,CreateChatHeading:E,Dropdown:m.Dropdown,Toggle:u.Toggle},props:{passwordNeeded:{type:Boolean,required:true},password:{type:String,required:true}},emits:["passwordNeededChange","passwordChange"],computed:{ToggleSize:()=>u.ToggleSize},methods:{onPasswordNeededChange(t){this.$emit("passwordNeededChange",t)},onPasswordChange(t){this.$emit("passwordChange",t.target.value)},onToggleLabelClick(){this.onPasswordNeededChange(!this.passwordNeeded)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="conference" :title="loc('IM_CREATE_CHAT_CONFERENCE_SECTION')">\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_CONFERENCE_SECTION_PRIVACY')" />\n\t\t\t\t<div @click="onToggleLabelClick" class="bx-im-chat-forms-chat-settings__type-select">\n\t\t\t\t\t<Toggle :size="ToggleSize.M" :isEnabled="passwordNeeded" />\n\t\t\t\t\t<div class="bx-im-chat-forms-chat-settings__type-select_label">\n\t\t\t\t\t\t{{ loc('IM_CREATE_CHAT_CONFERENCE_SECTION_USE_PASSWORD') }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="passwordNeeded" class="bx-im-chat-forms-chat-settings__password-container ui-ctl ui-ctl-textbox">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\tclass="bx-im-content-create-chat-conference__password-input ui-ctl-element"\n\t\t\t\t\t\t:value="password"\n\t\t\t\t\t\t:placeholder="loc('IM_CREATE_CHAT_CONFERENCE_SECTION_PASSWORD_PLACEHOLDER')"\n\t\t\t\t\t\t@input="onPasswordChange"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const V={components:{CreateChatSection:M},data(){return{}},template:`\n\t\t<Section name="appearance" title="Appearance" />\n\t`};t.ButtonPanel=g;t.ChatAvatar=C;t.ChatMembersSelector=T;t.CreateChatHeading=E;t.RadioOption=A;t.TextareaInput=S;t.TitleInput=I;t.AutoDelete=v;t.CreateChatSection=M;t.CreateChatExternalSection=y;t.SettingsSection=x;t.RightsSection=X;t.PrivacySection=F;t.ConferenceSection=k;t.AppearanceSection=V})(this.BX.Messenger.v2.Component.Content=this.BX.Messenger.v2.Component.Content||{},BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Service,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Animation,BX.Messenger.v2.Component.Elements,BX.UI.EntitySelector,BX.Messenger.v2.Application,BX,BX.Messenger.v2.Const,BX,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Elements);
//# sourceMappingURL=registry.bundle.map.js