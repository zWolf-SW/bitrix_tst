this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,i,n,s,o,a,r,l,d,c,u,h,p,g,m,I,b,_,T,v,C,E,y){"use strict";const S="user";const L=600;const B={name:"AddToChatContent",components:{AddToChat:y.AddToChat,ChatButton:g.ChatButton},props:{dialogId:{type:String,required:true},isLoading:{type:Boolean,required:false},height:{type:Number,default:L}},emits:["inviteMembers","close"],data(){return{searchQuery:"",showHistory:true,selectedItems:new Set}},computed:{ButtonSize:()=>g.ButtonSize,ButtonColor:()=>g.ButtonColor,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},isChat(){return this.dialog.type!==C.ChatType.user},isCollab(){return this.dialog.type===C.ChatType.collab},isOpenLines(){return this.dialog.type===C.ChatType.lines},isChannel(){return n.ChannelManager.isChannel(this.dialogId)},showHistoryOption(){return!this.isCollab&&this.isChat&&!this.isChannel&&!this.isOpenLines},containerStyles(){return{height:`${this.height}px`}}},created(){this.membersSelector=this.getTagSelector()},mounted(){this.membersSelector.renderTo(this.$refs["tag-selector"]);this.membersSelector.focusTextBox()},beforeUnmount(){E.Analytics.getInstance().userAdd.onClosePopup()},activated(){this.membersSelector.hideAddButton();this.membersSelector.showTextBox();this.membersSelector.focusTextBox()},methods:{getTagSelector(){let t=null;return new i.TagSelector({maxHeight:111,showAddButton:false,showTextBox:true,addButtonCaption:this.loc("IM_ENTITY_SELECTOR_ADD_TO_CHAT_ADD_MSGVER_1"),addButtonCaptionMore:this.loc("IM_ENTITY_SELECTOR_ADD_TO_CHAT_ADD_MORE"),showCreateButton:false,events:{onBeforeTagAdd:()=>{clearTimeout(t)},onAfterTagAdd:t=>{const{tag:e}=t.getData();this.selectedItems.add(e.id);this.focusSelector()},onKeyUp:t=>{const{event:e}=t.getData();T.EventEmitter.emit(C.EventType.search.keyPressed,{keyboardEvent:e})},onBeforeTagRemove:()=>{clearTimeout(t)},onAfterTagRemove:t=>{const{tag:e}=t.getData();this.selectedItems.delete(e.id);this.focusSelector()},onInput:()=>{E.Analytics.getInstance().userAdd.onStartSearch({dialogId:this.dialogId});this.searchQuery=this.membersSelector.getTextBoxValue().trim().toLowerCase()},onBlur:()=>{const e=this.membersSelector.getTextBoxValue();if(e.length>0){return}t=setTimeout((()=>{this.membersSelector.hideTextBox();this.membersSelector.showAddButton()}),200)},onContainerClick:()=>{this.focusSelector()}}})},focusSelector(){this.membersSelector.hideAddButton();this.membersSelector.showTextBox();this.membersSelector.focusTextBox()},onSelectItem(t){const{dialogId:e,nativeEvent:i}=t;if(this.selectedItems.has(e)){const t={id:e,entityId:S};this.membersSelector.removeTag(t)}else{const t=this.getTagByDialogId(e);this.membersSelector.addTag(t)}this.membersSelector.clearTextBox();if(!i.altKey){this.searchQuery=""}},getTagByDialogId(t){const e=this.$store.getters["users/get"](t,true);const i=e.type===C.UserType.extranet;const n=i?"extranet":"employee";return{id:t,entityId:S,entityType:n,title:e.name,avatar:e.avatar.length>0?e.avatar:null}},onInviteClick(){const t=[...this.selectedItems];this.$emit("inviteMembers",{members:t,showHistory:this.showHistory})},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-entity-selector-add-to-chat__container" :style="containerStyles">\n\t\t\t<div class="bx-im-entity-selector-add-to-chat__input" ref="tag-selector"></div>\n\t\t\t<div v-if="showHistoryOption" class="bx-im-entity-selector-add-to-chat__show-history">\n\t\t\t\t<input type="checkbox" id="bx-im-entity-selector-add-to-chat-show-history" v-model="showHistory">\n\t\t\t\t<label for="bx-im-entity-selector-add-to-chat-show-history">\n\t\t\t\t\t{{ loc('IM_ENTITY_SELECTOR_ADD_TO_CHAT_SHOW_HISTORY')}}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class="bx-im-entity-selector-add-to-chat__search-result-container">\n\t\t\t\t<AddToChat\n\t\t\t\t\t:query="searchQuery"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t:selectedItems="[...selectedItems]"\n\t\t\t\t\t@clickItem="onSelectItem"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-entity-selector-add-to-chat__buttons">\n\t\t\t\t<ChatButton\n\t\t\t\t\t:size="ButtonSize.L"\n\t\t\t\t\t:color="ButtonColor.Primary"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:isLoading="isLoading"\n\t\t\t\t\t:text="loc('IM_ENTITY_SELECTOR_ADD_TO_CHAT_INVITE_BUTTON')"\n\t\t\t\t\t:isDisabled="selectedItems.size === 0"\n\t\t\t\t\t@click="onInviteClick"\n\t\t\t\t/>\n\t\t\t\t<ChatButton\n\t\t\t\t\t:size="ButtonSize.L"\n\t\t\t\t\t:color="ButtonColor.LightBorder"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:text="loc('IM_ENTITY_SELECTOR_ADD_TO_CHAT_CANCEL_BUTTON')"\n\t\t\t\t\t@click="$emit('close')"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const f="im-add-to-chat-popup";const A={name:"AddToChat",components:{MessengerPopup:_.MessengerPopup,AddToChatContent:B},props:{bindElement:{type:Object,required:true},dialogId:{type:String,required:true},popupConfig:{type:Object,required:true}},emits:["close"],data(){return{isLoading:false}},computed:{POPUP_ID:()=>f,config(){return{titleBar:this.$Bitrix.Loc.getMessage("IM_ENTITY_SELECTOR_ADD_TO_CHAT_ADD_MEMBERS_TITLE"),closeIcon:true,bindElement:this.bindElement,offsetTop:this.popupConfig.offsetTop,offsetLeft:this.popupConfig.offsetLeft,padding:0,contentPadding:0,contentBackground:"#fff",className:"bx-im-entity-selector-add-to-chat__scope"}},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},isChat(){return this.dialog.type!==C.ChatType.user},chatId(){return this.dialog.chatId}},created(){this.chatService=new e.ChatService},methods:{inviteMembers(t){const{members:e,showHistory:i}=t;if(this.isChat){this.extendChat(e,i)}else{e.push(this.dialogId,a.Core.getUserId());void this.createChat(e)}},extendChat(t,e){this.isLoading=true;this.chatService.addToChat({chatId:this.chatId,members:t,showHistory:e}).then((()=>{this.isLoading=false;this.$emit("close")})).catch((()=>{this.isLoading=false;this.$emit("close")}))},async createChat(t){this.isLoading=true;const{newDialogId:e}=await this.chatService.createChat({title:null,description:null,members:t,ownerId:a.Core.getUserId(),isPrivate:true}).catch((()=>{this.isLoading=false}));this.isLoading=false;this.$emit("close");void v.Messenger.openChat(e)}},template:`\n\t\t<MessengerPopup\n\t\t\t:config="config"\n\t\t\t:id="POPUP_ID"\n\t\t\t@close="$emit('close')"\n\t\t>\n\t\t\t<AddToChatContent \n\t\t\t\t:dialogId="dialogId" \n\t\t\t\t:isLoading="isLoading"\n\t\t\t\t@close="$emit('close')"\n\t\t\t\t@inviteMembers="inviteMembers"\n\t\t\t/>\n\t\t</MessengerPopup>\n\t`};class M{addEmployees({dialogId:t,members:e}){const i={data:{dialogId:t,members:I.Utils.user.prepareSelectorIds(e)}};m.runAction(C.RestMethod.socialnetworkMemberAdd,i).catch((([t])=>{console.error("CollabInvitationService: add employee error",t)}))}copyLink(t){const e={data:{collabId:t}};return m.runAction(C.RestMethod.intranetInviteGetLinkByCollabId,e).catch((([t])=>{console.error("CollabInvitationService: getting invite link error",t);throw t}))}updateLink(t){const e={data:{collabId:t}};return m.runAction(C.RestMethod.intranetInviteRegenerateLinkByCollabId,e).catch((([t])=>{console.error("CollabInvitationService: updating invite link error",t);throw t}))}}const O={name:"CopyInviteLink",components:{ChatButton:g.ChatButton},directives:{hint:d.hint},props:{dialogId:{type:String,required:true},collabId:{type:Number,required:true}},data(){return{isCopyingInviteLink:false,isUpdatingLink:false}},computed:{ButtonSize:()=>g.ButtonSize,ButtonColor:()=>g.ButtonColor,isInviteLinkAvailable(){return h.FeatureManager.isFeatureAvailable(h.Feature.inviteByLinkAvailable)},isEnabledCollabersInvitation(){return h.FeatureManager.isFeatureAvailable(h.Feature.enabledCollabersInvitation)},updateLinkHint(){return{text:this.loc("IM_ENTITY_SELECTOR_ADD_TO_COLLAB_LINK_UPDATE_HINT"),popupOptions:{width:278,bindOptions:{position:"top"},angle:{offset:36,position:"top"},targetContainer:document.body,offsetTop:-8}}},canUpdateLink(){return u.PermissionManager.getInstance().canPerformActionByRole(C.ActionByRole.updateInviteLink,this.dialogId)}},methods:{async copyInviteLink(){if(!this.isEnabledCollabersInvitation){this.showHelper();return}try{this.isCopyingInviteLink=true;const t=await(new M).copyLink(this.collabId);await I.Utils.text.copyToClipboard(t);p.Notifier.onCopyLinkComplete()}catch{p.Notifier.onCopyLinkError()}finally{this.isCopyingInviteLink=false}},async updateLink(){if(!this.isEnabledCollabersInvitation){this.showHelper();return}try{this.isUpdatingLink=true;await(new M).updateLink(this.collabId);p.Notifier.collab.onUpdateLinkComplete()}catch{p.Notifier.onDefaultError()}finally{this.isUpdatingLink=false}},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)},showHelper(){new c.FeaturePromoter({code:C.SliderCode.collabInviteOff}).show()}},template:`\n\t\t<div v-if="isInviteLinkAvailable" class="bx-im-add-to-collab__invite-block --link">\n\t\t\t<span class="bx-im-add-to-collab__invite-block-title --ellipsis">\n\t\t\t\t{{ loc('IM_ENTITY_SELECTOR_ADD_TO_COLLAB_INVITE_BY_LINK') }}\n\t\t\t</span>\n\t\t\t<ChatButton\n\t\t\t\t:size="ButtonSize.M"\n\t\t\t\t:color="ButtonColor.Primary"\n\t\t\t\t:isRounded="true"\n\t\t\t\t:isUppercase="false"\n\t\t\t\t:isLoading="isCopyingInviteLink"\n\t\t\t\t:isDisabled="isUpdatingLink"\n\t\t\t\t:text="loc('IM_ENTITY_SELECTOR_ADD_TO_COLLAB_COPY_LINK')"\n\t\t\t\t@click="copyInviteLink"\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tv-if="canUpdateLink"\n\t\t\t\tv-hint="updateLinkHint"\n\t\t\t\t:class="{'--loading': isUpdatingLink}"\n\t\t\t\tclass="bx-im-add-to-collab__update-link_button"\n\t\t\t\t@click="updateLink"\n\t\t\t>\n\t\t\t\t<span class="bx-im-add-to-collab__update-link_icon"></span>\n\t\t\t</button>\n\t\t</div>\n\t`};const k="SidePanel.Slider:onClose";const D="main:helper";const x={name:"AddGuestsTab",components:{ChatButton:g.ChatButton,ScrollWithGradient:l.ScrollWithGradient,CopyInviteLink:O},props:{dialogId:{type:String,required:true},height:{type:Number,default:0}},emits:["close","closeHelpdeskSlider","openHelpdeskSlider"],data(){return{isAddButtonDisabled:true,isInvitingGuests:false}},computed:{ButtonSize:()=>g.ButtonSize,ButtonColor:()=>g.ButtonColor,isCurrentUserCollaber(){const t=this.$store.getters["users/get"](a.Core.getUserId(),true);return t.type===C.UserType.collaber},preparedDescription(){if(this.isCurrentUserCollaber){return this.loc("IM_ENTITY_SELECTOR_ADD_TO_COLLAB_DESCRIPTION_TEXT_GUEST")}return this.loc("IM_ENTITY_SELECTOR_ADD_TO_COLLAB_DESCRIPTION_TEXT_EMPLOYEE")},preparedDescriptionTitle(){if(this.isCurrentUserCollaber){return this.loc("IM_ENTITY_SELECTOR_ADD_TO_COLLAB_DESCRIPTION_TITLE_GUEST")}return this.loc("IM_ENTITY_SELECTOR_ADD_TO_COLLAB_DESCRIPTION_TITLE_EMPLOYEE")},chatId(){const t=this.$store.getters["chats/get"](this.dialogId,true);return t.chatId},collabId(){const t=this.$store.getters["chats/collabs/getByChatId"](this.chatId);return t.collabId},containerStyles(){return{height:`${this.height}px`}},isPhoneInviteAvailable(){return h.FeatureManager.isFeatureAvailable(h.Feature.inviteByPhoneAvailable)},preparedInvitationTitle(){if(this.isPhoneInviteAvailable){return this.loc("IM_ENTITY_SELECTOR_ADD_TO_COLLAB_INVITE_BY_PHONE_OR_EMAIL")}return this.loc("IM_ENTITY_SELECTOR_ADD_TO_COLLAB_INVITE_BY_EMAIL")},isCollaber(){const t=this.$store.getters["users/get"](a.Core.getUserId());return t.type===C.UserType.collaber},isEnabledCollabersInvitation(){return h.FeatureManager.isFeatureAvailable(h.Feature.enabledCollabersInvitation)}},created(){this.initInvitationInput();T.EventEmitter.subscribe(k,this.onCloseOpenHelpdeskSlider)},mounted(){this.invitationGuests.renderTo(this.$refs["im-collab-invitation-guests-input"])},beforeUnmount(){this.invitationGuests.unsubscribe("readyState",this.onReadySaveInputHandler);this.invitationGuests.unsubscribe("onUnreadySave",this.onUnreadySaveInputHandler);T.EventEmitter.unsubscribe(k,this.onCloseOpenHelpdeskSlider)},methods:{openHelpdesk(){this.$emit("openHelpdeskSlider");const t="22706836";r.openHelpdeskArticle(t)},initInvitationInput(){this.invitationGuests=new o.InvitationInput;this.invitationGuests.subscribe("onReadySave",this.onReadySaveInputHandler);this.invitationGuests.subscribe("onUnreadySave",this.onUnreadySaveInputHandler)},onReadySaveInputHandler(){this.isAddButtonDisabled=false},onUnreadySaveInputHandler(){this.isAddButtonDisabled=true;this.isInvitingGuests=false},async addGuestToCollab(){this.isInvitingGuests=true;await this.invitationGuests.inviteToGroup(this.collabId);this.isInvitingGuests=false;this.$emit("close")},onInvitationGuests(){if(!this.isEnabledCollabersInvitation){this.showHelper()}},showHelper(){new c.FeaturePromoter({code:C.SliderCode.collabInviteOff}).show()},onCloseOpenHelpdeskSlider({data:t}){const[e]=t;const i=e.getSlider().getUrl().toString();if(i===D){this.$emit("closeHelpdeskSlider")}},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div class="bx-im-add-to-collab__container" :style="containerStyles">\n\t\t\t<div class="bx-im-add-to-collab__invite-section">\n\t\t\t\t<ScrollWithGradient :gradientHeight="28" :withShadow="true">\n\t\t\t\t\t<div class="bx-im-add-to-collab__content">\n\t\t\t\t\t\t<div class="bx-im-add-to-collab__description">\n\t\t\t\t\t\t\t<div class="bx-im-add-to-collab__description_icon"></div>\n\t\t\t\t\t\t\t<div class="bx-im-add-to-collab__description_content">\n\t\t\t\t\t\t\t\t<div class="bx-im-add-to-collab__description_title">{{ preparedDescriptionTitle }}</div>\n\t\t\t\t\t\t\t\t<div class="bx-im-add-to-collab__description_text">{{ preparedDescription }}</div>\n\t\t\t\t\t\t\t\t<a class="bx-im-add-to-collab__helpdesk-link" @click.prevent="openHelpdesk">\n\t\t\t\t\t\t\t\t\t{{ loc('IM_ENTITY_SELECTOR_ADD_TO_COLLAB_HELPDESK_LINK') }}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<CopyInviteLink :collabId="collabId" :dialogId="dialogId" />\n\t\t\t\t\t\t<div class="bx-im-add-to-collab__invite-block">\n\t\t\t\t\t\t\t<span class="bx-im-add-to-collab__invite-block-title --ellipsis">\n\t\t\t\t\t\t\t\t{{ preparedInvitationTitle }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\tref="im-collab-invitation-guests-input" \n\t\t\t\t\t\t\t\tclass="bx-im-add-to-collab__invite-block-input"\n\t\t\t\t\t\t\t\t@click="onInvitationGuests"\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ScrollWithGradient>\n\t\t\t</div>\n\t\t\t<div class="bx-im-add-to-collab__buttons">\n\t\t\t\t<ChatButton\n\t\t\t\t\t:size="ButtonSize.L"\n\t\t\t\t\t:color="ButtonColor.Collab"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:text="loc('IM_ENTITY_SELECTOR_ADD_TO_CHAT_INVITE_BUTTON')"\n\t\t\t\t\t:isDisabled="isAddButtonDisabled || isInvitingGuests"\n\t\t\t\t\t:isLoading="isInvitingGuests"\n\t\t\t\t\t@click="addGuestToCollab"\n\t\t\t\t/>\n\t\t\t\t<ChatButton\n\t\t\t\t\t:size="ButtonSize.L"\n\t\t\t\t\t:color="ButtonColor.LightBorder"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:text="loc('IM_ENTITY_SELECTOR_ADD_TO_CHAT_CANCEL_BUTTON')"\n\t\t\t\t\t@click="$emit('close')"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const w={name:"AddEmployeesTab",components:{AddToChatContent:B},props:{dialogId:{type:String,required:true},height:{type:Number,required:true}},emits:["close"],methods:{inviteMembers({members:t}){(new M).addEmployees({dialogId:this.dialogId,members:t});this.$emit("close")}},template:`\n\t\t<div class="bx-im-add-to-collab__employees-tab-container">\n\t\t\t<AddToChatContent\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:height="height"\n\t\t\t\t@inviteMembers="inviteMembers"\n\t\t\t\t@close="$emit('close')"\n\t\t\t/>\n\t\t</div>\n\t`};const P=Object.freeze({guests:"guests",employees:"employees"});const H=[{id:P.guests,title:s.Loc.getMessage("IM_ENTITY_SELECTOR_GUESTS_TAB")},{id:P.employees,title:s.Loc.getMessage("IM_ENTITY_SELECTOR_EMPLOYEES_TAB")}];const N="im-add-to-collab-popup";const R=498;const U={name:"AddToCollab",components:{MessengerPopup:_.MessengerPopup,SegmentButton:g.SegmentButton,AddGuestsTab:x,AddEmployeesTab:w},props:{bindElement:{type:Object,required:true},dialogId:{type:String,required:true},popupConfig:{type:Object,required:true}},emits:["close"],data(){return{activeTabId:P.guests}},computed:{POPUP_ID:()=>N,Tabs:()=>H,config(){return{titleBar:this.$Bitrix.Loc.getMessage("IM_ENTITY_SELECTOR_ADD_TO_COLLAB_TITLE"),closeIcon:true,bindElement:this.bindElement,offsetTop:this.popupConfig.offsetTop,offsetLeft:this.popupConfig.offsetLeft,padding:0,contentPadding:0,contentBackground:"#fff",className:"bx-im-add-to-collab__scope"}},isEnabledCollabersInvitation(){return h.FeatureManager.isFeatureAvailable(h.Feature.enabledCollabersInvitation)},tabComponent(){return this.activeTabId===P.guests?x:w},isCollaber(){const t=this.$store.getters["users/get"](a.Core.getUserId());return t.type===C.UserType.collaber},isInviteLinkAvailable(){return h.FeatureManager.isFeatureAvailable(h.Feature.inviteByLinkAvailable)},finalHeight(){const t=58+12;const e=38;let i=R;if(this.isCollaber){i-=e}if(!this.isInviteLinkAvailable){i-=t}return i}},created(){this.activeTabId=this.isEnabledCollabersInvitation?P.guests:P.employees},methods:{onTabSwitch(t){this.activeTabId=t}},template:`\n\t\t<MessengerPopup\n\t\t\t:config="config"\n\t\t\t:id="POPUP_ID"\n\t\t\tv-slot="{ enableAutoHide, disableAutoHide }"\n\t\t\t@close="$emit('close')"\n\t\t>\n\t\t\t<div class="bx-im-add-to-collab__tabs">\n\t\t\t\t<SegmentButton \n\t\t\t\t\t:tabs="Tabs" \n\t\t\t\t\t:activeTabId="activeTabId" \n\t\t\t\t\t@segmentSelected="onTabSwitch"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<KeepAlive>\n\t\t\t\t<component\n\t\t\t\t\t:is="tabComponent"\n\t\t\t\t\t:dialogId="dialogId" \n\t\t\t\t\t:height="finalHeight"\n\t\t\t\t\t@close="$emit('close')"\n\t\t\t\t\t@openHelpdeskSlider="disableAutoHide"\n\t\t\t\t\t@closeHelpdeskSlider="enableAutoHide"\n\t\t\t\t/>\n\t\t\t</KeepAlive>\n\t\t</MessengerPopup>\n\t`};const $={name:"ForwardContent",components:{ForwardSearch:y.ForwardSearch,ChatSearchInput:y.ChatSearchInput},props:{messagesIds:{type:Array,required:true},dialogId:{type:String,required:true}},emits:["close"],data(){return{searchQuery:"",isLoading:false}},beforeUnmount(){E.Analytics.getInstance().messageForward.onClosePopup()},methods:{onLoading(t){this.isLoading=t},onUpdateSearch(t){E.Analytics.getInstance().messageForward.onStartSearch({dialogId:this.dialogId});this.searchQuery=t.trim().toLowerCase()},async onSelectItem(t){const{dialogId:e}=t;T.EventEmitter.emit(C.EventType.dialog.closeBulkActionsMode,{dialogId:e});await v.Messenger.openChat(e);T.EventEmitter.emit(C.EventType.textarea.insertForward,{messagesIds:this.messagesIds,dialogId:e});this.$emit("close")}},template:`\n\t\t<div class="bx-im-entity-selector-forward__container">\n\t\t\t<div class="bx-im-entity-selector-forward__input">\n\t\t\t\t<ChatSearchInput \n\t\t\t\t\t:searchMode="true" \n\t\t\t\t\t:isLoading="isLoading" \n\t\t\t\t\t:withIcon="false" \n\t\t\t\t\t:delayForFocusOnStart="1"\n\t\t\t\t\t@updateSearch="onUpdateSearch"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-entity-selector-forward__search-result-container">\n\t\t\t\t<ForwardSearch\n\t\t\t\t\t:query="searchQuery"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t@clickItem="onSelectItem"\n\t\t\t\t\t@loading="onLoading"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const F="im-forward-popup";const X={name:"ForwardPopup",components:{MessengerPopup:_.MessengerPopup,ForwardContent:$},props:{messagesIds:{type:Array,required:true},dialogId:{type:String,required:true}},emits:["close"],computed:{POPUP_ID:()=>F,config(){return{titleBar:this.popupTitle,closeIcon:true,targetContainer:document.body,fixed:true,draggable:true,padding:0,autoHide:false,contentPadding:0,contentBackground:"#fff",overlay:true,className:"bx-im-entity-selector-forward__scope"}},popupTitle(){return this.messagesIds.length>1?this.loc("IM_ENTITY_SELECTOR_ADD_TO_CHAT_FORWARD_TITLE_SEVERAL_MESSAGES"):this.loc("IM_ENTITY_SELECTOR_ADD_TO_CHAT_FORWARD_TITLE")}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<MessengerPopup\n\t\t\t:id="POPUP_ID"\n\t\t\t:config="config"\n\t\t\t@close="$emit('close')"\n\t\t>\n\t\t\t<ForwardContent\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:messagesIds="messagesIds" \n\t\t\t\t@close="$emit('close')"\n\t\t\t/>\n\t\t</MessengerPopup>\n\t`};t.AddToChat=A;t.AddToCollab=U;t.ForwardPopup=X})(this.BX.Messenger.v2.Component.EntitySelector=this.BX.Messenger.v2.Component.EntitySelector||{},BX.Messenger.v2.Service,BX.UI.EntitySelector,BX.Messenger.v2.Lib,BX,BX.Intranet,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Vue3.Directives,BX.UI,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Main,BX.Messenger.v2.Component.Elements,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Component);
//# sourceMappingURL=registry.bundle.map.js