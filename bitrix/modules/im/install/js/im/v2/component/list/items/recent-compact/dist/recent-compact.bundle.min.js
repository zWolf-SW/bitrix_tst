this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,n,i,a,s,o,r,c,l,m,v,d){"use strict";const g=Object.freeze({[v.NavigationMenuItem.notification]:c.Outline.NOTIFICATION,[v.NavigationMenuItem.copilot]:c.Outline.COPILOT,[v.NavigationMenuItem.openlines]:c.Outline.OPEN_CHANNELS,[v.NavigationMenuItem.openlinesV2]:c.Outline.OPEN_CHANNELS});const u=24;const p={name:"CompactNavigationItem",components:{BIcon:c.BIcon},props:{id:{type:String,required:true}},computed:{ICON_SIZE:()=>u,Color:()=>v.Color,NavigationItemToIcon:()=>g,counter(){var t;const e={[v.NavigationMenuItem.notification]:"notifications/getCounter",[v.NavigationMenuItem.copilot]:"counters/getTotalCopilotCounter",[v.NavigationMenuItem.openlines]:"counters/getTotalLinesCounter",[v.NavigationMenuItem.openlinesV2]:"counters/getTotalLinesCounter"};return(t=this.$store.getters[e[this.id]])!=null?t:0},hasCounter(){return this.counter>0},formattedCounter(){if(!this.hasCounter){return""}return this.counter>99?"99+":String(this.counter)},iconColorToken(){if(this.counter>0){return"var(--ui-color-design-outline-content)"}return"var(--ui-color-design-outline-na-content)"}},methods:{onNavigationItemClick(){void l.Messenger.openNavigationItem({id:this.id})}},template:`\n\t\t<div class="bx-im-compact-navigation__icon --ui-hoverable">\n\t\t\t<BIcon\n\t\t\t\t:key="id"\n\t\t\t\t:name="NavigationItemToIcon[id]"\n\t\t\t\t:hoverable-alt="true"\n\t\t\t\t:color="iconColorToken"\n\t\t\t\t:size="ICON_SIZE"\n\t\t\t\t@click="onNavigationItemClick"\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tv-if="hasCounter"\n\t\t\t\tclass="bx-im-compact-navigation__icon-counter"\n\t\t\t>\n\t\t\t\t{{ formattedCounter }}\n\t\t\t</div>\n\t\t</div>\n\t`};const h=[v.NavigationMenuItem.notification,v.NavigationMenuItem.copilot,v.NavigationMenuItem.openlines,v.NavigationMenuItem.openlinesV2];const I={name:"CompactNavigation",components:{CompactNavigationItem:p},computed:{availableNavigationItems(){const t=o.Extension.getSettings("im.v2.component.list.items.recent-compact");const e=t.get("navigationItems",[]);return e.map((t=>t.id))},preparedNavigationItems(){return h.filter((t=>this.availableNavigationItems.includes(t)))},isAirDesignAvailable(){return r.LayoutManager.getInstance().isAirDesignEnabled()}},template:`\n\t\t<div v-if="isAirDesignAvailable" class="bx-im-compact-navigation__container">\n\t\t\t<div class="bx-im-compact-navigation__items">\n\t\t\t\t<CompactNavigationItem\n\t\t\t\t\tv-for="navigationItemId in preparedNavigationItems"\n\t\t\t\t\t:id="navigationItemId"\n\t\t\t\t\t:key="navigationItemId"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-compact-navigation__delimiter"></div>\n\t\t</div>\n\t`};const C={name:"RecentItem",components:{ChatAvatar:d.ChatAvatar},props:{item:{type:Object,required:true}},data(){return{}},computed:{AvatarSize:()=>d.AvatarSize,recentItem(){return this.item},dialog(){return this.$store.getters["chats/get"](this.recentItem.dialogId,true)},isUser(){return this.dialog.type===v.ChatType.user},isChatMuted(){if(this.isUser){return false}const t=this.dialog.muteList.find((t=>t===m.Core.getUserId()));return Boolean(t)},invitation(){return this.recentItem.invitation},totalCounter(){return this.dialog.counter+this.channelCommentsCounter},channelCommentsCounter(){return this.$store.getters["counters/getChannelCommentsCounter"](this.dialog.chatId)},formattedCounter(){return this.totalCounter>99?"99+":this.totalCounter.toString()},wrapClasses(){return{"--pinned":this.recentItem.pinned}},itemClasses(){return{"--no-counter":this.totalCounter===0}},getAvatarType(){return Number.parseInt(this.recentItem.dialogId,10)===m.Core.getUserId()?d.ChatAvatarType.notes:""}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div :data-id="recentItem.dialogId" :class="wrapClasses" class="bx-im-list-recent-compact-item__wrap">\n\t\t\t<div :class="itemClasses" class="bx-im-list-recent-compact-item__container" ref="container">\n\t\t\t\t<div class="bx-im-list-recent-compact-item__avatar_container">\n\t\t\t\t\t<div v-if="invitation.isActive" class="bx-im-list-recent-compact-item__avatar_invitation"></div>\n\t\t\t\t\t<ChatAvatar \n\t\t\t\t\t\tv-else \n\t\t\t\t\t\t:contextDialogId="recentItem.dialogId"\n\t\t\t\t\t\t:avatarDialogId="recentItem.dialogId"\n\t\t\t\t\t\t:size="AvatarSize.M" \n\t\t\t\t\t\t:withSpecialTypes="false"\n\t\t\t\t\t\t:customType="getAvatarType"\n\t\t\t\t\t/>\n\t\t\t\t\t<div v-if="totalCounter > 0" :class="{'--muted': isChatMuted}" class="bx-im-list-recent-compact-item__avatar_counter">\n\t\t\t\t\t\t{{ formattedCounter }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const _={name:"ActiveCall",components:{ChatAvatar:d.ChatAvatar},props:{item:{type:Object,required:true}},emits:["click"],computed:{AvatarSize:()=>d.AvatarSize,activeCall(){return this.item}},methods:{onClick(t){const e=this.$store.getters["recent/get"](this.activeCall.dialogId);if(!e){return}this.$emit("click",{item:e,$event:t})},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div :data-id="activeCall.dialogId" class="bx-im-list-recent-compact-item__wrap">\n\t\t\t<div @click="onClick" class="bx-im-list-recent-compact-item__container">\n\t\t\t\t<div class="bx-im-list-recent-compact-item__avatar_container">\n\t\t\t\t\t<ChatAvatar \n\t\t\t\t\t\t:avatarDialogId="activeCall.dialogId"\n\t\t\t\t\t\t:contextDialogId="activeCall.dialogId"\n\t\t\t\t\t\t:size="AvatarSize.M" \n\t\t\t\t\t\t:withSpecialTypes="false" \n\t\t\t\t\t/>\n\t\t\t\t\t<div class="bx-im-list-recent-compact-active-call__icon" :class="'--' + activeCall.state"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const M={name:"EmptyState",data(){return{}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-list-recent-compact__empty">\n\t\t\t{{ loc('IM_LIST_RECENT_COMPACT_EMPTY') }}\n\t\t</div>\n\t`};const f={name:"RecentList",components:{RecentItem:C,ActiveCall:_,EmptyState:M,CompactNavigation:I},emits:["chatClick"],data(){return{}},computed:{collection(){return this.getRecentService().getCollection()},preparedItems(){const t=this.collection.filter((t=>{let e=true;if(!this.showBirthdays&&t.isBirthdayPlaceholder){e=false}if(t.isFakeElement&&!this.isFakeItemNeeded(t)){e=false}return e}));return[...t].sort(((t,e)=>{const n=this.$store.getters["recent/getSortDate"](t.dialogId);const i=this.$store.getters["recent/getSortDate"](e.dialogId);return i-n}))},activeCalls(){return this.$store.getters["recent/calls/get"]},pinnedItems(){return this.preparedItems.filter((t=>t.pinned===true))},generalItems(){return this.preparedItems.filter((t=>t.pinned===false))},showBirthdays(){return this.$store.getters["application/settings/get"](v.Settings.recent.showBirthday)},showInvited(){return this.$store.getters["application/settings/get"](v.Settings.recent.showInvited)},containerClasses(){return{"--air":r.LayoutManager.getInstance().isAirDesignEnabled()}}},async created(){this.contextMenuManager=new i.RecentMenu;this.managePreloadedList();await this.getRecentService().loadFirstPage()},beforeUnmount(){this.contextMenuManager.destroy()},methods:{onClick(t){l.Messenger.openChat(t.dialogId)},onRightClick(t,n){if(e.Utils.key.isCombination(n,"Alt+Shift")){return}const i={...t,compactMode:true};this.contextMenuManager.openMenu(i,n.currentTarget);n.preventDefault()},managePreloadedList(){const{preloadedList:t}=m.Core.getApplicationData();if(!t){return}this.getRecentService().setPreloadedData(t)},isFakeItemNeeded(t){const e=this.$store.getters["chats/get"](t.dialogId,true);const n=e.type===v.ChatType.user;const i=n&&this.showBirthdays&&this.$store.getters["users/hasBirthday"](t.dialogId);return this.showInvited||i},getRecentService(){if(!this.service){this.service=n.RecentService.getInstance()}return this.service},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-messenger__scope bx-im-list-recent-compact__container" :class="containerClasses">\n\t\t\t<CompactNavigation />\n\t\t\t<div v-if="activeCalls.length > 0" class="bx-im-list-recent-compact__calls_container">\n\t\t\t\t<ActiveCall\n\t\t\t\t\tv-for="activeCall in activeCalls"\n\t\t\t\t\t:key="activeCall.dialogId"\n\t\t\t\t\t:item="activeCall"\n\t\t\t\t\t@click="onClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-list-recent-compact__scroll-container">\n\t\t\t\t<div v-if="pinnedItems.length > 0" class="bx-im-list-recent-compact__pinned_container">\n\t\t\t\t\t<RecentItem\n\t\t\t\t\t\tv-for="item in pinnedItems"\n\t\t\t\t\t\t:key="item.dialogId"\n\t\t\t\t\t\t:item="item"\n\t\t\t\t\t\t@click="onClick(item)"\n\t\t\t\t\t\t@click.right="onRightClick(item, $event)"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-list-recent-compact__general_container">\n\t\t\t\t\t<RecentItem\n\t\t\t\t\t\tv-for="item in generalItems"\n\t\t\t\t\t\t:key="item.dialogId"\n\t\t\t\t\t\t:item="item"\n\t\t\t\t\t\t@click="onClick(item)"\n\t\t\t\t\t\t@click.right="onRightClick(item, $event)"\n\t\t\t\t\t/>\n\t\t\t\t</div>\t\n\t\t\t\t<EmptyState v-if="collection.length === 0" />\n\t\t\t</div>\n\t\t</div>\n\t`};t.RecentList=f})(this.BX.Messenger.v2.Component.List=this.BX.Messenger.v2.Component.List||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.Messenger.v2.Lib,BX.Messenger.v2.Css,BX,BX,BX.Messenger.v2.Lib,BX.UI.IconSet,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Component.Elements);
//# sourceMappingURL=recent-compact.bundle.map.js