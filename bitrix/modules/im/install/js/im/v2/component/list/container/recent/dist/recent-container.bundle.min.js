this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,n,o,a,i,s,r,c,l,h,C,m,p,u,d,_,v,M,E,g){"use strict";const T={components:{MessengerMenu:c.MessengerMenu,MenuItem:c.MenuItem},emits:["showUnread"],data(){return{showPopup:false}},computed:{menuConfig(){return{id:"im-recent-header-menu",width:284,bindElement:this.$refs.icon||{},offsetTop:4,padding:0}},unreadCounter(){return this.$store.getters["counters/getTotalChatCounter"]}},methods:{onIconClick(){this.showPopup=true},onReadAllClick(){(new i.ChatService).readAll();this.showPopup=false},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div\n\t\t\tclass="bx-im-list-container-recent__header-menu_icon"\n\t\t\t:class="{'--active': showPopup}"\n\t\t\t@click="onIconClick"\n\t\t\tref="icon"\n\t\t></div>\n\t\t<MessengerMenu v-if="showPopup" :config="menuConfig" @close="showPopup = false">\n\t\t\t<MenuItem\n\t\t\t\t:title="loc('IM_RECENT_HEADER_MENU_READ_ALL_MSGVER_1')"\n\t\t\t\t@click="onReadAllClick"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="false"\n\t\t\t\t:title="loc('IM_RECENT_HEADER_MENU_SHOW_UNREAD_ONLY')"\n\t\t\t\t:counter="unreadCounter"\n\t\t\t\t:disabled="true"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="false"\n\t\t\t\t:title="loc('IM_RECENT_HEADER_MENU_CHAT_GROUPS_TITLE')"\n\t\t\t\t:subtitle="loc('IM_RECENT_HEADER_MENU_CHAT_GROUPS_SUBTITLE')"\n\t\t\t\t:disabled="true"\n\t\t\t/>\n\t\t</MessengerMenu>\n\t`};const I={emits:["articleOpen"],data(){return{}},methods:{openHelpArticle(){const t="17412872";_.openHelpdeskArticle(t);this.$emit("articleOpen")},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-create-chat-help__container">\n\t\t\t<div @click="openHelpArticle" class="bx-im-create-chat-help__content">\n\t\t\t\t<div class="bx-im-create-chat-help__icon"></div>\n\t\t\t\t<div class="bx-im-create-chat-help__text">{{ loc('IM_RECENT_CREATE_CHAT_WHAT_TO_CHOOSE') }}</div>\t\n\t\t\t</div>\n\t\t</div>\n\t`};const b={name:"NewBadge",methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-create-chat-menu-new-badge__container">\n\t\t\t<div class="bx-im-create-chat-menu-new-badge__content">{{ loc('IM_RECENT_CREATE_COLLAB_NEW_BADGE') }}</div>\n\t\t</div>\n\t`};const f={name:"DescriptionBanner",emits:["close"],computed:{preparedText(){return v.Loc.getMessage("IM_RECENT_CREATE_COLLAB_DESCRIPTION_BANNER",{"[color_highlight]":'<span class="bx-im-create-chat-menu-description-banner__highlight">',"[/color_highlight]":"</span>"})}},template:`\n\t\t<div class="bx-im-create-chat-menu-description-banner__container">\n\t\t\t<div class="bx-im-create-chat-menu-description-banner__content" v-html="preparedText"></div>\n\t\t\t<div class="bx-im-create-chat-menu-description-banner__close-icon" @click.stop="$emit('close')"></div>\n\t\t</div>\n\t`};const A={methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div\n\t\t\tclass="bx-im-create-chat-menu-item__button --copilot"\n\t\t\t:title="loc('IM_RECENT_CREATE_COPILOT_ROLE_SELECTION_TITLE')"\n\t\t>\n\t\t\t<div class="bx-im-create-chat-menu-item__icon-more"></div>\n\t\t</div>\n\t`};const R={name:"InvitePromo",emits:["close"],methods:{onContainerClick(){M.InviteManager.openInviteSlider()},onCloseClick(){void E.PromoManager.getInstance().markAsWatched(g.PromoId.recentCreateChatInviteUsers);this.$emit("close")},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div @click="onContainerClick" class="bx-im-recent-invite-promo__container">\n\t\t\t<div class="bx-im-recent-invite-promo__icon"></div>\n\t\t\t<div class="bx-im-recent-invite-promo__content">\n\t\t\t\t<div class="bx-im-recent-invite-promo__title">\n\t\t\t\t\t{{ loc('IM_RECENT_CREATE_INVITE_TITLE') }}\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-recent-invite-promo__subtitle">\n\t\t\t\t\t{{ loc('IM_RECENT_CREATE_INVITE_SUBTITLE') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div @click.stop="onCloseClick" class="bx-im-recent-invite-promo__close-icon"></div>\n\t\t</div>\n\t`};const y={[g.ChatType.chat]:g.PromoId.createGroupChat,[g.ChatType.videoconf]:g.PromoId.createConference,[g.ChatType.channel]:g.PromoId.createChannel};const L="copilot_assistant";const B={components:{MessengerMenu:c.MessengerMenu,MenuItem:c.MenuItem,CreateChatHelp:I,CreateChatPromo:h.CreateChatPromo,NewBadge:b,DescriptionBanner:f,CopilotRoleSelectionButton:A,CopilotRolesDialog:l.CopilotRolesDialog,InvitePromo:R},data(){return{showMenu:false,chatTypeToCreate:"",showCreateChatPromo:false,showCollabPromo:false,showInvitePromo:false,showCopilotRolesDialog:false,isLoading:false}},computed:{ChatType:()=>g.ChatType,MenuItemIcon:()=>c.MenuItemIcon,menuConfig(){return{id:"im-create-chat-menu",width:275,bindElement:this.$refs.icon||{},offsetTop:4,padding:0}},collabAvailable(){const t=m.PermissionManager.getInstance().canPerformActionByUserType(g.ActionByUserType.createCollab);const e=u.FeatureManager.isFeatureAvailable(u.Feature.collabCreationAvailable);const n=u.FeatureManager.isFeatureAvailable(u.Feature.collabAvailable);return t&&n&&e},canCreateChat(){return m.PermissionManager.getInstance().canPerformActionByUserType(g.ActionByUserType.createChat)},canCreateCopilot(){return m.PermissionManager.getInstance().canPerformActionByUserType(g.ActionByUserType.createCopilot)},isCopilotAvailable(){return u.FeatureManager.isFeatureAvailable(u.Feature.copilotAvailable)},isCopilotActive(){return u.FeatureManager.isFeatureAvailable(u.Feature.copilotActive)},isCopilotChatsInRecentTabEnabled(){return u.FeatureManager.isFeatureAvailable(u.Feature.showCopilotChatsInRecentTab)},isCopilotAvailableAndCreatable(){return this.isCopilotChatsInRecentTabEnabled&&this.isCopilotAvailable&&this.canCreateCopilot},canCreateChannel(){return m.PermissionManager.getInstance().canPerformActionByUserType(g.ActionByUserType.createChannel)},canCreateConference(){return m.PermissionManager.getInstance().canPerformActionByUserType(g.ActionByUserType.createConference)},iconStatusClasses(){return{"--default":!this.isLoading,"--loading":this.isLoading}}},created(){this.showCollabPromo=E.PromoManager.getInstance().needToShow(g.PromoId.createCollabDescription);this.showInvitePromo=E.PromoManager.getInstance().needToShow(g.PromoId.recentCreateChatInviteUsers)},methods:{onChatCreateClick(t){C.Analytics.getInstance().chatCreate.onStartClick(t);this.chatTypeToCreate=t;const e=E.PromoManager.getInstance().needToShow(this.getPromoType());if(e){this.showCreateChatPromo=true;this.showMenu=false;return}this.startChatCreation();this.showMenu=false},showCopilotPromoter(){const t=new s.FeaturePromoter({code:g.SliderCode.copilotDisabled});t.show()},checkCopilotActive(){if(!this.isCopilotActive){this.showCopilotPromoter();return false}return true},async onDefaultCopilotCreateClick(){if(!this.checkCopilotActive()){return}C.Analytics.getInstance().copilot.onCreateDefaultChatInRecent();await this.createCopilotChat(L)},onCopilotRoleSelectClick(){if(!this.checkCopilotActive()){return}C.Analytics.getInstance().copilot.onSelectRoleInRecent();this.showCopilotRolesDialog=true},async onCopilotDialogSelectRole(t){await this.createCopilotChat(t.code)},async createCopilotChat(t){this.showMenu=false;this.isLoading=true;const e=await this.getCopilotService().createChat({roleCode:t}).catch((()=>{this.isLoading=false}));this.isLoading=false;void r.Messenger.openChat(e)},onPromoContinueClick(){E.PromoManager.getInstance().markAsWatched(this.getPromoType());this.startChatCreation();this.showCreateChatPromo=false;this.showMenu=false;this.chatTypeToCreate=""},onCollabDescriptionClose(){void E.PromoManager.getInstance().markAsWatched(g.PromoId.createCollabDescription);this.showCollabPromo=false},startChatCreation(){const{name:t,entityId:e}=this.$store.getters["application/getLayout"];if(t===g.Layout.createChat.name&&e===this.chatTypeToCreate){return}p.CreateChatManager.getInstance().startChatCreation(this.chatTypeToCreate)},getPromoType(){var t;return(t=y[this.chatTypeToCreate])!=null?t:""},loc(t){return this.$Bitrix.Loc.getMessage(t)},getCopilotService(){if(!this.copilotService){this.copilotService=new d.CopilotService}return this.copilotService},handleShowPopup(){C.Analytics.getInstance().chatCreate.onMenuCreateClick();this.showMenu=true}},template:`\n\t\t<div\n\t\t\tclass="bx-im-list-container-recent__create-chat_icon"\n\t\t\t:class="{'--active': showMenu}"\n\t\t\t@click="handleShowPopup"\n\t\t\tref="icon"\n\t\t>\n\t\t\t<div\n\t\t\t\tclass="bx-im-list-container-recent__create-chat_icon_status"\n\t\t\t\t:class="iconStatusClasses"\n\t\t\t></div>\n\t\t</div>\n\t\t<MessengerMenu v-if="showMenu" :config="menuConfig" @close="showMenu = false">\n\t\t\t<MenuItem\n\t\t\t\tv-if="canCreateChat"\n\t\t\t\t:icon="MenuItemIcon.chat"\n\t\t\t\t:title="loc('IM_RECENT_CREATE_GROUP_CHAT_TITLE_V2')"\n\t\t\t\t:subtitle="loc('IM_RECENT_CREATE_GROUP_CHAT_SUBTITLE_MSGVER_1')"\n\t\t\t\t@click="onChatCreateClick(ChatType.chat)"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="isCopilotAvailableAndCreatable"\n\t\t\t\t:icon="MenuItemIcon.copilot"\n\t\t\t\t:title="loc('IM_RECENT_CREATE_COPILOT_TITLE')"\n\t\t\t\t:subtitle="loc('IM_RECENT_CREATE_COPILOT_SUBTITLE_MSGVER_1')"\n\t\t\t\t@click.stop="onDefaultCopilotCreateClick"\n\t\t\t>\n\t\t\t\t<template #after-content>\n\t\t\t\t\t<CopilotRoleSelectionButton @click.stop="onCopilotRoleSelectClick" />\n\t\t\t\t</template>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tv-if="canCreateChannel"\n\t\t\t\t:icon="MenuItemIcon.channel"\n\t\t\t\t:title="loc('IM_RECENT_CREATE_CHANNEL_TITLE_V2')"\n\t\t\t\t:subtitle="loc('IM_RECENT_CREATE_CHANNEL_SUBTITLE_MSGVER_1')"\n\t\t\t\t@click="onChatCreateClick(ChatType.channel)"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="collabAvailable"\n\t\t\t\t:icon="MenuItemIcon.collab"\n\t\t\t\t:title="loc('IM_RECENT_CREATE_COLLAB_TITLE')"\n\t\t\t\t:subtitle="loc('IM_RECENT_CREATE_COLLAB_SUBTITLE_MSGVER_1')"\n\t\t\t\t@click="onChatCreateClick(ChatType.collab)"\n\t\t\t>\n\t\t\t\t<template #after-title>\n\t\t\t\t\t<NewBadge />\n\t\t\t\t</template>\n\t\t\t\t<template #below-content>\n\t\t\t\t\t<DescriptionBanner v-if="showCollabPromo" @close="onCollabDescriptionClose" />\n\t\t\t\t</template>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tv-if="canCreateConference"\n\t\t\t\t:icon="MenuItemIcon.conference"\n\t\t\t\t:title="loc('IM_RECENT_CREATE_CONFERENCE_TITLE')"\n\t\t\t\t:subtitle="loc('IM_RECENT_CREATE_CONFERENCE_SUBTITLE_MSGVER_1')"\n\t\t\t\t:withBottomBorder="showInvitePromo"\n\t\t\t\t@click="onChatCreateClick(ChatType.videoconf)"\n\t\t\t/>\n\t\t\t<InvitePromo v-if="showInvitePromo" @close="showInvitePromo = false" />\n\t\t\t<template #footer>\n\t\t\t\t<CreateChatHelp @articleOpen="showMenu = false" />\n\t\t\t</template>\n\t\t</MessengerMenu>\n\t\t<CreateChatPromo\n\t\t\tv-if="showCreateChatPromo"\n\t\t\t:chatType="chatTypeToCreate"\n\t\t\t@continue="onPromoContinueClick"\n\t\t\t@close="showCreateChatPromo = false"\n\t\t/>\n\t\t<CopilotRolesDialog\n\t\t\tv-if="showCopilotRolesDialog"\n\t\t\t@selectRole="onCopilotDialogSelectRole"\n\t\t\t@close="showCopilotRolesDialog = false"\n\t\t/>\n\t`};const P={name:"RecentListContainer",components:{HeaderMenu:T,CreateChatMenu:B,ChatSearchInput:o.ChatSearchInput,RecentList:n.RecentList,ChatSearch:o.ChatSearch},emits:["selectEntity"],data(){return{searchMode:false,unreadOnlyMode:false,searchQuery:"",isSearchLoading:false}},computed:{canCreateChat(){const t=[g.ActionByUserType.createChat,g.ActionByUserType.createCollab,g.ActionByUserType.createChannel,g.ActionByUserType.createConference];return t.some((t=>m.PermissionManager.getInstance().canPerformActionByUserType(t)))}},created(){a.Logger.warn("List: Recent container created");e.EventEmitter.subscribe(g.EventType.recent.openSearch,this.onOpenSearch);v.Event.bind(document,"mousedown",this.onDocumentClick)},beforeUnmount(){e.EventEmitter.unsubscribe(g.EventType.recent.openSearch,this.onOpenSearch);v.Event.unbind(document,"mousedown",this.onDocumentClick)},methods:{onChatClick(t){this.$emit("selectEntity",{layoutName:g.Layout.chat.name,entityId:t})},onOpenSearch(){this.searchMode=true},onCloseSearch(){this.searchMode=false;this.searchQuery=""},onUpdateSearch(t){this.searchMode=true;this.searchQuery=t},onDocumentClick(t){const n=t.composedPath().includes(this.$refs["recent-container"]);if(this.searchMode&&!n){e.EventEmitter.emit(g.EventType.search.close)}},onLoading(t){this.isSearchLoading=t}},template:`\n\t\t<div class="bx-im-list-container-recent__scope bx-im-list-container-recent__container" ref="recent-container">\n\t\t\t<div class="bx-im-list-container-recent__header_container">\n\t\t\t\t<HeaderMenu @showUnread="unreadOnlyMode = true" />\n\t\t\t\t<div class="bx-im-list-container-recent__search-input_container">\n\t\t\t\t\t<ChatSearchInput \n\t\t\t\t\t\t:searchMode="searchMode" \n\t\t\t\t\t\t:isLoading="searchMode && isSearchLoading"\n\t\t\t\t\t\t@openSearch="onOpenSearch"\n\t\t\t\t\t\t@closeSearch="onCloseSearch"\n\t\t\t\t\t\t@updateSearch="onUpdateSearch"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<CreateChatMenu v-if="canCreateChat" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-list-container-recent__elements_container">\n\t\t\t\t<div class="bx-im-list-container-recent__elements">\n\t\t\t\t\t<ChatSearch \n\t\t\t\t\t\tv-show="searchMode" \n\t\t\t\t\t\t:searchMode="searchMode"\n\t\t\t\t\t\t:query="searchQuery"\n\t\t\t\t\t\t@loading="onLoading"\n\t\t\t\t\t/>\n\t\t\t\t\t<RecentList v-show="!searchMode && !unreadOnlyMode" @chatClick="onChatClick" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};t.RecentListContainer=P})(this.BX.Messenger.v2.Component.List=this.BX.Messenger.v2.Component.List||{},BX.Event,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component,BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.UI,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.List,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Const);
//# sourceMappingURL=recent-container.bundle.map.js