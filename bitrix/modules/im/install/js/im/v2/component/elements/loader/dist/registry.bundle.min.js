this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t){"use strict";const s="xs";const n="BULLET";const r={name:"MessengerLoader",mounted(){this.loader=new t.Loader({target:this.$refs["messenger-loader"],type:n,size:s});this.loader.render();this.loader.show()},beforeUnmount(){this.loader.hide();this.loader=null},template:`\n\t\t<div class="bx-im-elements-loader__container" ref="messenger-loader"></div>\n\t`};const i=Object.freeze({XXS:"XXS",XS:"XS",S:"S",L:"L"});const o=Object.freeze({grey:"grey",blue:"blue",copilot:"copilot"});const l={name:"MessengerSpinner",props:{size:{type:String,default:i.S},color:{type:String,default:o.blue}},computed:{sizeClassName(){return`--size-${this.size.toLowerCase()}`},colorClassName(){return`--color-${this.color.toLowerCase()}`}},template:`\n\t\t<div class="bx-im-elements-spinner__container bx-im-elements-spinner__scope">\n\t\t\t<div class="bx-im-elements-spinner__spinner" :class="[sizeClassName, colorClassName]"></div>\n\t\t</div>\n\t`};const a={name:"LineLoader",props:{width:{type:Number,required:true},height:{type:Number,required:true}},computed:{containerStyles(){return{width:`${this.width}px`,height:`${this.height}px`}}},template:`\n\t\t<div class="bx-im-elements-line-loader__container" :style="containerStyles">\n\t\t\t<div class="bx-im-elements-line-loader__content"></div>\n\t\t</div>\n\t`};e.Loader=r;e.Spinner=l;e.SpinnerSize=i;e.SpinnerColor=o;e.LineLoader=a})(this.BX.Messenger.v2.Component.Elements=this.BX.Messenger.v2.Component.Elements||{},BX.UI);
//# sourceMappingURL=registry.bundle.map.js