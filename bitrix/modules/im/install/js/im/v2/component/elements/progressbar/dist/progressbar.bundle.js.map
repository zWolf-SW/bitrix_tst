{"version":3,"file":"progressbar.bundle.js","sources":["../src/progressbar.js"],"sourcesContent":["import { ProgressBarManager } from 'im.v2.lib.progressbar';\n\nimport './css/progressbar.css';\n\nimport type { ImModelFile } from 'im.v2.model';\n\n// @vue/component\nexport const ProgressBar = {\n\tname: 'ProgressBar',\n\tprops: {\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\twithLabels: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tcancelCallbackDelay: {\n\t\t\ttype: Number,\n\t\t\tdefault: 0,\n\t\t},\n\t},\n\temits: ['cancelClick'],\n\tcomputed: {\n\t\tfile(): ImModelFile\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t},\n\twatch: {\n\t\t'file.status': function() {\n\t\t\tthis.getProgressBarManager().update();\n\t\t},\n\t\t'file.progress': function() {\n\t\t\tthis.getProgressBarManager().update();\n\t\t},\n\t},\n\tmounted()\n\t{\n\t\tthis.initProgressBar();\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.removeProgressBar();\n\t},\n\tmethods: {\n\t\tinitProgressBar()\n\t\t{\n\t\t\tif (this.file.progress === 100)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst customConfig = {\n\t\t\t\thasTitle: false,\n\t\t\t\tcancelCallbackDelay: 0,\n\t\t\t};\n\t\t\tif (!this.withLabels)\n\t\t\t{\n\t\t\t\tcustomConfig.labels = {};\n\t\t\t}\n\n\t\t\tthis.progressBarManager = new ProgressBarManager({\n\t\t\t\tcontainer: this.$refs['progress-bar'],\n\t\t\t\tuploadState: this.file,\n\t\t\t\tcustomConfig,\n\t\t\t});\n\n\t\t\tthis.progressBarManager.subscribe(ProgressBarManager.event.cancel, () => {\n\t\t\t\tthis.$emit('cancelClick', { file: this.file });\n\t\t\t});\n\n\t\t\tthis.progressBarManager.start();\n\t\t},\n\t\tremoveProgressBar()\n\t\t{\n\t\t\tif (!this.getProgressBarManager())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.getProgressBarManager().destroy();\n\t\t},\n\t\tgetProgressBarManager(): ProgressBarManager\n\t\t{\n\t\t\treturn this.progressBarManager;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-progress-bar__container\" ref=\"progress-bar\"></div>\n\t`,\n};\n"],"names":["ProgressBar","name","props","item","type","Object","required","withLabels","Boolean","default","cancelCallbackDelay","Number","emits","computed","file","watch","getProgressBarManager","update","mounted","initProgressBar","beforeUnmount","removeProgressBar","methods","progress","customConfig","hasTitle","labels","progressBarManager","ProgressBarManager","container","$refs","uploadState","subscribe","event","cancel","$emit","start","destroy","template"],"mappings":";;;;;;;;CAMA;AACA,OAAaA,WAAW,GAAG;GAC1BC,IAAI,EAAE,aAAa;GACnBC,KAAK,EAAE;KACNC,IAAI,EAAE;OACLC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;MACV;KACDC,UAAU,EAAE;OACXH,IAAI,EAAEI,OAAO;OACbC,OAAO,EAAE;MACT;KACDC,mBAAmB,EAAE;OACpBN,IAAI,EAAEO,MAAM;OACZF,OAAO,EAAE;;IAEV;GACDG,KAAK,EAAE,CAAC,aAAa,CAAC;GACtBC,QAAQ,EAAE;KACTC,IAAI,GACJ;OACC,OAAO,IAAI,CAACX,IAAI;;IAEjB;GACDY,KAAK,EAAE;KACN,aAAa,EAAE,YAAW;OACzB,IAAI,CAACC,qBAAqB,EAAE,CAACC,MAAM,EAAE;MACrC;KACD,eAAe,EAAE,YAAW;OAC3B,IAAI,CAACD,qBAAqB,EAAE,CAACC,MAAM,EAAE;;IAEtC;GACDC,OAAO,GACP;KACC,IAAI,CAACC,eAAe,EAAE;IACtB;GACDC,aAAa,GACb;KACC,IAAI,CAACC,iBAAiB,EAAE;IACxB;GACDC,OAAO,EAAE;KACRH,eAAe,GACf;OACC,IAAI,IAAI,CAACL,IAAI,CAACS,QAAQ,KAAK,GAAG,EAC9B;SACC;;OAGD,MAAMC,YAAY,GAAG;SACpBC,QAAQ,EAAE,KAAK;SACff,mBAAmB,EAAE;QACrB;OACD,IAAI,CAAC,IAAI,CAACH,UAAU,EACpB;SACCiB,YAAY,CAACE,MAAM,GAAG,EAAE;;OAGzB,IAAI,CAACC,kBAAkB,GAAG,IAAIC,wCAAkB,CAAC;SAChDC,SAAS,EAAE,IAAI,CAACC,KAAK,CAAC,cAAc,CAAC;SACrCC,WAAW,EAAE,IAAI,CAACjB,IAAI;SACtBU;QACA,CAAC;OAEF,IAAI,CAACG,kBAAkB,CAACK,SAAS,CAACJ,wCAAkB,CAACK,KAAK,CAACC,MAAM,EAAE,MAAM;SACxE,IAAI,CAACC,KAAK,CAAC,aAAa,EAAE;WAAErB,IAAI,EAAE,IAAI,CAACA;UAAM,CAAC;QAC9C,CAAC;OAEF,IAAI,CAACa,kBAAkB,CAACS,KAAK,EAAE;MAC/B;KACDf,iBAAiB,GACjB;OACC,IAAI,CAAC,IAAI,CAACL,qBAAqB,EAAE,EACjC;SACC;;OAGD,IAAI,CAACA,qBAAqB,EAAE,CAACqB,OAAO,EAAE;MACtC;KACDrB,qBAAqB,GACrB;OACC,OAAO,IAAI,CAACW,kBAAkB;;IAE/B;GACDW,QAAQ,EAAG;;;CAGZ,CAAC;;;;;;;;"}