this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,a,i,s,n){"use strict";const r=Object.freeze({play:"play",pause:"pause",stop:"stop",none:"none"});const o=Object.freeze({none:"none",metadata:"metadata",auto:"auto"});const l={name:"VideoPlayer",directives:{lazyload:i.lazyload},components:{FadeAnimation:s.FadeAnimation},props:{fileId:{type:[Number,String],default:0},src:{type:String,required:true},previewImageUrl:{type:String,default:""},withAutoplay:{type:Boolean,default:true},elementStyle:{type:Object,default:null},withPlayerControls:{type:Boolean,default:true},viewerAttributes:{type:Object,default:()=>{}}},data(){return{preloadAttribute:o.none,loaded:false,loading:false,state:r.none,timeCurrent:0,timeTotal:0,isMuted:true}},computed:{State:()=>r,isAutoPlayDisabled(){return!this.withAutoplay&&this.state===r.none},showStartButton(){return this.withPlayerControls&&this.isAutoPlayDisabled},showInterface(){return this.withPlayerControls&&!this.showStartButton},formattedTime(){if(!this.loaded&&!this.timeTotal){return"--:--"}let t=0;if(this.state===r.play){t=this.timeTotal-this.timeCurrent}else{t=this.timeTotal}return n.Utils.date.formatMediaDurationTime(t)},controlButtonClass(){if(this.loading){return"--loading"}return this.state===r.play?"--pause":"--play"},source(){return this.$refs.source},hasViewerAttributes(){return Object.keys(this.viewerAttributes).length>0}},created(){if(!this.previewImageUrl){this.preloadAttribute=o.metadata}},mounted(){this.getObserver().observe(this.$refs.body)},beforeUnmount(){this.getObserver().unobserve(this.$refs.body)},methods:{loadFile(){if(this.loaded||this.loading){return}this.preloadAttribute=o.auto;this.loading=true;this.playAfterLoad=true},handleControlClick(){if(this.state===r.play){this.getObserver().unobserve(this.$refs.body);this.pause()}else{this.play()}},handleMuteClick(){if(this.isMuted){this.unmute()}else{this.mute()}},handleContainerClick(){if(this.hasViewerAttributes){this.pause();return}this.handleControlClick()},play(){if(!this.loaded){this.loadFile();return}void this.source.play()},pause(){this.source.pause()},mute(){this.isMuted=true;this.source.muted=true},unmute(){this.isMuted=false;this.source.muted=false},handleError(t){console.error("Im.VideoPlayer: loading failed",this.fileId,t);this.loading=false;this.state=r.none;this.timeTotal=0;this.preloadAttribute=o.none},handleAbort(t){this.handleError(t)},handlePlay(){this.state=r.play},handleLoadedData(){this.timeTotal=this.source.duration},handleDurationChange(){this.handleLoadedData()},handleLoadedMetaData(){this.timeTotal=this.source.duration;this.loaded=true;this.play()},handleCanPlayThrough(){this.loading=false;this.loaded=true;this.play()},handlePause(){if(this.state===r.stop){return}this.state=r.pause},handleVolumeChange(){if(this.source.muted){this.mute()}else{this.unmute()}},handleTimeUpdate(){this.timeCurrent=this.source.currentTime},getObserver(){if(this.observer){return this.observer}this.observer=new IntersectionObserver((t=>{if(this.isAutoPlayDisabled){return}t.forEach((t=>{if(t.isIntersecting){this.play()}else{this.pause()}}))}),{threshold:[0,1]});return this.observer}},template:`\n\t\t<div class="bx-im-video-player__container" @click.stop="handleContainerClick">\n\t\t\t<FadeAnimation :duration="500">\n\t\t\t\t<div v-if="showStartButton" class="bx-im-video-player__start-play_button" @click.stop="handleControlClick">\n\t\t\t\t\t<span class="bx-im-video-player__start-play_icon"></span>\n\t\t\t\t</div>\n\t\t\t</FadeAnimation>\n\t\t\t<FadeAnimation :duration="500">\n\t\t\t\t<div v-if="showInterface" class="bx-im-video-player__control-button_container" @click.stop="handleControlClick">\n\t\t\t\t\t<button class="bx-im-video-player__control-button" :class="controlButtonClass"></button>\n\t\t\t\t</div>\n\t\t\t</FadeAnimation>\n\t\t\t<FadeAnimation :duration="500">\n\t\t\t\t<div \n\t\t\t\t\tv-if="showInterface" \n\t\t\t\t\tclass="bx-im-video-player__info-container" \n\t\t\t\t\t@click.stop="handleMuteClick"\n\t\t\t\t>\n\t\t\t\t\t<span class="bx-im-video-player__time">{{ formattedTime }}</span>\n\t\t\t\t\t<span class="bx-im-video-player__sound" :class="{'--muted': isMuted}"></span>\n\t\t\t\t</div>\n\t\t\t</FadeAnimation>\n\t\t\t<div class="bx-im-video-player__video-container" ref="body">\n\t\t\t\t<video\n\t\t\t\t\tv-bind="viewerAttributes"\n\t\t\t\t\t:src="src"\n\t\t\t\t\tclass="bx-im-video-player__video"\n\t\t\t\t\t:poster="previewImageUrl"\n\t\t\t\t\tref="source"\n\t\t\t\t\t:preload="preloadAttribute"\n\t\t\t\t\tplaysinline\n\t\t\t\t\tloop\n\t\t\t\t\tmuted\n\t\t\t\t\t:style="elementStyle"\n\t\t\t\t\t@abort="handleAbort"\n\t\t\t\t\t@error="handleError"\n\t\t\t\t\t@canplaythrough="handleCanPlayThrough"\n\t\t\t\t\t@durationchange="handleDurationChange"\n\t\t\t\t\t@loadeddata="handleLoadedData"\n\t\t\t\t\t@loadedmetadata="handleLoadedMetaData"\n\t\t\t\t\t@volumechange="handleVolumeChange"\n\t\t\t\t\t@timeupdate="handleTimeUpdate"\n\t\t\t\t\t@play="handlePlay"\n\t\t\t\t\t@pause="handlePause"\n\t\t\t\t></video>\n\t\t\t</div>\n\t\t</div>\n\t`};t.VideoPlayer=l})(this.BX.Messenger.v2.Component.Elements=this.BX.Messenger.v2.Component.Elements||{},BX,BX,BX.Vue3.Directives,BX.Messenger.v2.Component.Animation,BX.Messenger.v2.Lib);
//# sourceMappingURL=videoplayer.bundle.map.js