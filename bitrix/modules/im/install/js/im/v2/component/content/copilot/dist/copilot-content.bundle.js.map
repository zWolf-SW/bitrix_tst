{"version":3,"file":"copilot-content.bundle.js","sources":["../src/components/add-to-chat/add-to-chat-hint.js","../src/components/add-to-chat/add-to-chat-button.js","../src/components/chat-header.js","../src/components/textarea.js","../src/components/content.js","../src/components/empty-state.js","../src/copilot-content.js"],"sourcesContent":["import { PopupOptions } from 'main.popup';\n\nimport { MessengerPopup } from 'im.v2.component.elements.popup';\n\nimport '../../css/add-to-chat-hint.css';\n\nconst POPUP_ID = 'im-add-to-chat-hint-popup';\n\n// @vue/component\nexport const AddToChatHint = {\n\tname: 'AddToChatHint',\n\tcomponents: { MessengerPopup },\n\tprops:\n\t{\n\t\tbindElement: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close', 'hide'],\n\tcomputed:\n\t{\n\t\tPOPUP_ID: () => POPUP_ID,\n\t\tconfig(): PopupOptions\n\t\t{\n\t\t\treturn {\n\t\t\t\tdarkMode: true,\n\t\t\t\tbindElement: this.bindElement,\n\t\t\t\tangle: true,\n\t\t\t\twidth: 346,\n\t\t\t\tcloseIcon: true,\n\t\t\t\toffsetLeft: 8,\n\t\t\t\tclassName: 'bx-im-copilot-add-to-chat-hint__scope',\n\t\t\t\tcontentBorderRadius: 0,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<MessengerPopup\n\t\t\t:config=\"config\"\n\t\t\t:id=\"POPUP_ID\"\n\t\t\t@close=\"$emit('close')\"\n\t\t>\n\t\t\t<div class=\"bx-im-copilot-add-to-chat-hint__title\">\n\t\t\t\t{{ loc('IM_CONTENT_COPILOT_ADD_TO_CHAT_HINT_TITLE') }}\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<div class=\"bx-im-copilot-add-to-chat-hint__description\">\n\t\t\t\t{{ loc('IM_CONTENT_COPILOT_ADD_TO_CHAT_HINT_DESCRIPTION') }}\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<button class=\"bx-im-copilot-add-to-chat-hint__hide\" @click=\"$emit('hide')\">\n\t\t\t\t{{ loc('IM_CONTENT_COPILOT_ADD_TO_CHAT_HINT_HIDE') }}\n\t\t\t</button>\n\t\t</MessengerPopup>\n\t`,\n};\n","import { AddToChat } from 'im.v2.component.entity-selector';\nimport { PromoId } from 'im.v2.const';\nimport { PromoManager } from 'im.v2.lib.promo';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { AddToChatHint } from './add-to-chat-hint';\n\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const AddToChatButton = {\n\tname: 'AddToChatButton',\n\tcomponents: { AddToChat, AddToChatHint },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tshowInviteButton: false,\n\t\t\tshowAddToChatPopup: false,\n\t\t\tshowAddToChatHint: false,\n\t\t};\n\t},\n\tmounted()\n\t{\n\t\tconst needCopilotInRecentTabHint = PromoManager.getInstance().needToShow(PromoId.copilotInRecentTab);\n\t\tconst needAddUsersToChatHint = PromoManager.getInstance().needToShow(PromoId.addUsersToCopilotChat);\n\n\t\tthis.showAddToChatHint = !needCopilotInRecentTabHint && needAddUsersToChatHint;\n\t},\n\tmethods:\n\t{\n\t\topenAddToChatPopup(): void\n\t\t{\n\t\t\tAnalytics.getInstance().userAdd.onChatHeaderClick(this.dialogId);\n\t\t\tthis.showAddToChatPopup = true;\n\t\t},\n\t\tcloseAddToChatPopup(): void\n\t\t{\n\t\t\tthis.showAddToChatPopup = false;\n\t\t},\n\t\tshowHint()\n\t\t{\n\t\t\tthis.showAddToChatHint = true;\n\t\t},\n\t\tcloseHint()\n\t\t{\n\t\t\tthis.showAddToChatHint = false;\n\t\t},\n\t\tonHintHide()\n\t\t{\n\t\t\tvoid PromoManager.getInstance().markAsWatched(PromoId.addUsersToCopilotChat);\n\t\t\tthis.closeHint();\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\t:title=\"loc('IM_CONTENT_CHAT_HEADER_OPEN_INVITE_POPUP_TITLE')\"\n\t\t\t:class=\"{'--active': showAddToChatPopup}\"\n\t\t\tclass=\"bx-im-chat-header__icon --add-people\"\n\t\t\t@click=\"openAddToChatPopup\"\n\t\t\tref=\"add-members\"\n\t\t>\n\t\t\t<slot name=\"invite-hint\" :inviteButtonRef=\"$refs['add-members']\"></slot>\n\t\t</div>\n\t\t<AddToChat\n\t\t\tv-if=\"showAddToChatPopup\"\n\t\t\t:bindElement=\"$refs['add-members'] ?? {}\"\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:popupConfig=\"{ offsetTop: 15, offsetLeft: -300 }\"\n\t\t\t@close=\"closeAddToChatPopup\"\n\t\t/>\n\t\t<AddToChatHint\n\t\t\tv-if=\"showAddToChatHint\"\n\t\t\t:bindElement=\"$refs['add-members'] ?? {}\"\n\t\t\t@close=\"closeHint\"\n\t\t\t@hide=\"onHintHide\"\n\t\t/>\n\t`,\n};\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { ChatService } from 'im.v2.provider.service.chat';\nimport { EditableChatTitle } from 'im.v2.component.elements.chat-title';\nimport { AvatarSize, ChatAvatar } from 'im.v2.component.elements.avatar';\nimport { ChatHeader } from 'im.v2.component.content.elements';\nimport { EventType, SidebarDetailBlock } from 'im.v2.const';\n\nimport { AddToChatButton } from './add-to-chat/add-to-chat-button';\n\nimport '../css/chat-header.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CopilotChatHeader = {\n\tname: 'CopilotChatHeader',\n\tcomponents: { ChatHeader, EditableChatTitle, ChatAvatar, AddToChatButton },\n\tinject: ['currentSidebarPanel'],\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tbuttonPanelReady: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t\tisGroupCopilotChat(): boolean\n\t\t{\n\t\t\treturn this.dialog.userCounter > 2;\n\t\t},\n\t\tcopilotRole(): string\n\t\t{\n\t\t\tconst role = this.$store.getters['copilot/chats/getRole'](this.dialogId);\n\n\t\t\treturn role?.name ?? '';\n\t\t},\n\t\tformattedUserCounter(): string\n\t\t{\n\t\t\treturn Loc.getMessagePlural('IM_CONTENT_COPILOT_HEADER_USER_COUNT', this.dialog.userCounter, {\n\t\t\t\t'#COUNT#': this.dialog.userCounter,\n\t\t\t});\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonNewTitleSubmit(newTitle: string)\n\t\t{\n\t\t\tvoid this.getChatService().renameChat(this.dialogId, newTitle);\n\t\t},\n\t\tonMembersClick()\n\t\t{\n\t\t\tif (!this.isInited)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentSidebarPanel === SidebarDetailBlock.members)\n\t\t\t{\n\t\t\t\tEventEmitter.emit(EventType.sidebar.close, { panel: SidebarDetailBlock.members });\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEventEmitter.emit(EventType.sidebar.open, {\n\t\t\t\tpanel: SidebarDetailBlock.members,\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t});\n\t\t},\n\t\tonButtonPanelReady()\n\t\t{\n\t\t\tthis.buttonPanelReady = true;\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:withSearchButton=\"false\"\n\t\t\tclass=\"bx-im-copilot-header__container\"\n\t\t\t@buttonPanelReady=\"onButtonPanelReady\"\n\t\t>\n\t\t\t<template #left>\n\t\t\t\t<div class=\"bx-im-copilot-header__avatar\">\n\t\t\t\t\t<ChatAvatar\n\t\t\t\t\t\t:avatarDialogId=\"dialogId\"\n\t\t\t\t\t\t:contextDialogId=\"dialogId\"\n\t\t\t\t\t\t:withSpecialTypes=\"false\"\n\t\t\t\t\t\t:size=\"AvatarSize.L\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-copilot-header__info\">\n\t\t\t\t\t<EditableChatTitle :dialogId=\"dialogId\" @newTitleSubmit=\"onNewTitleSubmit\" />\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if=\"isGroupCopilotChat\"\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COPILOT_HEADER_OPEN_MEMBERS_TITLE')\"\n\t\t\t\t\t\t@click=\"onMembersClick\"\n\t\t\t\t\t\tclass=\"bx-im-copilot-header__subtitle --click\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ formattedUserCounter }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else class=\"bx-im-copilot-header__subtitle\">\n\t\t\t\t\t\t{{ copilotRole }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-if=\"buttonPanelReady\" #add-to-chat-button>\n\t\t\t\t<AddToChatButton :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\n\n// @vue/component\nexport const CopilotTextarea = {\n\tname: 'CopilotTextarea',\n\tcomponents: { ChatTextarea },\n\tprops: {\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:placeholder=\"this.loc('IM_CONTENT_COPILOT_TEXTAREA_PLACEHOLDER')\"\n\t\t\t:withCreateMenu=\"false\"\n\t\t\t:withMarket=\"false\"\n\t\t\t:withEdit=\"false\"\n\t\t\t:withUploadMenu=\"false\"\n\t\t\t:withSmileSelector=\"false\"\n\t\t/>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { CopilotChatHeader } from './chat-header';\nimport { CopilotTextarea } from './textarea';\n\n// @vue/component\nexport const CopilotInternalContent = {\n\tname: 'CopilotInternalContent',\n\tcomponents: { BaseChatContent, CopilotChatHeader, CopilotTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<CopilotChatHeader :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<CopilotTextarea :dialogId=\"dialogId\" :key=\"dialogId\" @mounted=\"onTextareaMount\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { Messenger } from 'im.public';\nimport { CopilotRolesDialog } from 'im.v2.component.elements.copilot-roles-dialog';\nimport { ChatButton, ButtonSize, type CustomColorScheme } from 'im.v2.component.elements.button';\nimport { Color } from 'im.v2.const';\nimport { SpecialBackground, ThemeManager } from 'im.v2.lib.theme';\nimport { CopilotService } from 'im.v2.provider.service.copilot';\n\nimport '../css/empty-state.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\nconst BUTTON_BACKGROUND_COLOR = '#fff';\nconst BUTTON_HOVER_COLOR = '#eee';\nconst BUTTON_TEXT_COLOR = 'rgba(82, 92, 105, 0.9)';\n\n// @vue/component\nexport const EmptyState = {\n\tname: 'EmptyState',\n\tcomponents: { ChatButton, CopilotRolesDialog },\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tisCreatingChat: false,\n\t\t\tshowRolesDialog: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getBackgroundStyleById(SpecialBackground.copilot);\n\t\t},\n\t\tpreparedText(): string\n\t\t{\n\t\t\treturn this.loc('IM_CONTENT_COPILOT_EMPTY_STATE_MESSAGE_MSGVER_1', {\n\t\t\t\t'#BR#': '\\n',\n\t\t\t});\n\t\t},\n\t\tbuttonColorScheme(): CustomColorScheme\n\t\t{\n\t\t\treturn {\n\t\t\t\tborderColor: Color.transparent,\n\t\t\t\tbackgroundColor: BUTTON_BACKGROUND_COLOR,\n\t\t\t\ticonColor: BUTTON_TEXT_COLOR,\n\t\t\t\ttextColor: BUTTON_TEXT_COLOR,\n\t\t\t\thoverColor: BUTTON_HOVER_COLOR,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonCreateChatClick()\n\t\t{\n\t\t\tthis.showRolesDialog = true;\n\t\t},\n\t\tasync createChat(role): Promise<void>\n\t\t{\n\t\t\tconst roleCode = role.code;\n\t\t\tthis.isCreatingChat = true;\n\t\t\tthis.showRolesDialog = false;\n\n\t\t\tconst newDialogId = await this.getCopilotService().createChat({ roleCode })\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.isCreatingChat = false;\n\t\t\t\t});\n\n\t\t\tthis.isCreatingChat = false;\n\t\t\tvoid Messenger.openCopilot(newDialogId);\n\t\t},\n\t\tgetCopilotService(): CopilotService\n\t\t{\n\t\t\tif (!this.copilotService)\n\t\t\t{\n\t\t\t\tthis.copilotService = new CopilotService();\n\t\t\t}\n\n\t\t\treturn this.copilotService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[p: string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-copilot-empty-state__container\" :style=\"backgroundStyle\">\n\t\t\t<div class=\"bx-im-content-copilot-empty-state__content\">\n\t\t\t\t<div class=\"bx-im-content-copilot-empty-state__icon\"></div>\n\t\t\t\t<div class=\"bx-im-content-copilot-empty-state__text\">{{ preparedText }}</div>\n\t\t\t\t<ChatButton\n\t\t\t\t\tclass=\"--black-loader\"\n\t\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t\t:customColorScheme=\"buttonColorScheme\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_COPILOT_EMPTY_STATE_ASK_QUESTION')\"\n\t\t\t\t\t:isRounded=\"true\"\n\t\t\t\t\t:isLoading=\"isCreatingChat\"\n\t\t\t\t\t@click=\"onCreateChatClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<CopilotRolesDialog \n\t\t\t\tv-if=\"showRolesDialog\"\n\t\t\t\t@selectRole=\"createChat\"\n\t\t\t\t@close=\"showRolesDialog = false\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { Messenger } from 'im.public';\nimport { ChatService } from 'im.v2.provider.service.chat';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { CopilotInternalContent } from './components/content';\nimport { EmptyState } from './components/empty-state';\n\nimport type { ImModelChat, ImModelLayout } from 'im.v2.model';\nimport type { JsonObject } from 'main.core';\n\nexport { CopilotChatHeader } from './components/chat-header';\nexport { CopilotTextarea } from './components/textarea';\n\n// @vue/component\nexport const CopilotContent = {\n\tname: 'CopilotContent',\n\tcomponents: { EmptyState, CopilotInternalContent },\n\tprops:\n\t{\n\t\tentityId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tcontextMessageId: {\n\t\t\ttype: Number,\n\t\t\tdefault: 0,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.entityId, true);\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tentityId(newValue, oldValue)\n\t\t{\n\t\t\tLogger.warn(`CopilotContent: switching from ${oldValue || 'empty'} to ${newValue}`);\n\t\t\tthis.onChatChange();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tif (!this.entityId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChatChange();\n\t},\n\tmethods:\n\t{\n\t\tasync onChatChange()\n\t\t{\n\t\t\tif (this.entityId === '')\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.inited)\n\t\t\t{\n\t\t\t\tLogger.warn(`CopilotContent: chat ${this.entityId} is already loaded`);\n\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.loading)\n\t\t\t{\n\t\t\t\tLogger.warn(`CopilotContent: chat ${this.entityId} is loading`);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.layout.contextId)\n\t\t\t{\n\t\t\t\tawait this.loadChatWithContext();\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.loadChat();\n\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\t\t},\n\t\tasync loadChatWithContext(): Promise\n\t\t{\n\t\t\tLogger.warn(`CopilotContent: loading chat ${this.entityId} with context - ${this.layout.contextId}`);\n\n\t\t\tawait this.getChatService().loadChatWithContext(this.entityId, this.layout.contextId)\n\t\t\t\t.catch(() => {\n\t\t\t\t\tMessenger.openCopilot();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`CopilotContent: chat ${this.entityId} is loaded with context of ${this.layout.contextId}`);\n\n\t\t\treturn Promise.resolve();\n\t\t},\n\t\tasync loadChat(): Promise\n\t\t{\n\t\t\tLogger.warn(`CopilotContent: loading chat ${this.entityId}`);\n\n\t\t\tawait this.getChatService().loadChatWithMessages(this.entityId)\n\t\t\t\t.catch(() => {\n\t\t\t\t\tMessenger.openCopilot();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`CopilotContent: chat ${this.entityId} is loaded`);\n\n\t\t\treturn Promise.resolve();\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<EmptyState v-if=\"!entityId\" />\n\t\t<CopilotInternalContent v-else :dialogId=\"entityId\" />\n\t`,\n};\n"],"names":["POPUP_ID","AddToChatHint","name","components","MessengerPopup","props","bindElement","type","Object","required","emits","computed","config","darkMode","angle","width","closeIcon","offsetLeft","className","contentBorderRadius","methods","loc","phraseCode","$Bitrix","Loc","getMessage","template","AddToChatButton","AddToChat","dialogId","String","default","data","showInviteButton","showAddToChatPopup","showAddToChatHint","mounted","needCopilotInRecentTabHint","PromoManager","getInstance","needToShow","PromoId","copilotInRecentTab","needAddUsersToChatHint","addUsersToCopilotChat","openAddToChatPopup","Analytics","userAdd","onChatHeaderClick","closeAddToChatPopup","showHint","closeHint","onHintHide","markAsWatched","CopilotChatHeader","ChatHeader","EditableChatTitle","ChatAvatar","inject","buttonPanelReady","AvatarSize","dialog","$store","getters","isInited","inited","isGroupCopilotChat","userCounter","copilotRole","role","formattedUserCounter","getMessagePlural","onNewTitleSubmit","newTitle","getChatService","renameChat","onMembersClick","currentSidebarPanel","SidebarDetailBlock","members","EventEmitter","emit","EventType","sidebar","close","panel","open","onButtonPanelReady","chatService","ChatService","replacements","CopilotTextarea","ChatTextarea","CopilotInternalContent","BaseChatContent","BUTTON_BACKGROUND_COLOR","BUTTON_HOVER_COLOR","BUTTON_TEXT_COLOR","EmptyState","ChatButton","CopilotRolesDialog","isCreatingChat","showRolesDialog","ButtonSize","backgroundStyle","ThemeManager","getBackgroundStyleById","SpecialBackground","copilot","preparedText","buttonColorScheme","borderColor","Color","transparent","backgroundColor","iconColor","textColor","hoverColor","onCreateChatClick","createChat","roleCode","code","newDialogId","getCopilotService","catch","Messenger","openCopilot","copilotService","CopilotService","CopilotContent","entityId","contextMessageId","Number","layout","watch","newValue","oldValue","Logger","warn","onChatChange","created","onOpenChat","loading","contextId","loadChatWithContext","loadChat","Promise","resolve","loadChatWithMessages"],"mappings":"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"}