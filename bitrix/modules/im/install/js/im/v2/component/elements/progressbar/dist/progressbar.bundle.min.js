this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,s){"use strict";const r={name:"ProgressBar",props:{item:{type:Object,required:true},withLabels:{type:Boolean,default:true},cancelCallbackDelay:{type:Number,default:0}},emits:["cancelClick"],computed:{file(){return this.item}},watch:{"file.status":function(){this.getProgressBarManager().update()},"file.progress":function(){this.getProgressBarManager().update()}},mounted(){this.initProgressBar()},beforeUnmount(){this.removeProgressBar()},methods:{initProgressBar(){if(this.file.progress===100){return}const e={hasTitle:false,cancelCallbackDelay:0};if(!this.withLabels){e.labels={}}this.progressBarManager=new s.ProgressBarManager({container:this.$refs["progress-bar"],uploadState:this.file,customConfig:e});this.progressBarManager.subscribe(s.ProgressBarManager.event.cancel,(()=>{this.$emit("cancelClick",{file:this.file})}));this.progressBarManager.start()},removeProgressBar(){if(!this.getProgressBarManager()){return}this.getProgressBarManager().destroy()},getProgressBarManager(){return this.progressBarManager}},template:`\n\t\t<div class="bx-im-progress-bar__container" ref="progress-bar"></div>\n\t`};e.ProgressBar=r})(this.BX.Messenger.v2.Component.Elements=this.BX.Messenger.v2.Component.Elements||{},BX.Messenger.v2.Lib);
//# sourceMappingURL=progressbar.bundle.map.js