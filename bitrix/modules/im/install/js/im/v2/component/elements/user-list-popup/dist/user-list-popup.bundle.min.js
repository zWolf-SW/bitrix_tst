this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,r,i,n,o,a,l,d){"use strict";var u=babelHelpers.classPrivateFieldLooseKey("restClient");var c=babelHelpers.classPrivateFieldLooseKey("userManager");class p{constructor(){Object.defineProperty(this,u,{writable:true,value:void 0});Object.defineProperty(this,c,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,u)[u]=r.Core.getRestClient();babelHelpers.classPrivateFieldLooseBase(this,c)[c]=new n.UserManager}async loadUsers(e){const t=await babelHelpers.classPrivateFieldLooseBase(this,u)[u].callMethod(i.RestMethod.imUserListGet,{ID:e}).catch((e=>{console.error("UserListService: loadUsers error",e.error())}));return babelHelpers.classPrivateFieldLooseBase(this,c)[c].setUsersToModel(Object.values(t.data()))}}const g={name:"UserItem",components:{ChatAvatar:l.ChatAvatar,ChatTitle:d.ChatTitle},props:{userId:{type:Number,required:true},contextDialogId:{type:String,required:true}},computed:{AvatarSize:()=>l.AvatarSize,user(){return this.$store.getters["users/get"](this.userId,true)},userDialogId(){return this.userId.toString()}},methods:{onUserClick(){void o.Messenger.openChat(this.userDialogId)}},template:`\n\t\t<div class="bx-im-user-list-content__user-container" @click="onUserClick">\n\t\t\t<div class="bx-im-user-list-content__avatar-container">\n\t\t\t\t<ChatAvatar\n\t\t\t\t\t:avatarDialogId="userDialogId"\n\t\t\t\t\t:contextDialogId="contextDialogId"\n\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<ChatTitle \n\t\t\t\t:dialogId="userDialogId" \n\t\t\t\t:showItsYou="false" \n\t\t\t\tclass="bx-im-user-list-content__chat-title-container" \n\t\t\t/>\n\t\t</div>\n\t`};const h={components:{UserItem:g,Loader:s.Loader},props:{userIds:{type:Array,required:true},adjustPopupFunction:{type:Function,required:true},loading:{type:Boolean,required:false,default:false},contextDialogId:{type:String,required:true}},data(){return{hasError:false,isLoadingUsers:false}},computed:{isLoading(){return this.loading||this.isLoadingUsers}},watch:{userIds(){this.$nextTick((()=>{this.adjustPopupFunction()}))}},created(){if(this.needUserRequest()){this.requestUserData()}},methods:{getUserListService(){if(!this.userListService){this.userListService=new p}return this.userListService},getUser(e){return this.$store.getters["users/get"](e)},needUserRequest(){return this.userIds.some((e=>!this.getUser(e)))},async requestUserData(){this.isLoadingUsers=true;await this.getUserListService().loadUsers(this.userIds).catch((()=>{this.hasError=true}));this.isLoadingUsers=false},loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-user-list-content__container bx-im-user-list-content__scope">\n\t\t\t<template v-if="!isLoading && !hasError">\n\t\t\t\t<UserItem v-for="userId in userIds" :userId="userId" :contextDialogId="contextDialogId" />\n\t\t\t</template>\n\t\t\t<div v-else-if="isLoading" class="bx-im-user-list-content__loader-container">\n\t\t\t\t<Loader />\n\t\t\t</div>\n\t\t\t<div v-else-if="hasError">\n\t\t\t\t{{ loc('IM_ELEMENTS_CHAT_INFO_POPUP_NO_ACCESS') }}\n\t\t\t</div>\n\t\t</div>\n\t`};const v="im-user-list-popup";const m={name:"UserListPopup",components:{MessengerPopup:t.MessengerPopup,UserListContent:h},props:{showPopup:{type:Boolean,required:true},id:{type:String,required:false,default:v},bindElement:{type:Object,required:true},userIds:{type:Array,required:true},contextDialogId:{type:String,required:false,default:""},withAngle:{type:Boolean,required:false,default:true},loading:{type:Boolean,required:false,default:false},forceTop:{type:Boolean,required:false,default:false},offsetLeft:{type:Number,required:false,default:0}},emits:["close"],computed:{POPUP_ID:()=>v,config(){const e={bindElement:this.bindElement,targetContainer:document.body,offsetTop:4,offsetLeft:this.offsetLeft,padding:0,angle:this.withAngle};if(this.forceTop){e.bindOptions={position:"top"}}return e}},template:`\n\t\t<MessengerPopup\n\t\t\tv-if="showPopup"\n\t\t\tv-slot="{adjustPosition}"\n\t\t\t:config="config"\n\t\t\t@close="$emit('close')"\n\t\t\t:id="id"\n\t\t>\n\t\t\t<UserListContent \n\t\t\t\t:userIds="userIds"\n\t\t\t\t:contextDialogId="contextDialogId"\n\t\t\t\t:loading="loading" \n\t\t\t\t:adjustPopupFunction="adjustPosition"\n\t\t\t/>\n\t\t</MessengerPopup>\n\t`};e.UserListPopup=m})(this.BX.Messenger.v2.Component.Elements=this.BX.Messenger.v2.Component.Elements||{},BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Model,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Elements);
//# sourceMappingURL=user-list-popup.bundle.map.js