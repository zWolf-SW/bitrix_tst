this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,i,n,a,l,o,r,d,g,m,c,h,u,p,f){"use strict";const M=5e6;const v=420;const I=340;const C=200;const y=100;const w=320;const b=180;const B={name:"VideoItem",components:{VideoPlayer:a.VideoPlayer,ProgressBar:h.ProgressBar},props:{id:{type:[String,Number],required:true},message:{type:Object,required:true}},emits:["cancelClick"],computed:{messageItem(){return this.message},file(){return this.$store.getters["files/get"](this.id,true)},autoplay(){return this.file.size<M},canBeOpenedWithViewer(){var e;return this.file.viewerAttrs&&((e=BX.UI)==null?void 0:e.Viewer)},viewerAttributes(){return g.Utils.file.getViewerDataAttributes({viewerAttributes:this.file.viewerAttrs,previewImageSrc:this.file.urlPreview,context:f.FileViewerContext.dialog})},imageSize(){let e=this.file.image.width;let t=this.file.image.height;if(!t||!e){return{width:`${w}px`,height:`${b}px`}}if(this.file.image.width>v||this.file.image.height>I){const s=this.file.image.width/this.file.image.height;if(this.file.image.width>v){e=v;t=Math.round(v/s)}if(t>I){e=Math.round(I*s);t=I}}const s={width:Math.max(e,C),height:Math.max(t,y)};return{width:`${s.width}px`,height:`${s.height}px`,"object-fit":s.width<100||s.height<100?"cover":"contain"}},isLoaded(){return this.file.progress===100},isForward(){return m.Type.isStringFilled(this.messageItem.forward.id)}},methods:{download(){if(this.file.progress!==100||this.canBeOpenedWithViewer){return}window.open(this.file.urlDownload,"_blank")},onCancelClick(e){this.$emit("cancelClick",e)}},template:`\n\t\t<div\n\t\t\tclass="bx-im-video-item__container bx-im-video-item__scope"\n\t\t\t:class="{'--with-forward': isForward}"\n\t\t\t@click="download"\n\t\t>\n\t\t\t<ProgressBar \n\t\t\t\tv-if="!isLoaded" \n\t\t\t\t:item="file" \n\t\t\t\t@cancelClick="onCancelClick"\n\t\t\t/>\n\t\t\t<VideoPlayer\n\t\t\t\t:fileId="file.id"\n\t\t\t\t:src="file.urlDownload"\n\t\t\t\t:previewImageUrl="file.urlPreview"\n\t\t\t\t:elementStyle="imageSize"\n\t\t\t\t:withAutoplay="autoplay"\n\t\t\t\t:withPlayerControls="isLoaded"\n\t\t\t\t:viewerAttributes="viewerAttributes"\n\t\t\t/>\n\t\t</div>\n\t`};const x={name:"MediaContent",components:{VideoItem:B,MessageStatus:u.MessageStatus,MediaGallery:n.MediaGallery},props:{item:{type:Object,required:true}},emits:["cancelClick"],computed:{message(){return this.item},files(){return this.message.files.map((e=>this.$store.getters["files/get"](e)))},filesCount(){return this.files.length},firstFile(){return this.files[0]},firstFileId(){var e;return(e=this.firstFile)==null?void 0:e.id},hasText(){return this.message.text.length>0},hasAttach(){return this.message.attach.length>0},onlyMedia(){return!this.hasText&&!this.hasAttach},isSingleVideo(){return this.filesCount===1&&this.firstFile.type===f.FileType.video}},methods:{onCancel(e){this.$emit("cancelClick",e)}},template:`\n\t\t<div class="bx-im-message-media-content__container">\n\t\t\t<div v-if="isSingleVideo" class="bx-im-message-media-content__single-video">\n\t\t\t\t<VideoItem\n\t\t\t\t\t:id="firstFileId"\n\t\t\t\t\t:message="message"\n\t\t\t\t\t@cancelClick="onCancel"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div v-else class="bx-im-message-media-content__gallery">\n\t\t\t\t<MediaGallery\n\t\t\t\t\t:files="files"\n\t\t\t\t\t:handleLoading="true"\n\t\t\t\t\t@cancelClick="onCancel"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div v-if="onlyMedia" class="bx-im-message-media-content__status-container">\n\t\t\t\t<MessageStatus :item="message" :isOverlay="true" />\n\t\t\t</div>\n\t\t</div>\n\t`};const F=305;const _=488;const T=305;const S={name:"MediaMessage",components:{ReactionList:u.ReactionList,BaseMessage:p.BaseMessage,MessageStatus:u.MessageStatus,DefaultMessageContent:u.DefaultMessageContent,MessageHeader:u.MessageHeader,MessageFooter:u.MessageFooter,MediaContent:x},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:true}},emits:["cancelClick"],computed:{message(){return this.item},fileIds(){return this.message.files},dialog(){return this.$store.getters["chats/get"](this.dialogId)},hasText(){return this.message.text.length>0},hasAttach(){return this.message.attach.length>0},hasReply(){return this.message.replyId!==0},hasError(){return this.message.error},showContextMenu(){return this.onlyImage},showBottomContainer(){return this.hasText||this.hasAttach||this.hasReply},isForward(){return m.Type.isStringFilled(this.message.forward.id)},needBackground(){return this.showBottomContainer||this.isChannelPost||this.isForward},isChannelPost(){return[f.ChatType.channel,f.ChatType.openChannel].includes(this.dialog.type)},imageContainerStyles(){let e=_;if(this.fileIds.length>1){e=F}if(this.hasText){e=T;return{"max-width":`${e}px`,"min-width":`${e}px`}}return{"max-width":`${e}px`}}},methods:{onCancel(e){this.$emit("cancelClick",e)}},template:`\n\t\t<BaseMessage \n\t\t\t:item="item" \n\t\t\t:dialogId="dialogId" \n\t\t\t:withBackground="needBackground"\n\t\t>\n\t\t\t<div \n\t\t\t\tclass="bx-im-message-image__container"\n\t\t\t\t:class="{\n\t\t\t\t\t'--has-text': hasText,\n\t\t\t\t}"\n\t\t\t\t:style="imageContainerStyles"\n\t\t\t>\n\t\t\t\t<MessageHeader :withTitle="false" :item="item" class="bx-im-message-image__header" />\n\t\t\t\t<MediaContent \n\t\t\t\t\t:item="message"\n\t\t\t\t\t@cancelClick="onCancel"\n\t\t\t\t/>\n\t\t\t\t<div v-if="showBottomContainer" class="bx-im-message-image__bottom-container">\n\t\t\t\t\t<DefaultMessageContent\n\t\t\t\t\t\t:item="item"\n\t\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t\t:withText="hasText"\n\t\t\t\t\t\t:withAttach="hasAttach"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<MessageFooter :item="item" :dialogId="dialogId" />\n\t\t\t</div>\n\t\t\t<template #after-message>\n\t\t\t\t<div v-if="!showBottomContainer" class="bx-im-message-image__reaction-list-container">\n\t\t\t\t\t<ReactionList :messageId="message.id" :contextDialogId="dialogId" />\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</BaseMessage>\n\t`};var k=babelHelpers.classPrivateFieldLooseKey("getMessageFile");class A extends o.BaseMenu{constructor(){super();Object.defineProperty(this,k,{value:$});this.id=f.PopupType.messageBaseFileMenu;this.id="bx-im-message-file-context-menu";this.diskService=new l.DiskService}getMenuItems(){return[this.getDownloadFileItem(),this.getSaveToDiskItem()]}getDownloadFileItem(){const e=babelHelpers.classPrivateFieldLooseBase(this,k)[k]();if(!e){return null}return{html:g.Utils.file.createDownloadLink(m.Loc.getMessage("IM_MESSAGE_FILE_MENU_DOWNLOAD_FILE"),e.urlDownload,e.name),onclick:function(){this.menuInstance.close()}.bind(this)}}getSaveToDiskItem(){const e=babelHelpers.classPrivateFieldLooseBase(this,k)[k]();if(!e){return null}return{text:m.Loc.getMessage("IM_MESSAGE_FILE_MENU_SAVE_ON_DISK_MSGVER_1"),onclick:async function(){this.menuInstance.close();await this.diskService.save(this.context.files);r.Notifier.file.onDiskSaveComplete()}.bind(this)}}}function $(){if(!this.context.fileId){return null}return this.store.getters["files/get"](this.context.fileId)}const D={name:"BaseFileItem",components:{ProgressBar:h.ProgressBar},props:{id:{type:[String,Number],required:true},messageId:{type:[String,Number],required:true}},emits:["cancelClick"],computed:{file(){return this.$store.getters["files/get"](this.id,true)},fileShortName(){const e=20;return g.Utils.file.getShortFileName(this.file.name,e)},fileSize(){return g.Utils.file.formatFileSize(this.file.size)},iconClass(){const e=g.Utils.file.getIconTypeByFilename(this.file.name);return`ui-icon-file-${e}`},canBeOpenedWithViewer(){var e;return this.file.viewerAttrs&&((e=BX.UI)==null?void 0:e.Viewer)},viewerAttributes(){return g.Utils.file.getViewerDataAttributes({viewerAttributes:this.file.viewerAttrs,previewImageSrc:this.file.urlPreview,context:f.FileViewerContext.dialog})},isLoaded(){return this.file.progress===100},imageStyles(){return{backgroundImage:`url(${this.file.urlPreview})`}},hasPreview(){return m.Type.isStringFilled(this.file.urlPreview)}},created(){this.contextMenu=new A},beforeUnmount(){this.contextMenu.destroy()},methods:{download(){if(this.file.progress!==100||this.canBeOpenedWithViewer){return}window.open(this.file.urlDownload,"_blank")},loc(e,t={}){return this.$Bitrix.Loc.getMessage(e,t)},openContextMenu(e){this.$emit("openContextMenu",{event:e,fileId:this.id})},onCancelClick(e){this.$emit("cancelClick",e)}},template:`\n\t\t<div class="bx-im-base-file-item__container">\n\t\t\t<div class="bx-im-base-file-item__viewer-container" v-bind="viewerAttributes" @click="download">\n\t\t\t\t<div class="bx-im-base-file-item__icon-container" ref="loader-icon">\n\t\t\t\t\t<ProgressBar \n\t\t\t\t\t\tv-if="!isLoaded" \n\t\t\t\t\t\t:item="file"\n\t\t\t\t\t\t:withLabels="false"\n\t\t\t\t\t\t@cancelClick="onCancelClick"\n\t\t\t\t\t/>\n\t\t\t\t<div v-if="hasPreview" :style="imageStyles" class="bx-im-base-file-item__image"></div>\n\t\t\t\t\t<div v-else :class="iconClass" class="bx-im-base-file-item__type-icon ui-icon"><i></i></div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-base-file-item__content">\n\t\t\t\t\t<span :title="file.name" class="bx-im-base-file-item__title">\n\t\t\t\t\t\t{{ fileShortName }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div class="bx-im-base-file-item__size">{{ fileSize }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tclass="bx-im-base-file-item__download-icon"\n\t\t\t\t:class="{'--not-active': !isLoaded}"\n\t\t\t\t@click="openContextMenu"\n\t\t\t></div>\n\t\t</div>\n\t`};const P={name:"BaseFileMessage",components:{BaseMessage:p.BaseMessage,DefaultMessageContent:u.DefaultMessageContent,BaseFileItem:D,MessageHeader:u.MessageHeader,MessageFooter:u.MessageFooter},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:true}},emits:["cancelClick"],computed:{FileType:()=>f.FileType,message(){return this.item},messageFile(){const e=this.message.files[0];return this.$store.getters["files/get"](e,true)}},created(){this.contextMenu=new A},beforeUnmount(){this.contextMenu.destroy()},methods:{onOpenContextMenu({event:e,fileId:t}){const s={dialogId:this.dialogId,fileId:t,...this.message};this.contextMenu.openMenu(s,e.target)},onCancel(e){this.$emit("cancelClick",e)}},template:`\n\t\t<BaseMessage :item="item" :dialogId="dialogId">\n\t\t\t<div class="bx-im-message-base-file__container">\n\t\t\t\t<MessageHeader :withTitle="withTitle" :item="item" class="bx-im-message-base-file__author-title" />\n\t\t\t\t<BaseFileItem\n\t\t\t\t\t:key="messageFile.id"\n\t\t\t\t\t:id="messageFile.id"\n\t\t\t\t\t:messageId="message.id"\n\t\t\t\t\t@openContextMenu="onOpenContextMenu"\n\t\t\t\t\t@cancelClick="onCancel"\n\t\t\t\t/>\n\t\t\t\t<DefaultMessageContent :item="item" :dialogId="dialogId" />\n\t\t\t</div>\n\t\t\t<MessageFooter :item="item" :dialogId="dialogId" />\n\t\t</BaseMessage>\n\t`};const L={name:"AudioItem",components:{AudioPlayer:c.AudioPlayer,ProgressBar:h.ProgressBar},props:{item:{type:Object,required:true},messageType:{type:String,required:true},messageId:{type:[String,Number],required:true}},emits:["cancelClick"],computed:{file(){return this.item},isLoaded(){return this.file.progress===100}},methods:{onCancelClick(e){this.$emit("onCancel",e)}},template:`\n\t\t<div class="bx-im-media-audio__container">\n\t\t\t<ProgressBar \n\t\t\t\tv-if="!isLoaded" \n\t\t\t\t:item="file" \n\t\t\t\t@cancelClick="onCancelClick"\n\t\t\t/>\n\t\t\t<AudioPlayer\n\t\t\t\t:id="file.id"\n\t\t\t\t:messageId="messageId"\n\t\t\t\t:src="file.urlDownload"\n\t\t\t\t:file="file"\n\t\t\t\t:timelineType="Math.floor(Math.random() * 5)"\n\t\t\t\t:authorId="file.authorId"\n\t\t\t\t:withContextMenu="false"\n\t\t\t\t:withAvatar="false"\n\t\t\t/>\n\t\t</div>\n\t`};const X={name:"AudioMessage",components:{BaseMessage:p.BaseMessage,MessageHeader:u.MessageHeader,MessageFooter:u.MessageFooter,DefaultMessageContent:u.DefaultMessageContent,AudioItem:L},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:false}},emits:["cancelClick"],computed:{FileType:()=>f.FileType,message(){return this.item},messageFile(){const e=this.message.files[0];return this.$store.getters["files/get"](e,true)},canSetReactions(){return m.Type.isNumber(this.message.id)},messageType(){return this.$store.getters["messages/getMessageType"](this.message.id)}},methods:{onCancel(e){this.$emit("cancelClick",e)}},template:`\n\t\t<BaseMessage :item="item" :dialogId="dialogId">\n\t\t\t<div class="bx-im-message-audio__container">\n\t\t\t\t<MessageHeader :withTitle="withTitle" :item="item" class="bx-im-message-audio__header"/>\n\t\t\t\t<AudioItem\n\t\t\t\t\t:key="messageFile.id"\n\t\t\t\t\t:item="messageFile"\n\t\t\t\t\t:messageId="message.id"\n\t\t\t\t\t:messageType="messageType"\n\t\t\t\t\t@cancelClick="onCancel"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-audio__default-message-container">\n\t\t\t\t<DefaultMessageContent :item="item" :dialogId="dialogId" />\n\t\t\t</div>\n\t\t\t<MessageFooter :item="item" :dialogId="dialogId" />\n\t\t</BaseMessage>\n\t`};const U=10;const O={name:"FileCollectionMessage",components:{BaseMessage:p.BaseMessage,DefaultMessageContent:u.DefaultMessageContent,BaseFileItem:D,MessageHeader:u.MessageHeader,MessageFooter:u.MessageFooter},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:true}},emits:["cancelClick"],computed:{FileType:()=>f.FileType,message(){return this.item},messageId(){return this.message.id},fileIds(){return this.message.files.slice(0,U)}},created(){this.contextMenu=new A},beforeUnmount(){this.contextMenu.destroy()},methods:{onOpenContextMenu({event:e,fileId:t}){const s={dialogId:this.dialogId,fileId:t,...this.message};this.contextMenu.openMenu(s,e.target)},onCancel(e){this.$emit("cancelClick",e)}},template:`\n\t\t<BaseMessage :item="item" :dialogId="dialogId">\n\t\t\t<div class="bx-im-message-file-collection__container">\n\t\t\t\t<MessageHeader :withTitle="withTitle" :item="item" class="bx-im-message-file-collection__author-title" />\n\t\t\t\t<div class="bx-im-message-file-collection__items">\n\t\t\t\t\t<BaseFileItem\n\t\t\t\t\t\tv-for="fileId in fileIds"\n\t\t\t\t\t\t:key="fileId"\n\t\t\t\t\t\t:id="fileId"\n\t\t\t\t\t\t:messageId="messageId"\n\t\t\t\t\t\t@openContextMenu="onOpenContextMenu"\n\t\t\t\t\t\t@cancelClick="onCancel"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DefaultMessageContent \n\t\t\t\t\t:item="item" \n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\tclass="bx-im-message-file-collection__default-content" \n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<MessageFooter :item="item" :dialogId="dialogId" />\n\t\t</BaseMessage>\n\t`};const V=Object.freeze({media:"MediaMessage",audio:"AudioMessage",base:"BaseFileMessage",collection:"FileCollectionMessage"});const q={name:"FileMessage",components:{BaseFileMessage:P,MediaMessage:S,AudioMessage:X,UnsupportedMessage:t.UnsupportedMessage,FileCollectionMessage:O},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:true}},computed:{FileType:()=>f.FileType,message(){return this.$store.getters["messages/getById"](this.item.id)},messageFiles(){const e=[];if(this.message.files.length===0){return e}this.message.files.forEach((t=>{const s=this.$store.getters["files/get"](t,true);e.push(s)}));return e},isGallery(){const e=new Set([f.FileType.image,f.FileType.video]);const t=this.messageFiles.every((t=>e.has(t.type)));const s=this.messageFiles.some((e=>e.image!==false));return t&&s},componentName(){if(this.messageFiles.length>1){return this.isGallery?V.media:V.collection}const e=this.messageFiles[0];const t=Boolean(e.image);if(e.type===f.FileType.image&&t){return V.media}if(e.type===f.FileType.audio){return V.audio}const s=e.type===f.FileType.video||g.Utils.file.getFileExtension(e.name)==="mkv";if(s&&t){return V.media}return V.base},isRealMessage(){return this.$store.getters["messages/isRealMessage"](this.message.id)}},methods:{onCancel(e){const t=e.file.id;const i=s.UploadingService.getInstance();const n=i.getUploaderIdByFileId(t);i.removeFileFromUploader({uploaderId:n,filesIds:[t],restartUploading:true});const a=i.getFiles(n);if(m.Type.isArrayFilled(a)){const e=a.map((e=>e.getId()));void this.$store.dispatch("messages/update",{id:this.message.id,fields:{files:e}})}else{const e=this.message.chatId;void this.$store.dispatch("messages/delete",{id:this.message.id});const t=this.$store.getters["chats/getByChatId"](e);const s=this.$store.getters["messages/findLastChatMessageId"](e);if(m.Type.isString(s)||m.Type.isNumber(s)){void this.$store.dispatch("recent/update",{id:t.dialogId,fields:{messageId:s}})}else{void this.$store.dispatch("recent/delete",{id:t.dialogId})}}}},template:`\n\t\t<component \n\t\t\t:is="componentName" \n\t\t\t:item="message" \n\t\t\t:dialogId="dialogId"\n\t\t\t:withTitle="withTitle" \n\t\t\t:withContextMenu="isRealMessage"\n\t\t\t@cancelClick="onCancel"\n\t\t/>\n\t`};e.FileMessage=q;e.MediaContent=x})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX.Messenger.v2.Component.Message,BX.Messenger.v2.Service,BX.UI.Uploader,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Service,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Const);
//# sourceMappingURL=file-message.bundle.map.js