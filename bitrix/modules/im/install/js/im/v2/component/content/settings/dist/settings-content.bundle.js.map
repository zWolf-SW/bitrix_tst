{"version":3,"file":"settings-content.bundle.js","sources":["../src/sections.js","../src/components/section-list.js","../src/components/blocks/background.js","../src/components/blocks/alignment.js","../src/components/sections/functions/init-demo-data.js","../src/components/sections/appearance.js","../src/components/elements/checkbox.js","../src/components/elements/radio.js","../src/components/sections/components/simple-notification-list.js","../src/components/sections/classes/notification-service.js","../src/components/sections/components/expert-mode/components/notification-item.js","../src/components/sections/components/expert-mode/components/notification-block.js","../src/components/sections/components/expert-mode/expert-notification-list.js","../src/components/sections/notification.js","../src/components/sections/hotkey.js","../src/components/sections/recent.js","../src/components/sections/desktop.js","../src/components/section-content.js","../src/settings-content.js"],"sourcesContent":["import { Loc } from 'main.core';\n\nexport const SectionMetaData = {\n\tappearance: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_APPEARANCE'),\n\t\ticon: 'fa-solid fa-brush',\n\t},\n\tnotification: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_NOTIFICATION'),\n\t\ticon: 'fa-solid fa-bell',\n\t},\n\thotkey: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_HOTKEY'),\n\t\ticon: 'fa-solid fa-keyboard',\n\t},\n\tmessage: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_MESSAGE'),\n\t\ticon: 'fa-solid fa-message',\n\t},\n\trecent: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_RECENT'),\n\t\ticon: 'fa-solid fa-list-ul',\n\t},\n\tdesktop: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_DESKTOP'),\n\t\ticon: 'fa-solid fa-desktop',\n\t},\n\thelp: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_HELP'),\n\t\ticon: 'fa-solid fa-question',\n\t},\n\tfeedback: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_FEEDBACK'),\n\t\ticon: 'fa-solid fa-comment',\n\t},\n};\n","import { SettingsSection } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { openHelpdeskArticle } from 'im.v2.lib.helpdesk';\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\n\nimport { SectionMetaData } from '../sections';\n\nimport 'ui.feedback.form';\nimport '../css/section-list.css';\n\nconst AdditionalSections = {\n\thelp: 'help',\n\tfeedback: 'feedback',\n};\n\n// @vue/component\nexport const SectionList = {\n\tname: 'SectionList',\n\tprops:\n\t{\n\t\tactiveSection: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['sectionClick'],\n\tdata(): {}\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tAdditionalSections: () => AdditionalSections,\n\t\tdisabledSections(): Set<string>\n\t\t{\n\t\t\tconst disabledSections = new Set([SettingsSection.message]);\n\t\t\tif (!DesktopApi.isDesktop())\n\t\t\t{\n\t\t\t\tdisabledSections.add(SettingsSection.desktop);\n\t\t\t}\n\n\t\t\tif (FeatureManager.isFeatureAvailable(Feature.isNotificationsStandalone))\n\t\t\t{\n\t\t\t\tdisabledSections.add(SettingsSection.notification);\n\t\t\t}\n\n\t\t\treturn disabledSections;\n\t\t},\n\t\tsections(): string[]\n\t\t{\n\t\t\treturn Object.keys(SettingsSection).filter((section) => {\n\t\t\t\treturn !this.disabledSections.has(section);\n\t\t\t});\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tgetSectionName(section: string): string\n\t\t{\n\t\t\treturn SectionMetaData[section].name;\n\t\t},\n\t\tgetSectionIconClass(section: string): string\n\t\t{\n\t\t\treturn SectionMetaData[section].icon;\n\t\t},\n\t\tonHelpClick()\n\t\t{\n\t\t\tconst ARTICLE_CODE = '17373696';\n\t\t\topenHelpdeskArticle(ARTICLE_CODE);\n\t\t},\n\t\tonFeedbackClick()\n\t\t{\n\t\t\tBX.UI.Feedback.Form.open({\n\t\t\t\tid: 'im-v2-feedback',\n\t\t\t\tforms: [\n\t\t\t\t\t{ zones: ['ru'], id: 550, sec: '50my2x', lang: 'ru' },\n\t\t\t\t\t{ zones: ['en'], id: 560, sec: '621lbr', lang: 'ru' },\n\t\t\t\t],\n\t\t\t\tpresets: {\n\t\t\t\t\tsender_page: 'profile',\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-list__container\">\n\t\t\t<div class=\"bx-im-settings-section-list__title\">\n\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_SECTION_LIST_TITLE') }}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-for=\"section in sections\"\n\t\t\t\t:key=\"section\"\n\t\t\t\tclass=\"bx-im-settings-section-list__item\"\n\t\t\t\t:class=\"{'--active': section === activeSection}\"\n\t\t\t\t@click=\"$emit('sectionClick', section)\"\n\t\t\t>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_icon\">\n\t\t\t\t\t<i :class=\"getSectionIconClass(section)\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_title\">{{ getSectionName(section) }}</div>\n\t\t\t</div>\n\t\t\t<!-- Help -->\n\t\t\t<div\n\t\t\t\tclass=\"bx-im-settings-section-list__item\"\n\t\t\t\t@click=\"onHelpClick\"\n\t\t\t>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_icon\">\n\t\t\t\t\t<i :class=\"getSectionIconClass(AdditionalSections.help)\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_title\">{{ getSectionName(AdditionalSections.help) }}</div>\n\t\t\t</div>\n\t\t\t<!-- Feedback -->\n\t\t\t<div\n\t\t\t\tclass=\"bx-im-settings-section-list__item\"\n\t\t\t\t@click=\"onFeedbackClick\"\n\t\t\t>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_icon\">\n\t\t\t\t\t<i :class=\"getSectionIconClass(AdditionalSections.feedback)\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_title\">{{ getSectionName(AdditionalSections.feedback) }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Settings } from 'im.v2.const';\nimport { SelectableBackground, ThemeManager, type BackgroundStyle } from 'im.v2.lib.theme';\nimport { SettingsService } from 'im.v2.provider.service.settings';\n\nimport './css/background.css';\n\n// @vue/component\nexport const ChatBackground = {\n\tname: 'ChatBackground',\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tcurrentBackgroundId(): string\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.appearance.background).toString();\n\t\t},\n\t\tbackgroundIdList(): string[]\n\t\t{\n\t\t\treturn Object.keys(SelectableBackground);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tgetBackgroundStyleById(backgroundId: string): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getBackgroundStyleById(backgroundId);\n\t\t},\n\t\tonBackgroundClick(backgroundId: string)\n\t\t{\n\t\t\tconst preparedBackgroundId = Number.parseInt(backgroundId, 10);\n\t\t\tconst settingsService = new SettingsService();\n\t\t\tsettingsService.changeSetting(Settings.appearance.background, preparedBackgroundId);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-background__container\">\n\t\t\t<div class=\"bx-im-settings-background__list\">\n\t\t\t\t<div\n\t\t\t\t\tv-for=\"id in backgroundIdList\"\n\t\t\t\t\t:key=\"id\"\n\t\t\t\t\t:style=\"getBackgroundStyleById(id)\"\n\t\t\t\t\tclass=\"bx-im-background-select-popup__item bx-im-settings-background__item\"\n\t\t\t\t\t:class=\"{'--active': id === currentBackgroundId}\"\n\t\t\t\t\t@click=\"onBackgroundClick(id)\"\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Settings, DialogAlignment } from 'im.v2.const';\nimport { SettingsService } from 'im.v2.provider.service.settings';\nimport { ThemeManager, BackgroundStyle } from 'im.v2.lib.theme';\n\nimport './css/alignment.css';\n\ntype AlignmentItem = $Keys<typeof DialogAlignment>;\n\n// @vue/component\nexport const ChatAlignment = {\n\tname: 'ChatAlignment',\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tDialogAlignment: () => DialogAlignment,\n\t\tcurrentOptionId(): AlignmentItem\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.appearance.alignment);\n\t\t},\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getCurrentBackgroundStyle();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonOptionClick(optionId: AlignmentItem)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.appearance.alignment, optionId);\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-alignment__container\">\n\t\t\t<div class=\"bx-im-settings-alignment__list\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bx-im-settings-alignment__item --left\"\n\t\t\t\t\t:class=\"{'--active': currentOptionId === DialogAlignment.left}\"\n\t\t\t\t\t:style=\"backgroundStyle\"\n\t\t\t\t\t@click=\"onOptionClick(DialogAlignment.left)\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"bx-im-settings-alignment__item_content\"></div>\n\t\t\t\t\t<div v-if=\"currentOptionId === DialogAlignment.left\" class=\"bx-im-settings-alignment__item_checkmark\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bx-im-settings-alignment__item --center\"\n\t\t\t\t\t:class=\"{'--active': currentOptionId === DialogAlignment.center}\"\n\t\t\t\t\t:style=\"backgroundStyle\"\n\t\t\t\t\t@click=\"onOptionClick(DialogAlignment.center)\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"bx-im-settings-alignment__item_content\"></div>\n\t\t\t\t\t<div v-if=\"currentOptionId === DialogAlignment.center\" class=\"bx-im-settings-alignment__item_checkmark\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { UserRole } from 'im.v2.const';\nimport { DemoChatBuilder } from 'im.v2.lib.demo';\nimport { Loc } from 'main.core';\n\nexport const initDemoData = (): string => {\n\tconst chatBuilder = new DemoChatBuilder();\n\tchatBuilder.addChat({\n\t\trole: UserRole.guest,\n\t});\n\n\tconst demoUser = chatBuilder.addUser({\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_DEMO_CHAT_USER_NAME'),\n\t});\n\n\tconst firstMessage = chatBuilder.addMessage({\n\t\tauthorId: demoUser.id,\n\t\ttext: Loc.getMessage('IM_CONTENT_SETTINGS_DEMO_CHAT_MESSAGE_1'),\n\t\tviewedByOthers: true,\n\t});\n\n\tchatBuilder.addMessage({\n\t\tauthorId: Core.getUserId(),\n\t\treplyId: firstMessage.id,\n\t\ttext: Loc.getMessage('IM_CONTENT_SETTINGS_DEMO_CHAT_MESSAGE_2'),\n\t\tviewedByOthers: true,\n\t});\n\n\tchatBuilder.addMessage({\n\t\tauthorId: demoUser.id,\n\t\ttext: Loc.getMessage('IM_CONTENT_SETTINGS_DEMO_CHAT_MESSAGE_3'),\n\t\tviewedByOthers: true,\n\t});\n\n\tchatBuilder.save();\n\n\treturn chatBuilder.getChat().dialogId;\n};\n","import { ChatDialog } from 'im.v2.component.dialog.chat';\nimport { Settings } from 'im.v2.const';\nimport { ThemeManager } from 'im.v2.lib.theme';\n\nimport { ChatBackground } from '../blocks/background';\nimport { ChatAlignment } from '../blocks/alignment';\nimport { initDemoData } from './functions/init-demo-data';\n\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\nimport './css/appearance.css';\n\n// @vue/component\nexport const AppearanceSection = {\n\tname: 'AppearanceSection',\n\tcomponents: { ChatDialog, ChatBackground, ChatAlignment },\n\tdata(): { fakeDialogId: string }\n\t{\n\t\treturn {\n\t\t\tfakeDialogId: '',\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tcontainerClasses(): string[]\n\t\t{\n\t\t\tconst alignment = this.$store.getters['application/settings/get'](Settings.appearance.alignment);\n\n\t\t\treturn [`--${alignment}-align`];\n\t\t},\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getCurrentBackgroundStyle();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.fakeDialogId = initDemoData();\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__body\">\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-content-chat__container bx-im-settings-appearance__demo-chat_container\" :class=\"containerClasses\" :style=\"backgroundStyle\">\n\t\t\t\t\t<ChatDialog :dialogId=\"fakeDialogId\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_APPEARANCE_BACKGROUND') }}\n\t\t\t\t</div>\n\t\t\t\t<ChatBackground />\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-settings-section-content__separator\"></div>\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_APPEARANCE_ALIGNMENT') }}\n\t\t\t\t</div>\n\t\t\t\t<ChatAlignment />\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import 'ui.forms';\n\nimport { ChatHint } from 'im.v2.component.elements.hint';\n\nimport './css/checkbox.css';\n\n// @vue/component\nexport const CheckboxOption = {\n\tname: 'CheckboxOption',\n\tcomponents: { ChatHint },\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: '',\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\trequired: false,\n\t\t\tdefault: false,\n\t\t},\n\t\thintText: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\temits: ['change'],\n\tcomputed: {\n\t\thasHint(): boolean\n\t\t{\n\t\t\treturn this.hintText.length > 0;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonInput(event: Event & { target: HTMLInputElement })\n\t\t{\n\t\t\tthis.$emit('change', event.target.checked);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-checkbox__container bx-im-settings-section-content__block_option\" :class=\"{ '--no-text': text === '' }\">\n\t\t\t<label class=\"ui-ctl ui-ctl-checkbox\">\n\t\t\t\t<input type=\"checkbox\" :checked=\"value\" :disabled=\"disabled\" @input=\"onInput\" class=\"ui-ctl-element\">\n\t\t\t\t<span v-if=\"text\" class=\"ui-ctl-label-text\">{{ text }}</span>\n\t\t\t\t<ChatHint v-if=\"hasHint\" :text=\"hintText\" />\n\t\t\t</label>\n\t\t</div>\n\t`,\n};\n","import { Text } from 'main.core';\n\nimport './css/radio.css';\n\nexport type RadioOptionItem = {\n\tvalue: OptionValue,\n\ttext: string,\n\tselected: boolean,\n\tsubtext?: string,\n\thtml?: boolean,\n};\n\ntype OptionValue = string | number | boolean;\n\n// @vue/component\nexport const RadioOption = {\n\tname: 'RadioOption',\n\tprops:\n\t{\n\t\titems: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['change'],\n\tdata(): { groupName: string }\n\t{\n\t\treturn {\n\t\t\tgroupName: Text.getRandom(),\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\toptions(): RadioOptionItem[]\n\t\t{\n\t\t\treturn this.items;\n\t\t},\n\t\tselectedValue(): OptionValue\n\t\t{\n\t\t\treturn this.options.find((option) => {\n\t\t\t\treturn option.selected === true;\n\t\t\t});\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonInput(option: RadioOptionItem): void\n\t\t{\n\t\t\tthis.$emit('change', option.value);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-radio__container bx-im-settings-section-content__block_option\">\n\t\t\t<label v-for=\"option in options\" class=\"ui-ctl ui-ctl-radio\">\n\t\t\t\t<input type=\"radio\" class=\"ui-ctl-element\" :name=\"groupName\" :checked=\"option.selected\" @input=\"onInput(option)\">\n\t\t\t\t<div class=\"bx-im-settings-radio__label ui-ctl-label-text\">\n\t\t\t\t\t<!-- Text -->\n\t\t\t\t\t<div v-if=\"option.html\" class=\"bx-im-settings-radio__label_title\" v-html=\"option.text\"></div>\n\t\t\t\t\t<div v-else class=\"bx-im-settings-radio__label_title\">{{ option.text }}</div>\n\t\t\t\t\t<!-- Subtext -->\n\t\t\t\t\t<template v-if=\"option.subtext\">\n\t\t\t\t\t\t<div v-if=\"option.html\" class=\"bx-im-settings-radio__label_subtitle\" v-html=\"option.subtext\"></div>\n\t\t\t\t\t\t<div v-else class=\"bx-im-settings-radio__label_subtitle\">{{ option.subtext }}</div>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t</label>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { SettingsService } from 'im.v2.provider.service.settings';\nimport { Settings } from 'im.v2.const';\n\nimport { CheckboxOption } from '../../elements/checkbox';\n\nimport type { JsonObject } from 'main.core';\n\ntype CurrentUser = { email: string };\n\n// @vue/component\nexport const SimpleNotificationList = {\n\tname: 'SimpleNotificationList',\n\tcomponents: { CheckboxOption },\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tenableWeb(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.notification.enableWeb);\n\t\t},\n\t\tenableMail(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.notification.enableMail);\n\t\t},\n\t\tenablePush(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.notification.enablePush);\n\t\t},\n\t\tenableMailText(): string\n\t\t{\n\t\t\treturn this.loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_ENABLE_MAIL', {\n\t\t\t\t'#MAIL#': this.userEmail,\n\t\t\t});\n\t\t},\n\t\tuserEmail(): string\n\t\t{\n\t\t\tconst { currentUser: { email } }: { currentUser: CurrentUser } = Core.getApplicationData();\n\n\t\t\treturn email;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonEnableWebChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.notification.enableWeb, newValue);\n\t\t},\n\t\tonEnableMailChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.notification.enableMail, newValue);\n\t\t},\n\t\tonEnablePushChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.notification.enablePush, newValue);\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__body\">\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_BLOCK_SIMPLE_MODE_TITLE') }}\n\t\t\t\t</div>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"enableWeb\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_ENABLE_WEB')\"\n\t\t\t\t\t@change=\"onEnableWebChange\"\n\t\t\t\t/>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"enableMail\"\n\t\t\t\t\t:text=\"enableMailText\"\n\t\t\t\t\t@change=\"onEnableMailChange\"\n\t\t\t\t/>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"enablePush\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_ENABLE_PUSH_V1')\"\n\t\t\t\t\t@change=\"onEnablePushChange\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { NotificationSettingsMode, RestMethod, Settings } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\n\nexport const NotificationService = {\n\tasync switchScheme(newScheme: $Keys<typeof NotificationSettingsMode>): void\n\t{\n\t\tvoid Core.getStore().dispatch('application/settings/set', {\n\t\t\t[Settings.notification.mode]: newScheme,\n\t\t});\n\n\t\tconst newNotificationsSettings = await runAction(RestMethod.imV2SettingsNotifySwitchScheme, {\n\t\t\tdata: {\n\t\t\t\tuserId: Core.getUserId(),\n\t\t\t\tscheme: newScheme,\n\t\t\t},\n\t\t}).catch(([error]) => {\n\t\t\tconsole.error('NotificationService: switchScheme error', error);\n\t\t});\n\n\t\tvoid Core.getStore().dispatch('application/settings/set', {\n\t\t\tnotifications: newNotificationsSettings,\n\t\t});\n\t},\n\n\tchangeExpertOption(payload: { moduleId: string, optionName: string, type: string, value: boolean }): void\n\t{\n\t\tconst { moduleId, optionName, type, value } = payload;\n\t\tvoid Core.getStore().dispatch('application/settings/setNotificationOption', {\n\t\t\tmoduleId,\n\t\t\toptionName,\n\t\t\ttype,\n\t\t\tvalue,\n\t\t});\n\n\t\trunAction(RestMethod.imV2SettingsNotifyUpdate, {\n\t\t\tdata: {\n\t\t\t\tuserId: Core.getUserId(),\n\t\t\t\tmoduleId,\n\t\t\t\tname: optionName,\n\t\t\t\ttype,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t}).catch(([error]) => {\n\t\t\tconsole.error('NotificationService: changeExpertOption error', error);\n\t\t});\n\t},\n};\n","import { NotificationSettingsType, type NotificationSettingsItem } from 'im.v2.const';\n\nimport { CheckboxOption } from '../../../../elements/checkbox';\nimport { NotificationService } from '../../../classes/notification-service';\n\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const NotificationItem = {\n\tname: 'NotificationItem',\n\tcomponents: { CheckboxOption },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tblockId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t}\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tNotificationSettingsType: () => NotificationSettingsType,\n\t\tnotification(): NotificationSettingsItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tdisabledForWeb(): boolean\n\t\t{\n\t\t\treturn this.notification.disabled.includes(NotificationSettingsType.web);\n\t\t},\n\t\tdisabledForMail(): boolean\n\t\t{\n\t\t\treturn this.notification.disabled.includes(NotificationSettingsType.mail);\n\t\t},\n\t\tdisabledForPush(): boolean\n\t\t{\n\t\t\treturn this.notification.disabled.includes(NotificationSettingsType.push);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonItemChange(newValue: boolean, type: $Values<typeof NotificationSettingsType>)\n\t\t{\n\t\t\tNotificationService.changeExpertOption({\n\t\t\t\tmoduleId: this.blockId,\n\t\t\t\toptionName: this.notification.id,\n\t\t\t\ttype,\n\t\t\t\tvalue: newValue,\n\t\t\t});\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-expert-notifications-item__container\">\n\t\t\t<div class=\"bx-im-settings-expert-notifications-item__title\">\n\t\t\t\t{{ notification.label }}\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-settings-expert-notifications-item__type --web\">\n\t\t\t\t<CheckboxOption :value=\"notification.site\" :disabled=\"disabledForWeb\" @change=\"onItemChange($event, NotificationSettingsType.web)\" />\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-settings-expert-notifications-item__type --mail\">\n\t\t\t\t<CheckboxOption :value=\"notification.mail\" :disabled=\"disabledForMail\" @change=\"onItemChange($event, NotificationSettingsType.mail)\" />\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-settings-expert-notifications-item__type --push\">\n\t\t\t\t<CheckboxOption :value=\"notification.push\" :disabled=\"disabledForPush\" @change=\"onItemChange($event, NotificationSettingsType.push)\" />\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import type { JsonObject } from 'main.core';\n\nimport { NotificationSettingsBlock } from 'im.v2.const';\n\nimport { NotificationItem } from './notification-item';\n\n// @vue/component\nexport const NotificationBlock = {\n\tname: 'NotificationBlock',\n\tcomponents: { NotificationItem },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tblock(): NotificationSettingsBlock\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__body\">\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ block.label }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-settings-expert-notifications__header\">\n\t\t\t\t\t<div class=\"bx-im-settings-expert-notifications__header_title\"></div>\n\t\t\t\t\t<div class=\"bx-im-settings-expert-notifications__header_type\">\n\t\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_EXPERT_NOTIFICATIONS_TYPE_WEB') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"bx-im-settings-expert-notifications__header_type\">\n\t\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_EXPERT_NOTIFICATIONS_TYPE_MAIL') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"bx-im-settings-expert-notifications__header_type\">\n\t\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_EXPERT_NOTIFICATIONS_TYPE_PUSH') }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<NotificationItem v-for=\"item in block.items\" :item=\"item\" :blockId=\"block.id\" :key=\"item.id\" />\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { NotificationSettingsBlock } from 'im.v2.const';\n\nimport { NotificationBlock } from './components/notification-block';\n\nimport './css/expert-notification-list.css';\n\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const ExpertNotificationList = {\n\tname: 'ExpertNotificationList',\n\tcomponents: { NotificationBlock },\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tnotificationSettings(): NotificationSettingsBlock[]\n\t\t{\n\t\t\tconst settings = this.$store.getters['application/settings/get']('notifications');\n\n\t\t\treturn Object.values(settings);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<NotificationBlock\n\t\t\tv-for=\"block in notificationSettings\"\n\t\t\t:item=\"block\"\n\t\t\t:key=\"block.id\"\n\t\t\tclass=\"bx-im-settings-expert-notifications__container\"\n\t\t/>\n\t`,\n};\n","import { Settings, NotificationSettingsMode, UserStatus } from 'im.v2.const';\nimport { SettingsService } from 'im.v2.provider.service.settings';\nimport { showNotificationsModeSwitchConfirm } from 'im.v2.lib.confirm';\n\nimport { CheckboxOption } from '../elements/checkbox';\nimport { RadioOption, type RadioOptionItem } from '../elements/radio';\nimport { SimpleNotificationList } from './components/simple-notification-list';\nimport { ExpertNotificationList } from './components/expert-mode/expert-notification-list';\nimport { NotificationService } from './classes/notification-service';\n\ntype NotificationMode = $Keys<typeof NotificationSettingsMode>;\n\n// @vue/component\nexport const NotificationSection = {\n\tname: 'NotificationSection',\n\tcomponents: { CheckboxOption, RadioOption, SimpleNotificationList, ExpertNotificationList },\n\tcomputed:\n\t{\n\t\tenableSound(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.notification.enableSound);\n\t\t},\n\t\tenableAutoRead(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.notification.enableAutoRead);\n\t\t},\n\t\tisDndEnabled(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.user.status) === UserStatus.dnd;\n\t\t},\n\t\tnotificationMode(): NotificationMode\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.notification.mode);\n\t\t},\n\t\tnotificationModeOptions(): RadioOptionItem[]\n\t\t{\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tvalue: NotificationSettingsMode.simple,\n\t\t\t\t\ttext: this.loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_SIMPLE_MODE'),\n\t\t\t\t\tselected: this.notificationMode === NotificationSettingsMode.simple,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: NotificationSettingsMode.expert,\n\t\t\t\t\ttext: this.loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_EXPERT_MODE'),\n\t\t\t\t\tselected: this.notificationMode === NotificationSettingsMode.expert,\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tnotificationListComponent(): SimpleNotificationList | ExpertNotificationList\n\t\t{\n\t\t\treturn this.notificationMode === 'simple' ? SimpleNotificationList : ExpertNotificationList;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonEnableSoundChange(newValue: boolean): void\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.notification.enableSound, newValue);\n\t\t},\n\t\tonEnableAutoReadChange(newValue: boolean): void\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.notification.enableAutoRead, newValue);\n\t\t},\n\t\tonEnableDnDChange(newValue: boolean): void\n\t\t{\n\t\t\tconst preparedValue = newValue ? UserStatus.dnd : UserStatus.online;\n\t\t\tthis.getSettingsService().changeStatus(preparedValue);\n\t\t},\n\t\tasync onNotificationModeChange(newValue: NotificationMode): void\n\t\t{\n\t\t\tconst isChangingToSimple = newValue === NotificationSettingsMode.simple;\n\t\t\tif (isChangingToSimple)\n\t\t\t{\n\t\t\t\tthis.changeLocalNotificationMode(NotificationSettingsMode.simple);\n\t\t\t\tconst confirmResult = await showNotificationsModeSwitchConfirm();\n\t\t\t\tif (!confirmResult)\n\t\t\t\t{\n\t\t\t\t\tthis.changeLocalNotificationMode(NotificationSettingsMode.expert);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvoid NotificationService.switchScheme(newValue);\n\t\t},\n\t\tasync changeLocalNotificationMode(newValue: NotificationMode): void\n\t\t{\n\t\t\tthis.$store.dispatch('application/settings/set', {\n\t\t\t\t[Settings.notification.mode]: newValue,\n\t\t\t});\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__body\">\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_BLOCK_FOCUS') }}\n\t\t\t\t</div>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"enableSound\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_ENABLE_SOUND')\"\n\t\t\t\t\t@change=\"onEnableSoundChange\"\n\t\t\t\t/>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"enableAutoRead\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_AUTO_READ')\"\n\t\t\t\t\t@change=\"onEnableAutoReadChange\"\n\t\t\t\t/>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"isDndEnabled\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_DND')\"\n\t\t\t\t\t:hintText=\"loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_DND_HINT')\"\n\t\t\t\t\t@change=\"onEnableDnDChange\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"bx-im-settings-section-content__body\">\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_BLOCK_MODE') }}\n\t\t\t\t</div>\n\t\t\t\t<RadioOption :items=\"notificationModeOptions\" @change=\"onNotificationModeChange\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<component :is=\"notificationListComponent\" />\n\t`,\n};\n","import { Settings } from 'im.v2.const';\nimport { SettingsService } from 'im.v2.provider.service.settings';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { RadioOption, type RadioOptionItem } from '../elements/radio';\n\n// @vue/component\nexport const HotkeySection = {\n\tname: 'HotkeySection',\n\tcomponents: { RadioOption },\n\tdata(): {}\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tsendByEnter(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.hotkey.sendByEnter);\n\t\t},\n\t\tsendCombinationItems(): RadioOptionItem[]\n\t\t{\n\t\t\tconst ctrlKey = Utils.platform.isMac() ? '&#8984;' : 'Ctrl';\n\t\t\tconst enterSubtext = this.loc('IM_CONTENT_SETTINGS_OPTION_HOTKEY_NEW_LINE', {\n\t\t\t\t'#HOTKEY#': 'Shift + Enter',\n\t\t\t});\n\t\t\tconst ctrlEnterSubtext = this.loc('IM_CONTENT_SETTINGS_OPTION_HOTKEY_NEW_LINE', {\n\t\t\t\t'#HOTKEY#': 'Enter',\n\t\t\t});\n\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tvalue: true,\n\t\t\t\t\ttext: 'Enter',\n\t\t\t\t\tsubtext: enterSubtext,\n\t\t\t\t\tselected: this.sendByEnter === true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: false,\n\t\t\t\t\ttext: `${ctrlKey} + Enter`,\n\t\t\t\t\tsubtext: ctrlEnterSubtext,\n\t\t\t\t\thtml: true,\n\t\t\t\t\tselected: this.sendByEnter === false,\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tisMac(): boolean\n\t\t{\n\t\t\treturn Utils.platform.isMac();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonSendByEnterChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.hotkey.sendByEnter, newValue);\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__body\">\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_HOTKEY_SEND_COMBINATION') }}\n\t\t\t\t</div>\n\t\t\t\t<RadioOption\n\t\t\t\t\t:items=\"sendCombinationItems\"\n\t\t\t\t\t@change=\"onSendByEnterChange\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Settings } from 'im.v2.const';\nimport { SettingsService } from 'im.v2.provider.service.settings';\n\nimport { CheckboxOption } from '../elements/checkbox';\n\n// @vue/component\nexport const RecentSection = {\n\tname: 'RecentSection',\n\tcomponents: { CheckboxOption },\n\tcomputed:\n\t{\n\t\tshowBirthday(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.recent.showBirthday);\n\t\t},\n\t\tshowInvited(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.recent.showInvited);\n\t\t},\n\t\tshowLastMessage(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.recent.showLastMessage);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonShowBirthdayChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.recent.showBirthday, newValue);\n\t\t},\n\t\tonShowInvitedChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.recent.showInvited, newValue);\n\t\t},\n\t\tonShowLastMessageChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.recent.showLastMessage, newValue);\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__body\">\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"showBirthday\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_RECENT_SHOW_BIRTHDAY')\"\n\t\t\t\t\t@change=\"onShowBirthdayChange\"\n\t\t\t\t/>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"showInvited\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_RECENT_SHOW_INVITED')\"\n\t\t\t\t\t@change=\"onShowInvitedChange\"\n\t\t\t\t/>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"showLastMessage\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_RECENT_SHOW_TEXT')\"\n\t\t\t\t\t@change=\"onShowLastMessageChange\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { DesktopApi, DesktopFeature, DesktopSettingsKey } from 'im.v2.lib.desktop-api';\nimport { showDesktopConfirm, showDesktopRestartConfirm } from 'im.v2.lib.confirm';\nimport { Settings } from 'im.v2.const';\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { SettingsService } from 'im.v2.provider.service.settings';\n\nimport { CheckboxOption } from '../elements/checkbox';\n\n// @vue/component\nexport const DesktopSection = {\n\tname: 'DesktopSection',\n\tcomponents: { CheckboxOption },\n\tdata(): {}\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\ttwoWindowMode(): boolean\n\t\t{\n\t\t\treturn DesktopApi.isTwoWindowMode();\n\t\t},\n\t\tautoStartDesktop(): boolean\n\t\t{\n\t\t\treturn DesktopApi.getAutostartStatus();\n\t\t},\n\t\topenPortalLinkInDesktop(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.desktop.enableRedirect);\n\t\t},\n\t\topenPortalLinkInDesktopPhrase(): string\n\t\t{\n\t\t\tif (!DesktopApi.isFeatureSupported(DesktopFeature.openPage.id))\n\t\t\t{\n\t\t\t\treturn this.loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_ALWAYS_OPEN_CHAT');\n\t\t\t}\n\n\t\t\treturn this.loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_ALWAYS_OPEN_PORTAL_LINK_V2');\n\t\t},\n\t\topenLinksInSlider(): boolean\n\t\t{\n\t\t\tconst sliderBindingStatus = DesktopApi.getCustomSetting(DesktopSettingsKey.sliderBindingsStatus, '1');\n\n\t\t\treturn sliderBindingStatus === '1';\n\t\t},\n\t\tsendTelemetry(): boolean\n\t\t{\n\t\t\treturn DesktopApi.getTelemetryStatus();\n\t\t},\n\t\tisAirDesignEnabled(): boolean\n\t\t{\n\t\t\treturn LayoutManager.getInstance().isAirDesignEnabled();\n\t\t},\n\t\tisRedirectAvailable(): boolean\n\t\t{\n\t\t\treturn FeatureManager.isFeatureAvailable(Feature.isDesktopRedirectAvailable);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tasync onTwoWindowModeChange(newValue: boolean)\n\t\t{\n\t\t\tDesktopApi.setTwoWindowMode(newValue);\n\t\t\tif (!DesktopApi.isFeatureSupported(DesktopFeature.restart.id))\n\t\t\t{\n\t\t\t\tvoid showDesktopConfirm();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userChoice = await showDesktopRestartConfirm();\n\t\t\tif (userChoice === true)\n\t\t\t{\n\t\t\t\tDesktopApi.restart();\n\t\t\t}\n\t\t},\n\t\tonAutoStartDesktopChange(newValue: boolean)\n\t\t{\n\t\t\tDesktopApi.setAutostartStatus(newValue);\n\t\t},\n\t\tonOpenPortalLinkInDesktopChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.desktop.enableRedirect, newValue);\n\t\t},\n\t\tonOpenLinksInSliderChange(newValue: boolean)\n\t\t{\n\t\t\tthis.setSliderBindingStatus(newValue);\n\t\t\tDesktopApi.setCustomSetting(DesktopSettingsKey.sliderBindingsStatus, newValue ? '1' : '0');\n\t\t},\n\t\tonSendTelemetryChange(newValue: boolean)\n\t\t{\n\t\t\tDesktopApi.setTelemetryStatus(newValue);\n\t\t},\n\t\tsetSliderBindingStatus(flag: boolean)\n\t\t{\n\t\t\tif (flag === true)\n\t\t\t{\n\t\t\t\tBX.SidePanel.Instance.enableAnchorBinding();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tBX.SidePanel.Instance.disableAnchorBinding();\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__body\">\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_BLOCK_STARTUP') }}\n\t\t\t\t</div>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\tv-if=\"!isAirDesignEnabled\"\n\t\t\t\t\t:value=\"twoWindowMode\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_TWO_WINDOW_MODE_V2')\"\n\t\t\t\t\t@change=\"onTwoWindowModeChange\"\n\t\t\t\t/>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"autoStartDesktop\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_AUTO_START')\"\n\t\t\t\t\t@change=\"onAutoStartDesktopChange\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_BLOCK_LINKS') }}\n\t\t\t\t</div>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\tv-if=\"isRedirectAvailable\"\n\t\t\t\t\t:value=\"openPortalLinkInDesktop\"\n\t\t\t\t\t:text=\"openPortalLinkInDesktopPhrase\"\n\t\t\t\t\t@change=\"onOpenPortalLinkInDesktopChange\"\n\t\t\t\t/>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"openLinksInSlider\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_OPEN_LINKS_IN_SLIDER_V2')\"\n\t\t\t\t\t@change=\"onOpenLinksInSliderChange\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_BLOCK_ADDITIONAL') }}\n\t\t\t\t</div>\n\t\t\t\t<CheckboxOption\n\t\t\t\t\t:value=\"sendTelemetry\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_SEND_TELEMETRY')\"\n\t\t\t\t\t@change=\"onSendTelemetryChange\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { AppearanceSection } from './sections/appearance';\nimport { NotificationSection } from './sections/notification';\nimport { HotkeySection } from './sections/hotkey';\nimport { RecentSection } from './sections/recent';\nimport { DesktopSection } from './sections/desktop';\n\nimport { SectionMetaData } from '../sections';\n\nimport '../css/section-content.css';\n\n// @vue/component\nexport const SectionContent = {\n\tname: 'SectionContent',\n\tcomponents: { AppearanceSection, NotificationSection, HotkeySection, RecentSection, DesktopSection },\n\tprops:\n\t{\n\t\tactiveSection: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): Object<string, any>\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tsectionComponentName(): string\n\t\t{\n\t\t\tconst uppercaseSection = this.activeSection[0].toUpperCase() + this.activeSection.slice(1);\n\t\t\tconst COMPONENT_POSTFIX = 'Section';\n\n\t\t\treturn `${uppercaseSection}${COMPONENT_POSTFIX}`;\n\t\t},\n\t\tsectionName(): string\n\t\t{\n\t\t\treturn SectionMetaData[this.activeSection].name;\n\t\t},\n\t\tsectionIconClass(): string\n\t\t{\n\t\t\treturn SectionMetaData[this.activeSection].icon;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__container\">\n\t\t\t<div class=\"bx-im-settings-section-content__header\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__header_icon\">\n\t\t\t\t\t<i :class=\"sectionIconClass\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-settings-section-content__header_title\">{{ sectionName }}</div>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-settings-section-content__background\">\n\t\t\t\t<component :is=\"sectionComponentName\" />\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Logger } from 'im.v2.lib.logger';\nimport { Settings, SettingsSection } from 'im.v2.const';\n\nimport { SectionList } from './components/section-list';\nimport { SectionContent } from './components/section-content';\n\nimport './css/settings-content.css';\n\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const SettingsContent = {\n\tname: 'SettingsContent',\n\tcomponents: { SectionList, SectionContent },\n\tprops:\n\t{\n\t\tentityId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tactiveSection: '',\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tsections(): string[]\n\t\t{\n\t\t\treturn Object.keys(Settings);\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tLogger.warn('Content: Openlines created');\n\t\tthis.setInitialSection();\n\t},\n\tmethods:\n\t{\n\t\tsetInitialSection(): void\n\t\t{\n\t\t\tif (this.entityId && SettingsSection[this.entityId])\n\t\t\t{\n\t\t\t\tthis.activeSection = this.entityId;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.activeSection = this.sections[0];\n\t\t},\n\t\tonSectionClick(sectionId: string)\n\t\t{\n\t\t\tthis.activeSection = sectionId;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-settings__container\">\n\t\t\t<SectionList :activeSection=\"activeSection\" @sectionClick=\"onSectionClick\" />\n\t\t\t<SectionContent :activeSection=\"activeSection\" />\n\t\t</div>\n\t`,\n};\n"],"names":["SectionMetaData","appearance","name","Loc","getMessage","icon","notification","hotkey","message","recent","desktop","help","feedback","AdditionalSections","SectionList","props","activeSection","type","String","required","emits","data","computed","disabledSections","Set","SettingsSection","DesktopApi","isDesktop","add","FeatureManager","isFeatureAvailable","Feature","isNotificationsStandalone","sections","Object","keys","filter","section","has","methods","getSectionName","getSectionIconClass","onHelpClick","ARTICLE_CODE","openHelpdeskArticle","onFeedbackClick","BX","UI","Feedback","Form","open","id","forms","zones","sec","lang","presets","sender_page","loc","phraseCode","$Bitrix","template","ChatBackground","currentBackgroundId","$store","getters","Settings","background","toString","backgroundIdList","SelectableBackground","getBackgroundStyleById","backgroundId","ThemeManager","onBackgroundClick","preparedBackgroundId","Number","parseInt","settingsService","SettingsService","changeSetting","ChatAlignment","DialogAlignment","currentOptionId","alignment","backgroundStyle","getCurrentBackgroundStyle","onOptionClick","optionId","getSettingsService","initDemoData","chatBuilder","DemoChatBuilder","addChat","role","UserRole","guest","demoUser","addUser","firstMessage","addMessage","authorId","text","viewedByOthers","Core","getUserId","replyId","save","getChat","dialogId","AppearanceSection","components","ChatDialog","fakeDialogId","containerClasses","created","CheckboxOption","ChatHint","value","Boolean","default","disabled","hintText","hasHint","length","onInput","event","$emit","target","checked","RadioOption","items","Array","groupName","Text","getRandom","options","selectedValue","find","option","selected","SimpleNotificationList","enableWeb","enableMail","enablePush","enableMailText","userEmail","currentUser","email","getApplicationData","onEnableWebChange","newValue","onEnableMailChange","onEnablePushChange","replacements","NotificationService","switchScheme","newScheme","getStore","dispatch","mode","newNotificationsSettings","runAction","RestMethod","imV2SettingsNotifySwitchScheme","userId","scheme","catch","error","console","notifications","changeExpertOption","payload","moduleId","optionName","imV2SettingsNotifyUpdate","NotificationItem","item","blockId","NotificationSettingsType","disabledForWeb","includes","web","disabledForMail","mail","disabledForPush","push","onItemChange","NotificationBlock","block","ExpertNotificationList","notificationSettings","settings","values","NotificationSection","enableSound","enableAutoRead","isDndEnabled","user","status","UserStatus","dnd","notificationMode","notificationModeOptions","NotificationSettingsMode","simple","expert","notificationListComponent","onEnableSoundChange","onEnableAutoReadChange","onEnableDnDChange","preparedValue","online","changeStatus","onNotificationModeChange","isChangingToSimple","changeLocalNotificationMode","confirmResult","showNotificationsModeSwitchConfirm","HotkeySection","sendByEnter","sendCombinationItems","ctrlKey","Utils","platform","isMac","enterSubtext","ctrlEnterSubtext","subtext","html","onSendByEnterChange","RecentSection","showBirthday","showInvited","showLastMessage","onShowBirthdayChange","onShowInvitedChange","onShowLastMessageChange","DesktopSection","twoWindowMode","isTwoWindowMode","autoStartDesktop","getAutostartStatus","openPortalLinkInDesktop","enableRedirect","openPortalLinkInDesktopPhrase","isFeatureSupported","DesktopFeature","openPage","openLinksInSlider","sliderBindingStatus","getCustomSetting","DesktopSettingsKey","sliderBindingsStatus","sendTelemetry","getTelemetryStatus","isAirDesignEnabled","LayoutManager","getInstance","isRedirectAvailable","isDesktopRedirectAvailable","onTwoWindowModeChange","setTwoWindowMode","restart","showDesktopConfirm","userChoice","showDesktopRestartConfirm","onAutoStartDesktopChange","setAutostartStatus","onOpenPortalLinkInDesktopChange","onOpenLinksInSliderChange","setSliderBindingStatus","setCustomSetting","onSendTelemetryChange","setTelemetryStatus","flag","SidePanel","Instance","enableAnchorBinding","disableAnchorBinding","SectionContent","sectionComponentName","uppercaseSection","toUpperCase","slice","COMPONENT_POSTFIX","sectionName","sectionIconClass","SettingsContent","entityId","Logger","warn","setInitialSection","onSectionClick","sectionId"],"mappings":"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"}