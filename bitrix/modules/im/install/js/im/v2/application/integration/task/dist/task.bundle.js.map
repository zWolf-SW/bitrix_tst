{"version":3,"file":"task.bundle.js","sources":["../src/components/content/components/header.js","../src/components/content/task-content.js","../src/components/placeholder/functions/init-demo-state.js","../src/components/placeholder/placeholder.js","../src/components/task-chat-opener.js","../src/task.js"],"sourcesContent":["import { LineLoader } from 'im.v2.component.elements.loader';\nimport { FadeAnimation } from 'im.v2.component.animation';\nimport { ChatHeader, UserCounter } from 'im.v2.component.content.elements';\n\nimport '../css/header.css';\n\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const TaskChatHeader = {\n\tname: 'TaskChatHeader',\n\tcomponents: { ChatHeader, UserCounter, LineLoader, FadeAnimation },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:withAddToChatButton=\"false\"\n\t\t>\n\t\t\t<template #left>\n\t\t\t\t<div class=\"bx-im-task-chat-header__left_container\">\n\t\t\t\t\t<div class=\"bx-im-task-chat-header__avatar\"></div>\n\t\t\t\t\t<div class=\"bx-im-task-chat-header__info\">\n\t\t\t\t\t\t<div class=\"bx-im-task-chat-header__title\">{{ loc('IM_TASK_CHAT_HEADER_TITLE') }}</div>\n\t\t\t\t\t\t<LineLoader v-if=\"!isInited\" :width=\"50\" :height=\"16\" />\n\t\t\t\t\t\t<FadeAnimation :duration=\"100\">\n\t\t\t\t\t\t\t<UserCounter v-if=\"isInited\" :dialogId=\"dialogId\" />\n\t\t\t\t\t\t</FadeAnimation>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\nimport { ChatTextarea } from 'im.v2.component.textarea';\n\nimport { TaskChatHeader } from './components/header';\n\n// @vue/component\nexport const TaskChatContent = {\n\tname: 'TaskChatContent',\n\tcomponents: { BaseChatContent, TaskChatHeader, ChatTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\twithSidebar: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\" :withSidebar=\"withSidebar\">\n\t\t\t<template #header>\n\t\t\t\t<TaskChatHeader :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<ChatTextarea\n\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t:key=\"dialogId\"\n\t\t\t\t\t:withMarket=\"false\"\n\t\t\t\t\t:withAudioInput=\"false\"\n\t\t\t\t\t:withAutoFocus=\"false\"\n\t\t\t\t\t@mounted=\"onTextareaMount\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { MessageComponent } from 'im.v2.const';\nimport { DemoChatBuilder } from 'im.v2.lib.demo';\n\nexport const initDemoState = (): string => {\n\tconst chatBuilder = new DemoChatBuilder();\n\n\tconst { dialogId } = chatBuilder.addChat();\n\n\tchatBuilder.addMessage({\n\t\ttext: dialogId,\n\t\tcomponentId: MessageComponent.taskChatCreationMessage,\n\t});\n\n\tchatBuilder.save();\n\n\treturn dialogId;\n};\n","import { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport { Settings, EventType } from 'im.v2.const';\nimport { ThemeManager, type BackgroundStyle } from 'im.v2.lib.theme';\n\nimport { TaskChatContent } from '../content/task-content';\nimport { initDemoState } from './functions/init-demo-state';\n\nimport './css/placeholder.css';\n\ntype MembersCountChangeEvent = BaseEvent<{ taskId: number | string, userCounter: number }>;\n\n// @vue/component\nexport const TaskChatPlaceholder = {\n\tname: 'TaskChatPlaceholder',\n\tcomponents: { TaskChatContent },\n\tprops:\n\t{\n\t\ttaskId: {\n\t\t\ttype: [Number, String],\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): { fakeDialogId: string }\n\t{\n\t\treturn {\n\t\t\tfakeDialogId: '',\n\t\t\tchatMembersCount: 1,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tcontainerClasses(): string[]\n\t\t{\n\t\t\tconst alignment = this.$store.getters['application/settings/get'](Settings.appearance.alignment);\n\n\t\t\treturn [`--${alignment}-align`];\n\t\t},\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getCurrentBackgroundStyle();\n\t\t},\n\t},\n\tcreated(): void\n\t{\n\t\tthis.fakeDialogId = initDemoState();\n\t\tthis.bindEvents();\n\t},\n\tbeforeUnmount(): void\n\t{\n\t\tthis.unbindEvents();\n\t},\n\tmethods:\n\t{\n\t\tbindEvents()\n\t\t{\n\t\t\tEventEmitter.subscribe(EventType.task.onMembersCountChange, this.onMembersCountChange);\n\t\t},\n\t\tunbindEvents()\n\t\t{\n\t\t\tEventEmitter.unsubscribe(EventType.task.onMembersCountChange, this.onMembersCountChange);\n\t\t},\n\t\tonMembersCountChange(event: MembersCountChangeEvent): void\n\t\t{\n\t\t\tconst { taskId, userCounter } = event.getData();\n\t\t\tif (taskId !== this.taskId)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$store.dispatch('chats/update', {\n\t\t\t\tdialogId: this.fakeDialogId,\n\t\t\t\tfields: { userCounter },\n\t\t\t});\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-task-chat-placeholder__container bx-im-messenger__scope\">\n\t\t\t<TaskChatContent :dialogId=\"fakeDialogId\" :withSidebar=\"false\" />\n\t\t\t<div class=\"bx-im-task-chat-placeholder__overlay\"></div>\n\t\t</div>\n\t`,\n};\n","import 'im.v2.css.classes';\nimport 'im.v2.css.icons';\nimport 'im.v2.css.tokens';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { ChatService } from 'im.v2.provider.service.chat';\nimport { SidebarManager, SidebarConfig } from 'im.v2.lib.sidebar';\nimport { SidebarMainPanelBlock } from 'im.v2.const';\n\nimport { TaskChatPlaceholder } from './placeholder/placeholder';\nimport { TaskChatContent } from './content/task-content';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nimport './css/task-chat-opener.css';\n\n// @vue/component\nexport const TaskChatOpener = {\n\tname: 'TaskChatOpener',\n\tcomponents: { TaskChatContent, TaskChatPlaceholder },\n\tprops: {\n\t\tchatId: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t\tchatType: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed: {\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/getByChatId'](this.chatId, true);\n\t\t},\n\t\tdialogId(): string\n\t\t{\n\t\t\treturn this.dialog.dialogId;\n\t\t},\n\t},\n\tcreated(): Promise\n\t{\n\t\tthis.registerSidebarConfig();\n\n\t\treturn this.onChatOpen();\n\t},\n\tmethods: {\n\t\tasync onChatOpen()\n\t\t{\n\t\t\tif (this.dialog.inited)\n\t\t\t{\n\t\t\t\tLogger.warn(`TaskChatOpener: chat ${this.chatId} is already loaded`);\n\t\t\t\t// Analytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.loadChat();\n\t\t\t// Analytics.getInstance().onOpenChat(this.dialog);\n\t\t},\n\t\tasync loadChat(): Promise\n\t\t{\n\t\t\tLogger.warn(`TaskChatOpener: loading chat ${this.chatId}`);\n\t\t\tawait this.getChatService().loadChatByChatId(this.chatId);\n\t\t\tLogger.warn(`TaskChatOpener: chat ${this.chatId} is loaded`);\n\t\t},\n\t\tregisterSidebarConfig(): void\n\t\t{\n\t\t\tconst sidebarConfig = new SidebarConfig({\n\t\t\t\tblocks: [\n\t\t\t\t\tSidebarMainPanelBlock.task,\n\t\t\t\t\tSidebarMainPanelBlock.info,\n\t\t\t\t\tSidebarMainPanelBlock.fileList,\n\t\t\t\t\tSidebarMainPanelBlock.meetingList,\n\t\t\t\t],\n\t\t\t\theaderMenuEnabled: false,\n\t\t\t});\n\n\t\t\tSidebarManager.getInstance().registerConfig((chatContext: ImModelChat) => {\n\t\t\t\treturn chatContext.type === this.chatType;\n\t\t\t}, sidebarConfig);\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-messenger__scope bx-im-task-chat-opener__container\">\n\t\t\t<TaskChatContent :dialogId=\"dialogId\" />\n\t\t</div>\n\t`,\n};\n","import { Text } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\n\nimport { TaskChatOpener } from './components/task-chat-opener';\nimport { TaskChatPlaceholder } from './components/placeholder/placeholder';\n\nimport type { RunActionError } from 'im.v2.lib.rest';\n\nconst APP_NAME = 'TaskChatApplication';\nconst PLACEHOLDER_APP_NAME = 'TaskChatPlaceholderApplication';\n\ntype MountPayload = {\n\trootContainer: string | HTMLElement,\n\tchatId: number,\n\tonError: (RunActionError[]) => void,\n\ttype: string,\n};\n\ntype MountPlaceholderPayload = {\n\trootContainer: string | HTMLElement,\n\ttaskId: number | string,\n};\n\nexport class TaskApplication\n{\n\t#initPromise: Promise<TaskApplication>;\n\n\tconstructor()\n\t{\n\t\tthis.#initPromise = this.#init();\n\t}\n\n\tready(): Promise\n\t{\n\t\treturn this.#initPromise;\n\t}\n\n\tasync mount(payload: MountPayload): Promise\n\t{\n\t\tawait this.ready();\n\n\t\tconst { rootContainer, chatId, onError, type } = payload;\n\t\tif (!rootContainer)\n\t\t{\n\t\t\treturn Promise.reject(new Error('Provide node or selector for root container'));\n\t\t}\n\n\t\tif (!type)\n\t\t{\n\t\t\treturn Promise.reject(new Error('Provide custom chat type name for task chat'));\n\t\t}\n\n\t\tconst preparedChatType = Text.toCamelCase(type);\n\n\t\treturn Core.createVue(this, {\n\t\t\tname: APP_NAME,\n\t\t\tel: rootContainer,\n\t\t\tonError,\n\t\t\tcomponents: { TaskChatOpener },\n\t\t\ttemplate: `<TaskChatOpener :chatId=\"${chatId}\" chatType=\"${preparedChatType}\" />`,\n\t\t});\n\t}\n\n\tasync mountPlaceholder(payload: MountPlaceholderPayload): Promise\n\t{\n\t\tawait this.ready();\n\n\t\tconst { rootContainer, taskId } = payload;\n\t\tif (!rootContainer)\n\t\t{\n\t\t\treturn Promise.reject(new Error('Provide node or selector for root container'));\n\t\t}\n\n\t\treturn Core.createVue(this, {\n\t\t\tname: PLACEHOLDER_APP_NAME,\n\t\t\tel: rootContainer,\n\t\t\tcomponents: { TaskChatPlaceholder },\n\t\t\ttemplate: `<TaskChatPlaceholder :taskId=\"${taskId}\" />`,\n\t\t});\n\t}\n\n\tasync #init(): Promise<TaskApplication>\n\t{\n\t\tawait Core.ready();\n\n\t\treturn this;\n\t}\n}\n"],"names":["TaskChatHeader","name","components","ChatHeader","UserCounter","LineLoader","FadeAnimation","props","dialogId","type","String","default","computed","dialog","$store","getters","isInited","inited","methods","loc","phraseCode","$Bitrix","Loc","getMessage","template","TaskChatContent","BaseChatContent","ChatTextarea","withSidebar","Boolean","initDemoState","chatBuilder","DemoChatBuilder","addChat","addMessage","text","componentId","MessageComponent","taskChatCreationMessage","save","TaskChatPlaceholder","taskId","Number","required","data","fakeDialogId","chatMembersCount","containerClasses","alignment","Settings","appearance","backgroundStyle","ThemeManager","getCurrentBackgroundStyle","created","bindEvents","beforeUnmount","unbindEvents","EventEmitter","subscribe","EventType","task","onMembersCountChange","unsubscribe","event","userCounter","getData","dispatch","fields","TaskChatOpener","chatId","chatType","registerSidebarConfig","onChatOpen","Logger","warn","loadChat","getChatService","loadChatByChatId","sidebarConfig","SidebarConfig","blocks","SidebarMainPanelBlock","info","fileList","meetingList","headerMenuEnabled","SidebarManager","getInstance","registerConfig","chatContext","chatService","ChatService","APP_NAME","PLACEHOLDER_APP_NAME","TaskApplication","constructor","ready","mount","payload","rootContainer","onError","Promise","reject","Error","preparedChatType","Text","toCamelCase","Core","createVue","el","mountPlaceholder"],"mappings":"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"}