{"version":3,"file":"notification.bundle.js","sources":["../src/notification.js"],"sourcesContent":["import { Runtime, Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { NotificationTypesCodes, RestMethod } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { NotificationGetRestResult, NotificationItemRest } from './types/notification';\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({ firstPage: true });\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\t\tthis.store.dispatch('notifications/deleteFromSearch', { id: notificationId });\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string): void\n\t{\n\t\tconst requestParams = {\n\t\t\tNOTIFY_ID: notificationId,\n\t\t\tNOTIFY_VALUE: value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams)\n\t\t\t.catch((result: RestResult) => {\n\t\t\t\tconsole.error('NotificationService: sendConfirmAction error', result.error());\n\t\t\t});\n\t}\n\n\tasync sendQuickAnswer(params): void\n\t{\n\t\tconst { id, text, callbackSuccess = () => {}, callbackError = () => {} } = params;\n\n\t\ttry\n\t\t{\n\t\t\tconst response = await this.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\t\tnotify_id: id,\n\t\t\t\tanswer_text: text,\n\t\t\t});\n\t\t\tcallbackSuccess(response);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('NotificationService: sendQuickAnswer error', error);\n\t\t\tcallbackError();\n\t\t}\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', { id: idsToDelete })\n\t\t\t.catch((result: RestResult) => {\n\t\t\t\tconsole.error('NotificationService: deleteRequest error', result.error());\n\t\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\tLIMIT: this.limitPerPage,\n\t\t\tCONVERT_TEXT: 'Y',\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethod.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams],\n\t\t};\n\n\t\tif (firstPage)\n\t\t{\n\t\t\tbatchQueryParams[RestMethod.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\t\telse\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethod.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethod.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethod.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn notifications.length < this.limitPerPage;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}\n"],"names":["NotificationService","constructor","store","restClient","limitPerPage","isLoading","lastId","lastType","hasMoreItemsToLoad","notificationsToDelete","Set","Core","getStore","getRestClient","deleteWithDebounce","Runtime","debounce","deleteRequest","userManager","UserManager","loadFirstPage","requestItems","firstPage","loadNextPage","Promise","resolve","delete","notificationId","add","dispatch","id","sendConfirmAction","value","requestParams","NOTIFY_ID","NOTIFY_VALUE","callMethod","catch","result","console","error","sendQuickAnswer","params","text","callbackSuccess","callbackError","response","RestMethod","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","LIMIT","CONVERT_TEXT","batchQueryParams","imNotifyGet","imNotifySchemaGet","LAST_ID","LAST_TYPE","callBatch","Logger","warn","handleResponse","imNotifyGetResponse","data","isLastPage","notifications","length","getLastItemId","getLastItemType","updateModels","then","setUsersToModel","users","collection","getItemType","item","notify_type","NotificationTypesCodes","confirm","simple","Type","isArrayFilled","destroy"],"mappings":"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"}