this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,s,a,t,r,l,i,o,d,c,n,b,h,v,p,u,g,L,P,F,H,m){"use strict";var C=babelHelpers.classPrivateFieldLooseKey("store");var B=babelHelpers.classPrivateFieldLooseKey("updateModels");class y{constructor(){Object.defineProperty(this,B,{value:f});Object.defineProperty(this,C,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,C)[C]=L.Core.getStore()}async deleteChat(e){P.Logger.warn(`ChatService: deleteChat, dialogId: ${e}`);const s=await H.runAction(F.RestMethod.imV2ChatDelete,{data:{dialogId:e}}).catch((([e])=>{console.error("ChatService: deleteChat error:",e);p.Notifier.chat.onDeleteError()}));await babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);return s}async deleteCollab(e){P.Logger.warn(`ChatService: deleteCollab, dialogId: ${e}`);try{await H.runAction(F.RestMethod.socialnetworkCollabDelete,{data:{dialogId:e}});await babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);return Promise.resolve()}catch(e){const[s]=e;console.error("ChatService: deleteCollab error:",s);p.Notifier.collab.handleDeleteError(s);return Promise.resolve()}}}function f(e){void babelHelpers.classPrivateFieldLooseBase(this,C)[C].dispatch("chats/update",{dialogId:e,fields:{inited:false}});void babelHelpers.classPrivateFieldLooseBase(this,C)[C].dispatch("recent/delete",{id:e});const s=babelHelpers.classPrivateFieldLooseBase(this,C)[C].getters["chats/get"](e,true);void babelHelpers.classPrivateFieldLooseBase(this,C)[C].dispatch("messages/clearChatCollection",{chatId:s.chatId})}var M=babelHelpers.classPrivateFieldLooseKey("restResult");class I{constructor(e){Object.defineProperty(this,M,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,M)[M]=e}getChatId(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.id}getDialogId(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.dialogId}isOpenlinesChat(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.type===F.ChatType.lines}isCopilotChat(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.type===F.ChatType.copilot}isCollabChat(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.type===F.ChatType.collab}getChats(){const e={...babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat,hasPrevPage:babelHelpers.classPrivateFieldLooseBase(this,M)[M].hasPrevPage,hasNextPage:babelHelpers.classPrivateFieldLooseBase(this,M)[M].hasNextPage,tariffRestrictions:babelHelpers.classPrivateFieldLooseBase(this,M)[M].tariffRestrictions};const s={[babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.dialogId]:e};babelHelpers.classPrivateFieldLooseBase(this,M)[M].users.forEach((e=>{if(s[e.id]){s[e.id]={...s[e.id],...i.UserManager.getDialogForUser(e)}}else{s[e.id]=i.UserManager.getDialogForUser(e)}}));return Object.values(s)}getFiles(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].files)!=null?e:[]}getUsers(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].users)!=null?e:[]}getAdditionalUsers(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].usersShort)!=null?e:[]}getMessages(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].messages)!=null?e:[]}getCommentInfo(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].commentInfo)!=null?e:[]}getCollabInfo(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].collabInfo)!=null?e:null}getMessagesToStore(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].additionalMessages)!=null?e:[]}getPinnedMessageIds(){var e;const s=[];const a=(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].pins)!=null?e:[];a.forEach((e=>{s.push(e.messageId)}));return s}getReactions(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].reactions)!=null?e:[]}getCopilot(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].copilot}getSession(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].session}getAutoDeleteConfig(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].messagesAutoDeleteConfigs}}var w=babelHelpers.classPrivateFieldLooseKey("store");var S=babelHelpers.classPrivateFieldLooseKey("requestChat");var U=babelHelpers.classPrivateFieldLooseKey("markDialogAsLoading");var R=babelHelpers.classPrivateFieldLooseKey("markDialogAsLoaded");var D=babelHelpers.classPrivateFieldLooseKey("markDialogAsNotLoaded");var O=babelHelpers.classPrivateFieldLooseKey("isDialogLoadedMarkNeeded");var j=babelHelpers.classPrivateFieldLooseKey("updateModels");var A=babelHelpers.classPrivateFieldLooseKey("needLayoutRedirect");var K=babelHelpers.classPrivateFieldLooseKey("redirectToLayout");var k=babelHelpers.classPrivateFieldLooseKey("needRedirectToOpenLinesLayout");var E=babelHelpers.classPrivateFieldLooseKey("checkFeatureDisabled");var T=babelHelpers.classPrivateFieldLooseKey("checkCollabFeatureDisabled");var V=babelHelpers.classPrivateFieldLooseKey("openFeatureSlider");class X{constructor(){Object.defineProperty(this,V,{value:Z});Object.defineProperty(this,T,{value:G});Object.defineProperty(this,E,{value:J});Object.defineProperty(this,k,{value:Q});Object.defineProperty(this,K,{value:z});Object.defineProperty(this,A,{value:_});Object.defineProperty(this,j,{value:W});Object.defineProperty(this,O,{value:Y});Object.defineProperty(this,D,{value:q});Object.defineProperty(this,R,{value:$});Object.defineProperty(this,U,{value:x});Object.defineProperty(this,S,{value:N});Object.defineProperty(this,w,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,w)[w]=L.Core.getStore()}loadChat(e){const s={dialogId:e};return babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatShallowLoad,s)}loadChatByChatId(e){const s={chatId:e,messageLimit:r.MessageService.getMessageRequestLimit()};return babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatLoad,s)}loadChatWithMessages(e){const s={dialogId:e,messageLimit:r.MessageService.getMessageRequestLimit()};return babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatLoad,s)}loadChatWithContext(e,s){const a={dialogId:e,messageId:s,messageLimit:r.MessageService.getMessageRequestLimit()};return babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatLoadInContext,a)}prepareDialogId(e){if(!v.Utils.dialog.isExternalId(e)){return Promise.resolve(e)}return H.runAction(F.RestMethod.imV2ChatGetDialogId,{data:{externalId:e}}).then((e=>e.dialogId)).catch((e=>{console.error("ChatService: Load: error preparing external id",e)}))}async loadComments(e){const s={postId:e,messageLimit:r.MessageService.getMessageRequestLimit(),autoJoin:true,createIfNotExists:true};const{chatId:a}=await babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatLoad,s);return babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/comments/set",{messageId:e,chatId:a})}async loadCommentInfo(e){const s=babelHelpers.classPrivateFieldLooseBase(this,w)[w].getters["chats/get"](e,true);const a=babelHelpers.classPrivateFieldLooseBase(this,w)[w].getters["messages/getByChatId"](s.chatId);const t=a.map((e=>e.id));const{commentInfo:r,usersShort:l}=await H.runAction(F.RestMethod.imV2ChatMessageCommentInfoList,{data:{messageIds:t}}).catch((e=>{console.error("ChatService: Load: error loading comment info",e)}));const o=new i.UserManager;void babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/comments/set",r);void o.addUsersToModel(l)}resetChat(e){const s=babelHelpers.classPrivateFieldLooseBase(this,w)[w].getters["chats/get"](e,true);babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/clearChatCollection",{chatId:s.chatId});babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/update",{dialogId:e,fields:{inited:false}})}}async function N(e,s){const{dialogId:r,messageId:l}=s;babelHelpers.classPrivateFieldLooseBase(this,U)[U](r);const i=await H.runAction(e,{data:s}).catch((([e])=>{console.error("ChatService: Load: error loading chat",e);p.Notifier.chat.handleLoadError(e);babelHelpers.classPrivateFieldLooseBase(this,D)[D](r);throw e}));if(babelHelpers.classPrivateFieldLooseBase(this,E)[E](i)){await babelHelpers.classPrivateFieldLooseBase(this,D)[D](r);await t.Messenger.openChat();return babelHelpers.classPrivateFieldLooseBase(this,V)[V](i)}if(babelHelpers.classPrivateFieldLooseBase(this,A)[A](i)){return babelHelpers.classPrivateFieldLooseBase(this,K)[K](i,l)}const{dialogId:o,chatId:d}=await babelHelpers.classPrivateFieldLooseBase(this,j)[j](i);const{callInfo:c}=i;a.CallTokenManager.setToken(c.chatId,c.token);if(babelHelpers.classPrivateFieldLooseBase(this,O)[O](e)){await babelHelpers.classPrivateFieldLooseBase(this,R)[R](o)}return{dialogId:o,chatId:d}}function x(e){void babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/update",{dialogId:e,fields:{loading:true}})}function $(e){return babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/update",{dialogId:e,fields:{inited:true,loading:false}})}function q(e){return babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/update",{dialogId:e,fields:{loading:false}})}function Y(e){return e!==F.RestMethod.imV2ChatShallowLoad}async function W(e){const a=new I(e);const t=babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/set",a.getChats());const r=babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("files/set",a.getFiles());const o=babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/autoDelete/set",a.getAutoDeleteConfig());const d=new i.UserManager;const c=Promise.all([babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("users/set",a.getUsers()),d.addUsersToModel(a.getAdditionalUsers())]);const n=Promise.all([babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/setChatCollection",{messages:a.getMessages(),clearCollection:true}),babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/store",a.getMessagesToStore()),babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/pin/setPinned",{chatId:a.getChatId(),pinnedMessages:a.getPinnedMessageIds()}),babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/reactions/set",a.getReactions()),babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/comments/set",a.getCommentInfo())]);const b=new l.CopilotManager;const h=b.handleChatLoadResponse(a.getCopilot());let v=Promise.resolve();if(s.OpenLinesManager){v=s.OpenLinesManager.handleChatLoadResponse(a.getSession())}const p=babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/collabs/set",{chatId:a.getChatId(),collabInfo:a.getCollabInfo()});await Promise.all([t,r,c,n,h,v,p,o]);return{dialogId:a.getDialogId(),chatId:a.getChatId()}}function _(e){return babelHelpers.classPrivateFieldLooseBase(this,k)[k](e)}function z(e){const s=new I(e);u.LayoutManager.getInstance().setLastOpenedElement(F.Layout.chat.name,"");if(babelHelpers.classPrivateFieldLooseBase(this,k)[k](e)){return t.Messenger.openLines(s.getDialogId())}return Promise.resolve()}function Q(e){const s=m.FeatureManager.isFeatureAvailable(m.Feature.openLinesV2);if(s){return false}const a=new I(e);return a.isOpenlinesChat()&&g.Type.isStringFilled(a.getDialogId())}function J(e){return babelHelpers.classPrivateFieldLooseBase(this,T)[T](e)}function G(e){const s=new I(e);return s.isCollabChat()&&!m.FeatureManager.collab.isAvailable()}function Z(e){if(babelHelpers.classPrivateFieldLooseBase(this,T)[T](e)){m.FeatureManager.collab.openFeatureSlider()}}const ee="CHAT";const se="OPEN";var ae=babelHelpers.classPrivateFieldLooseKey("restClient");var te=babelHelpers.classPrivateFieldLooseKey("store");var re=babelHelpers.classPrivateFieldLooseKey("prepareFields");var le=babelHelpers.classPrivateFieldLooseKey("addCollabToModel");var ie=babelHelpers.classPrivateFieldLooseKey("addChatToModel");var oe=babelHelpers.classPrivateFieldLooseKey("sendAnalytics");class de{constructor(){Object.defineProperty(this,oe,{value:he});Object.defineProperty(this,ie,{value:be});Object.defineProperty(this,le,{value:ne});Object.defineProperty(this,re,{value:ce});Object.defineProperty(this,ae,{writable:true,value:void 0});Object.defineProperty(this,te,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ae)[ae]=L.Core.getRestClient();babelHelpers.classPrivateFieldLooseBase(this,te)[te]=L.Core.getStore()}async createChat(e){P.Logger.warn("ChatService: createChat",e);const s=await babelHelpers.classPrivateFieldLooseBase(this,re)[re](e);const a=await babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].callMethod(F.RestMethod.imV2ChatAdd,{fields:s}).catch((e=>{console.error("ChatService: createChat error:",e);p.Notifier.chat.onCreateError();throw e}));const{chatId:t}=a.data();P.Logger.warn("ChatService: createChat result",t);const r=`chat${t}`;babelHelpers.classPrivateFieldLooseBase(this,ie)[ie](r,s);babelHelpers.classPrivateFieldLooseBase(this,oe)[oe](r);return{newDialogId:r,newChatId:t}}async createCollab(e){P.Logger.warn("ChatService: createCollab",e);const s=await babelHelpers.classPrivateFieldLooseBase(this,re)[re](e);const a={ownerId:s.ownerId,name:s.title,description:s.description,avatarId:s.avatar,moderatorMembers:v.Utils.user.prepareSelectorIds(e.moderatorMembers),permissions:e.permissions,options:{...e.options,messagesAutoDeleteDelay:s.messagesAutoDeleteDelay}};const t=await H.runAction(F.RestMethod.socialnetworkCollabCreate,{data:a}).catch((([e])=>{console.error("ChatService: createCollab error:",e);p.Notifier.collab.handleCreateError(e);throw e}));const{chatId:r}=t;P.Logger.warn("ChatService: createCollab result",r);const l=`chat${r}`;babelHelpers.classPrivateFieldLooseBase(this,le)[le](l,s);babelHelpers.classPrivateFieldLooseBase(this,oe)[oe](l);return{newDialogId:l,newChatId:r}}}async function ce(e){var s,a,t,r;const l={...e};if(l.avatar){l.avatar=await v.Utils.file.getBase64(e.avatar)}l.managers=(s=l.managers)!=null?s:[];l.members=(a=l.members)!=null?a:[];const i=[...l.members,...l.managers];if(l.ownerId){i.push(l.ownerId)}l.members=[...new Set(i)];const o={type:(t=l.type)==null?void 0:t.toUpperCase(),entityType:(r=l.entityType)==null?void 0:r.toUpperCase(),title:l.title,avatar:l.avatar,description:l.description,users:l.members,memberEntities:l.memberEntities,managers:l.managers,ownerId:l.ownerId,searchable:l.isAvailableInSearch?"Y":"N",manageUsersAdd:l.manageUsersAdd,manageUsersDelete:l.manageUsersDelete,manageUi:l.manageUi,manageSettings:l.manageSettings,manageMessages:l.manageMessages,conferencePassword:l.conferencePassword,copilotMainRole:l.copilotMainRole,messagesAutoDeleteDelay:l.autoDeleteDelay};Object.entries(o).forEach((([e,s])=>{if(g.Type.isUndefined(s)){delete o[e]}}));return o}function ne(e,s){babelHelpers.classPrivateFieldLooseBase(this,te)[te].dispatch("chats/set",{dialogId:e,type:F.ChatType.collab,name:s.title})}function be(e,s){let a=s.searchable==="Y"?se:ee;if(g.Type.isStringFilled(s.entityType)){a=s.entityType.toLowerCase()}if(g.Type.isStringFilled(s.type)){a=s.type.toLowerCase()}babelHelpers.classPrivateFieldLooseBase(this,te)[te].dispatch("chats/set",{dialogId:e,type:a.toLowerCase(),name:s.title,userCounter:s.users.length,role:F.UserRole.owner,permissions:{manageUi:s.manageUi,manageSettings:s.manageSettings,manageUsersAdd:s.manageUsersAdd,manageUsersDelete:s.manageUsersDelete,manageMessages:s.manageMessages}})}function he(e){o.Analytics.getInstance().ignoreNextChatOpen(e)}var ve=babelHelpers.classPrivateFieldLooseKey("store");var pe=babelHelpers.classPrivateFieldLooseKey("prepareFields");var ue=babelHelpers.classPrivateFieldLooseKey("updateChatInModel");class ge{constructor(){Object.defineProperty(this,ue,{value:Pe});Object.defineProperty(this,pe,{value:Le});Object.defineProperty(this,ve,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ve)[ve]=L.Core.getStore()}async prepareAvatar(e){if(!d.isResizableImage(e)){return Promise.reject(new Error("UpdateService: prepareAvatar: incorrect image"))}const s=180;const{preview:a}=await d.resizeImage(e,{width:s,height:s});return a}async changeAvatar(e,s){P.Logger.warn("ChatService: changeAvatar",e,s);const a=await v.Utils.file.getBase64(s);return H.runAction(F.RestMethod.imV2ChatUpdateAvatar,{data:{id:e,avatar:a}}).catch((([e])=>{console.error("ChatService: changeAvatar error:",e)}))}async updateChat(e,s){P.Logger.warn(`ChatService: updateChat, chatId: ${e}`,s);const a=await babelHelpers.classPrivateFieldLooseBase(this,pe)[pe](s);const t=await H.runAction(F.RestMethod.imV2ChatUpdate,{data:{id:e,fields:a},id:e}).catch((([e])=>{console.error("ChatService: updateChat error:",e);p.Notifier.chat.onUpdateError();throw e}));P.Logger.warn("ChatService: updateChat result",t);const r=`chat${e}`;await babelHelpers.classPrivateFieldLooseBase(this,ue)[ue](r,s);return t}async updateCollab(e,s){P.Logger.warn(`ChatService: updateCollab, dialogId: ${e}`,s);const a=await babelHelpers.classPrivateFieldLooseBase(this,pe)[pe](s);let t={dialogId:e,name:a.title,description:a.description,avatarId:a.avatar};if(s.groupSettings){const e=s.groupSettings;t={...t,ownerId:e.ownerId,addModeratorMembers:v.Utils.user.prepareSelectorIds(e.addModeratorMembers),deleteModeratorMembers:v.Utils.user.prepareSelectorIds(e.deleteModeratorMembers),permissions:e.permissions,options:e.options}}const r=await H.runAction(F.RestMethod.socialnetworkCollabUpdate,{data:t}).catch((([e])=>{console.error("ChatService: updateCollab error:",e);p.Notifier.collab.handleUpdateError(e);throw e}));P.Logger.warn("ChatService: updateCollab result",r);return r}async getMemberEntities(e){return H.runAction(F.RestMethod.imV2ChatMemberEntitiesList,{data:{chatId:e}}).catch((([e])=>{console.error("ChatService: getMemberEntities error:",e)}))}}async function Le(e){const s={title:e.title,description:e.description,ownerId:e.ownerId,searchable:e.isAvailableInSearch?"Y":"N",manageUi:e.manageUi,manageUsersAdd:e.manageUsersAdd,manageUsersDelete:e.manageUsersDelete,manageMessages:e.manageMessages,addedMemberEntities:e.addedMemberEntities,deletedMemberEntities:e.deletedMemberEntities,addedManagers:e.addedManagers,deletedManagers:e.deletedManagers};if(e.avatar){s.avatar=await v.Utils.file.getBase64(e.avatar)}Object.entries(s).forEach((([e,a])=>{if(g.Type.isUndefined(a)){delete s[e]}}));return s}function Pe(e,s){return babelHelpers.classPrivateFieldLooseBase(this,ve)[ve].dispatch("chats/update",{dialogId:e,fields:{name:s.title,description:s.description,ownerId:s.ownerId,managerList:s.managers,type:s.type,role:c.getChatRoleForUser(s),permissions:{manageUi:s.manageUi,manageUsersAdd:s.manageUsersAdd,manageUsersDelete:s.manageUsersDelete,manageMessages:s.manageMessages}}})}var Fe=babelHelpers.classPrivateFieldLooseKey("store");var He=babelHelpers.classPrivateFieldLooseKey("restClient");var me=babelHelpers.classPrivateFieldLooseKey("updateChatTitleInModel");class Ce{constructor(){Object.defineProperty(this,me,{value:Be});Object.defineProperty(this,Fe,{writable:true,value:void 0});Object.defineProperty(this,He,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Fe)[Fe]=L.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,He)[He]=L.Core.getRestClient()}renameChat(e,s){P.Logger.warn("ChatService: renameChat",e,s);if(s===""){return Promise.resolve()}const a=babelHelpers.classPrivateFieldLooseBase(this,Fe)[Fe].getters["chats/get"](e);const t=a.name;babelHelpers.classPrivateFieldLooseBase(this,me)[me](e,s);return babelHelpers.classPrivateFieldLooseBase(this,He)[He].callMethod(F.RestMethod.imChatUpdateTitle,{dialog_id:e,title:s}).catch((s=>{babelHelpers.classPrivateFieldLooseBase(this,me)[me](e,t);console.error("ChatService: renameChat error",s.error());p.Notifier.chat.onRenameError()}))}}function Be(e,s){babelHelpers.classPrivateFieldLooseBase(this,Fe)[Fe].dispatch("chats/update",{dialogId:e,fields:{name:s}})}var ye=babelHelpers.classPrivateFieldLooseKey("store");var fe=babelHelpers.classPrivateFieldLooseKey("restClient");var Me=babelHelpers.classPrivateFieldLooseKey("sendMuteRequestDebounced");var Ie=babelHelpers.classPrivateFieldLooseKey("sendMuteRequest");class we{constructor(){Object.defineProperty(this,Ie,{value:Se});Object.defineProperty(this,ye,{writable:true,value:void 0});Object.defineProperty(this,fe,{writable:true,value:void 0});Object.defineProperty(this,Me,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ye)[ye]=L.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,fe)[fe]=L.Core.getRestClient();const e=500;babelHelpers.classPrivateFieldLooseBase(this,Me)[Me]=g.Runtime.debounce(babelHelpers.classPrivateFieldLooseBase(this,Ie)[Ie],e)}muteChat(e){P.Logger.warn("ChatService: muteChat",e);void babelHelpers.classPrivateFieldLooseBase(this,ye)[ye].dispatch("chats/mute",{dialogId:e});const s={dialog_id:e,action:"Y"};babelHelpers.classPrivateFieldLooseBase(this,Me)[Me](s)}unmuteChat(e){P.Logger.warn("ChatService: unmuteChat",e);void babelHelpers.classPrivateFieldLooseBase(this,ye)[ye].dispatch("chats/unmute",{dialogId:e});const s={dialog_id:e,action:"N"};babelHelpers.classPrivateFieldLooseBase(this,Me)[Me](s)}}function Se(e){const{dialog_id:s,action:a}=e;return babelHelpers.classPrivateFieldLooseBase(this,fe)[fe].callMethod(F.RestMethod.imChatMute,e).catch((e=>{const t=a==="Y"?"muting":"unmuting";console.error(`Im.RecentList: error ${t} chat`,e.error());const r=a==="Y"?"chats/unmute":"chats/mute";void babelHelpers.classPrivateFieldLooseBase(this,ye)[ye].dispatch(r,{dialogId:s})}))}var Ue=babelHelpers.classPrivateFieldLooseKey("store");class Re{constructor(){Object.defineProperty(this,Ue,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue]=L.Core.getStore()}pinChat(e){P.Logger.warn("PinService: pinChat",e);void babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue].dispatch("recent/pin",{id:e,action:true});H.runAction(F.RestMethod.imV2RecentPin,{data:{dialogId:e}}).catch((([s])=>{console.error("PinService: error pinning chat",s);p.Notifier.recent.handlePinError(s);void babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue].dispatch("recent/pin",{id:e,action:false})}))}unpinChat(e){P.Logger.warn("PinService: unpinChat",e);void babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue].dispatch("recent/pin",{id:e,action:false});H.runAction(F.RestMethod.imV2RecentUnpin,{data:{dialogId:e}}).catch((([s])=>{console.error("PinService: error unpinning chat",s);p.Notifier.recent.onUnpinError();void babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue].dispatch("recent/pin",{id:e,action:true})}))}}const De=300;var Oe=babelHelpers.classPrivateFieldLooseKey("store");var je=babelHelpers.classPrivateFieldLooseKey("restClient");var Ae=babelHelpers.classPrivateFieldLooseKey("messagesToRead");var Ke=babelHelpers.classPrivateFieldLooseKey("readMessagesForChat");var ke=babelHelpers.classPrivateFieldLooseKey("readMessageOnClient");var Ee=babelHelpers.classPrivateFieldLooseKey("decreaseCommentCounter");var Te=babelHelpers.classPrivateFieldLooseKey("decreaseChatCounter");var Ve=babelHelpers.classPrivateFieldLooseKey("readMessageOnServer");var Xe=babelHelpers.classPrivateFieldLooseKey("checkChatCounter");var Ne=babelHelpers.classPrivateFieldLooseKey("getDialogIdByChatId");var xe=babelHelpers.classPrivateFieldLooseKey("getDialogByChatId");class $e{constructor(){Object.defineProperty(this,xe,{value:Ge});Object.defineProperty(this,Ne,{value:Je});Object.defineProperty(this,Xe,{value:Qe});Object.defineProperty(this,Ve,{value:ze});Object.defineProperty(this,Te,{value:_e});Object.defineProperty(this,Ee,{value:We});Object.defineProperty(this,ke,{value:Ye});Object.defineProperty(this,Ke,{value:qe});Object.defineProperty(this,Oe,{writable:true,value:void 0});Object.defineProperty(this,je,{writable:true,value:void 0});Object.defineProperty(this,Ae,{writable:true,value:{}});babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe]=L.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,je)[je]=L.Core.getRestClient()}readAll(){P.Logger.warn("ReadService: readAll");void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("chats/clearCounters");void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("recent/clearUnread");return babelHelpers.classPrivateFieldLooseBase(this,je)[je].callMethod(F.RestMethod.imV2ChatReadAll).catch((e=>{console.error("ReadService: readAll error",e.error())}))}readDialog(e){P.Logger.warn("ReadService: readDialog",e);void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("recent/unread",{id:e,action:false});void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("chats/update",{dialogId:e,fields:{counter:0}});babelHelpers.classPrivateFieldLooseBase(this,je)[je].callMethod(F.RestMethod.imV2ChatRead,{dialogId:e}).catch((e=>{console.error("ReadService: error reading chat",e.error())}))}unreadDialog(e){P.Logger.warn("ReadService: unreadDialog",e);void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("recent/unread",{id:e,action:true});babelHelpers.classPrivateFieldLooseBase(this,je)[je].callMethod(F.RestMethod.imV2ChatUnread,{dialogId:e}).catch((s=>{console.error("ReadService: error setting chat as unread",s.error());void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("recent/unread",{id:e,action:false})}))}readMessage(e,s){if(!babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae][e]){babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae][e]=new Set}babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae][e].add(s);clearTimeout(this.readTimeout);this.readTimeout=setTimeout((()=>{Object.entries(babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae]).forEach((([e,s])=>{void babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke](e,s)}))}),De)}async readChatQueuedMessages(e){if(!babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae][e]){return}clearTimeout(this.readTimeout);void babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke](e,babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae][e])}clearDialogMark(e){P.Logger.warn("ReadService: clear dialog mark",e);const s=babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].getters["chats/get"](e);const a=babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].getters["recent/get"](e);if(s.markedId===0&&!(a!=null&&a.unread)){return}void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("recent/unread",{id:e,action:false});void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("chats/update",{dialogId:e,fields:{markedId:0}});babelHelpers.classPrivateFieldLooseBase(this,je)[je].callMethod(F.RestMethod.imV2ChatRead,{dialogId:e,onlyRecent:"Y"}).catch((e=>{console.error("ReadService: error clearing dialog mark",e.error())}))}}async function qe(e,s){const a=Number.parseInt(e,10);P.Logger.warn("ReadService: readMessages",s);if(s.size===0){return true}const t=[...s];delete babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae][a];const r=await babelHelpers.classPrivateFieldLooseBase(this,ke)[ke](a,t);P.Logger.warn("ReadService: readMessage, need to reduce counter by",r);await babelHelpers.classPrivateFieldLooseBase(this,Te)[Te](a,r);const l=await babelHelpers.classPrivateFieldLooseBase(this,Ve)[Ve](a,t).catch((([e])=>{console.error("ReadService: error reading message",e)}));babelHelpers.classPrivateFieldLooseBase(this,Xe)[Xe](l);return true}function Ye(e,s){const a=Math.max(...s);const t=babelHelpers.classPrivateFieldLooseBase(this,xe)[xe](e);if(a>t.lastReadId){void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("chats/update",{dialogId:babelHelpers.classPrivateFieldLooseBase(this,Ne)[Ne](e),fields:{lastId:a}})}return babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("messages/readMessages",{chatId:e,messageIds:s})}function We(e,s){const a=babelHelpers.classPrivateFieldLooseBase(this,xe)[xe](e);let t=a.counter-s;if(t<0){t=0}const r={[a.parentChatId]:{[e]:t}};return L.Core.getStore().dispatch("counters/setCommentCounters",r)}function _e(e,s){const a=babelHelpers.classPrivateFieldLooseBase(this,xe)[xe](e);if(a.type===F.ChatType.comment){return babelHelpers.classPrivateFieldLooseBase(this,Ee)[Ee](e,s)}let t=a.counter-s;if(t<0){t=0}return babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("chats/update",{dialogId:babelHelpers.classPrivateFieldLooseBase(this,Ne)[Ne](e),fields:{counter:t}})}function ze(e,s){P.Logger.warn("ReadService: readMessages on server",s);return H.runAction(F.RestMethod.imV2ChatMessageRead,{data:{chatId:e,ids:s,actionUuid:n.UuidManager.getInstance().getActionUuid()}})}function Qe(e){if(!e){return}const{chatId:s,counter:a}=e;const t=babelHelpers.classPrivateFieldLooseBase(this,xe)[xe](s);if(t.counter>a){P.Logger.warn("ReadService: counter from server is lower than local one",t.counter,a);void babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].dispatch("chats/update",{dialogId:t.dialogId,fields:{counter:a}})}}function Je(e){const s=babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].getters["chats/getByChatId"](e);if(!s){return 0}return s.dialogId}function Ge(e){return babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe].getters["chats/getByChatId"](e)}var Ze=babelHelpers.classPrivateFieldLooseKey("store");var es=babelHelpers.classPrivateFieldLooseKey("restClient");var ss=babelHelpers.classPrivateFieldLooseKey("onChatLeave");class as{constructor(){Object.defineProperty(this,ss,{value:ts});Object.defineProperty(this,Ze,{writable:true,value:void 0});Object.defineProperty(this,es,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze]=L.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,es)[es]=L.Core.getRestClient()}async leaveChat(e){const s={dialogId:e,userId:L.Core.getUserId()};try{await babelHelpers.classPrivateFieldLooseBase(this,es)[es].callMethod(F.RestMethod.imV2ChatDeleteUser,s);babelHelpers.classPrivateFieldLooseBase(this,ss)[ss](e)}catch(e){console.error("UserService: leave chat error",e.error());p.Notifier.chat.handleLeaveError(e.error())}}async leaveCollab(e){const s={data:{dialogId:e}};try{await H.runAction(F.RestMethod.socialnetworkMemberLeave,s);babelHelpers.classPrivateFieldLooseBase(this,ss)[ss](e)}catch(e){console.error("UserService: leave collab error",e[0]);p.Notifier.collab.onLeaveError()}}async kickUserFromChat(e,s){const a={dialogId:e,userId:s};await babelHelpers.classPrivateFieldLooseBase(this,es)[es].callMethod(F.RestMethod.imV2ChatDeleteUser,a).catch((e=>{console.error("UserService: error kicking from chat",e.error());p.Notifier.chat.handleUserKickError(e.error())}))}async kickUserFromCollab(e,s){const a=v.Utils.user.prepareSelectorIds(s);const t={data:{dialogId:e,members:a}};await H.runAction(F.RestMethod.socialnetworkMemberDelete,t).catch((([e])=>{console.error("UserService: error kicking from collab",e);p.Notifier.collab.onKickUserError()}))}addToChat(e){const s={chat_id:e.chatId,users:e.members,hide_history:!e.showHistory};return babelHelpers.classPrivateFieldLooseBase(this,es)[es].callMethod(F.RestMethod.imChatUserAdd,s).catch((e=>{console.error("UserService: error adding to chat",e.error());throw e.error()}))}joinChat(e){P.Logger.warn(`UserService: join chat ${e}`);void babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze].dispatch("chats/update",{dialogId:e,fields:{role:F.UserRole.member}});babelHelpers.classPrivateFieldLooseBase(this,es)[es].callMethod(F.RestMethod.imV2ChatJoin,{dialogId:e}).catch((e=>{console.error("UserService: error joining chat",e.error())}))}addManager(e,s){P.Logger.warn(`UserService: add manager ${s} to ${e}`);const{managerList:a}=babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze].getters["chats/get"](e);if(a.includes(s)){return}const t=[...a,s];void babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze].dispatch("chats/update",{dialogId:e,fields:{managerList:t}});const r={data:{dialogId:e,userIds:[s]}};H.runAction(F.RestMethod.imV2ChatAddManagers,r).catch((([e])=>{console.error("UserService: add manager error",e)}))}removeManager(e,s){P.Logger.warn(`UserService: remove manager ${s} from ${e}`);const{managerList:a}=babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze].getters["chats/get"](e);if(!a.includes(s)){return}const t=a.filter((e=>e!==s));void babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze].dispatch("chats/update",{dialogId:e,fields:{managerList:t}});const r={data:{dialogId:e,userIds:[s]}};H.runAction(F.RestMethod.imV2ChatDeleteManagers,r).catch((([e])=>{console.error("UserService: remove manager error",e)}))}}function ts(e){void babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze].dispatch("chats/update",{dialogId:e,fields:{inited:false}});void babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze].dispatch("recent/delete",{id:e});const s=babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze].getters["application/isChatOpen"](e);if(s){u.LayoutManager.getInstance().clearCurrentLayoutEntityId();void u.LayoutManager.getInstance().deleteLastOpenedElementById(e)}}var rs=babelHelpers.classPrivateFieldLooseKey("store");var ls=babelHelpers.classPrivateFieldLooseKey("sendRequestDebounced");var is=babelHelpers.classPrivateFieldLooseKey("sendRequest");var os=babelHelpers.classPrivateFieldLooseKey("handleResponse");var ds=babelHelpers.classPrivateFieldLooseKey("getChatId");class cs{constructor(){Object.defineProperty(this,ds,{value:hs});Object.defineProperty(this,os,{value:bs});Object.defineProperty(this,is,{value:ns});Object.defineProperty(this,rs,{writable:true,value:void 0});Object.defineProperty(this,ls,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,rs)[rs]=L.Core.getStore();const e=500;babelHelpers.classPrivateFieldLooseBase(this,ls)[ls]=g.Runtime.debounce(babelHelpers.classPrivateFieldLooseBase(this,is)[is],e)}setDelay(e,s){P.Logger.warn("MessagesAutoDeleteService: setDelay",e,s);const a=babelHelpers.classPrivateFieldLooseBase(this,ds)[ds](e);const t=babelHelpers.classPrivateFieldLooseBase(this,rs)[rs].getters["chats/autoDelete/getDelay"](a);if(t===s){return}void babelHelpers.classPrivateFieldLooseBase(this,rs)[rs].dispatch("chats/autoDelete/set",{chatId:a,delay:s});babelHelpers.classPrivateFieldLooseBase(this,ls)[ls]({dialogId:e,delay:s,previousDelay:t})}}async function ns(e){const{dialogId:s,delay:a,previousDelay:t}=e;try{const e=await H.runAction(F.RestMethod.imV2ChatSetMessagesAutoDeleteDelay,{data:{dialogId:s,hours:a}});babelHelpers.classPrivateFieldLooseBase(this,os)[os](a,e)}catch(e){console.error("MessagesAutoDeleteService: Error setting auto delete delay",e);void babelHelpers.classPrivateFieldLooseBase(this,rs)[rs].dispatch("chats/autoDelete/set",{chatId:babelHelpers.classPrivateFieldLooseBase(this,ds)[ds](s),delay:t})}}function bs(e,s){const[a]=s.messagesAutoDeleteConfigs;if(e!==a.delay&&a.delay===F.AutoDeleteDelay.Off){m.FeatureManager.messagesAutoDelete.openFeatureSlider()}void babelHelpers.classPrivateFieldLooseBase(this,rs)[rs].dispatch("chats/autoDelete/set",{chatId:a.chatId,delay:a.delay})}function hs(e){return babelHelpers.classPrivateFieldLooseBase(this,rs)[rs].getters["chats/get"](e).chatId}var vs=babelHelpers.classPrivateFieldLooseKey("loadService");var ps=babelHelpers.classPrivateFieldLooseKey("createService");var us=babelHelpers.classPrivateFieldLooseKey("updateService");var gs=babelHelpers.classPrivateFieldLooseKey("renameService");var Ls=babelHelpers.classPrivateFieldLooseKey("muteService");var Ps=babelHelpers.classPrivateFieldLooseKey("pinService");var Fs=babelHelpers.classPrivateFieldLooseKey("readService");var Hs=babelHelpers.classPrivateFieldLooseKey("userService");var ms=babelHelpers.classPrivateFieldLooseKey("deleteService");var Cs=babelHelpers.classPrivateFieldLooseKey("messagesAutoDeleteService");var Bs=babelHelpers.classPrivateFieldLooseKey("initServices");class ys{constructor(){Object.defineProperty(this,Bs,{value:fs});Object.defineProperty(this,vs,{writable:true,value:void 0});Object.defineProperty(this,ps,{writable:true,value:void 0});Object.defineProperty(this,us,{writable:true,value:void 0});Object.defineProperty(this,gs,{writable:true,value:void 0});Object.defineProperty(this,Ls,{writable:true,value:void 0});Object.defineProperty(this,Ps,{writable:true,value:void 0});Object.defineProperty(this,Fs,{writable:true,value:void 0});Object.defineProperty(this,Hs,{writable:true,value:void 0});Object.defineProperty(this,ms,{writable:true,value:void 0});Object.defineProperty(this,Cs,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Bs)[Bs]()}loadChat(e){return babelHelpers.classPrivateFieldLooseBase(this,vs)[vs].loadChat(e)}loadChatByChatId(e){return babelHelpers.classPrivateFieldLooseBase(this,vs)[vs].loadChatByChatId(e)}loadChatWithMessages(e){return babelHelpers.classPrivateFieldLooseBase(this,vs)[vs].loadChatWithMessages(e)}loadChatWithContext(e,s){return babelHelpers.classPrivateFieldLooseBase(this,vs)[vs].loadChatWithContext(e,s)}loadComments(e){return babelHelpers.classPrivateFieldLooseBase(this,vs)[vs].loadComments(e)}loadCommentInfo(e){return babelHelpers.classPrivateFieldLooseBase(this,vs)[vs].loadCommentInfo(e)}prepareDialogId(e){return babelHelpers.classPrivateFieldLooseBase(this,vs)[vs].prepareDialogId(e)}resetChat(e){return babelHelpers.classPrivateFieldLooseBase(this,vs)[vs].resetChat(e)}createChat(e){return babelHelpers.classPrivateFieldLooseBase(this,ps)[ps].createChat(e)}createCollab(e){return babelHelpers.classPrivateFieldLooseBase(this,ps)[ps].createCollab(e)}prepareAvatar(e){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].prepareAvatar(e)}changeAvatar(e,s){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].changeAvatar(e,s)}updateChat(e,s){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].updateChat(e,s)}updateCollab(e,s){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].updateCollab(e,s)}getMemberEntities(e){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].getMemberEntities(e)}deleteChat(e){return babelHelpers.classPrivateFieldLooseBase(this,ms)[ms].deleteChat(e)}deleteCollab(e){return babelHelpers.classPrivateFieldLooseBase(this,ms)[ms].deleteCollab(e)}renameChat(e,s){return babelHelpers.classPrivateFieldLooseBase(this,gs)[gs].renameChat(e,s)}muteChat(e){babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls].muteChat(e)}unmuteChat(e){babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls].unmuteChat(e)}pinChat(e){babelHelpers.classPrivateFieldLooseBase(this,Ps)[Ps].pinChat(e)}unpinChat(e){babelHelpers.classPrivateFieldLooseBase(this,Ps)[Ps].unpinChat(e)}readAll(){babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs].readAll()}readDialog(e){babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs].readDialog(e)}unreadDialog(e){babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs].unreadDialog(e)}readMessage(e,s){babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs].readMessage(e,s)}readChatQueuedMessages(e){babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs].readChatQueuedMessages(e)}clearDialogMark(e){babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs].clearDialogMark(e)}leaveChat(e){babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].leaveChat(e)}leaveCollab(e){babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].leaveCollab(e)}kickUserFromChat(e,s){babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].kickUserFromChat(e,s)}kickUserFromCollab(e,s){babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].kickUserFromCollab(e,s)}addToChat(e){return babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].addToChat(e)}joinChat(e){babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].joinChat(e)}addManager(e,s){babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].addManager(e,s)}removeManager(e,s){babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].removeManager(e,s)}setMessagesAutoDeleteDelay(e,s){babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs].setDelay(e,s)}}function fs(){babelHelpers.classPrivateFieldLooseBase(this,vs)[vs]=new X;babelHelpers.classPrivateFieldLooseBase(this,ps)[ps]=new de;babelHelpers.classPrivateFieldLooseBase(this,us)[us]=new ge;babelHelpers.classPrivateFieldLooseBase(this,gs)[gs]=new Ce;babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls]=new we;babelHelpers.classPrivateFieldLooseBase(this,Ps)[Ps]=new Re;babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs]=new $e;babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs]=new as;babelHelpers.classPrivateFieldLooseBase(this,ms)[ms]=new y;babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs]=new cs}e.ChatService=ys})(this.BX.Messenger.v2.Service=this.BX.Messenger.v2.Service||{},BX?.OpenLines?.v2?.Lib??{},BX?.Call?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Service??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.UI?.Uploader??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.Vue3?.Vuex??{},BX??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX??{},BX?.Messenger?.v2?.Application??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Const??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{});
//# sourceMappingURL=chat.bundle.map.js