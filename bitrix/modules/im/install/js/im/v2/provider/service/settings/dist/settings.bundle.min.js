this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,t,s,r,i){"use strict";class n{changeSetting(e,n){r.Logger.warn("SettingsService: changeSetting",e,n);void t.Core.getStore().dispatch("application/settings/set",{[e]:n});const g={data:{userId:t.Core.getUserId(),name:e,value:n}};i.runAction(s.RestMethod.imV2SettingsGeneralUpdate,g).catch((([e])=>{console.error("SettingsService: changeSetting error",e)}))}changeStatus(e){if(!s.UserStatus[e]){return}r.Logger.warn(`SettingsService: changeStatus to ${e}`);void t.Core.getStore().dispatch("users/setStatus",{status:e});void t.Core.getStore().dispatch("application/settings/set",{status:e});const i={STATUS:e};t.Core.getRestClient().callMethod(s.RestMethod.imUserStatusSet,i).catch((e=>{console.error("SettingsService: changeStatus error",e.error())}))}}e.SettingsService=n})(this.BX.Messenger.v2.Service=this.BX.Messenger.v2.Service||{},BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=settings.bundle.map.js