this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,s,a,t,r,l,i,o,d,c,b,n,v){"use strict";var h=babelHelpers.classPrivateFieldLooseKey("store");var p=babelHelpers.classPrivateFieldLooseKey("chatId");var g=babelHelpers.classPrivateFieldLooseKey("userManager");var P=babelHelpers.classPrivateFieldLooseKey("preparedHistoryMessages");var L=babelHelpers.classPrivateFieldLooseKey("preparedUnreadMessages");var F=babelHelpers.classPrivateFieldLooseKey("isLoading");var H=babelHelpers.classPrivateFieldLooseKey("prepareInitialMessages");var u=babelHelpers.classPrivateFieldLooseKey("handleLoadedMessages");var B=babelHelpers.classPrivateFieldLooseKey("updateModels");var M=babelHelpers.classPrivateFieldLooseKey("setDialogInited");var f=babelHelpers.classPrivateFieldLooseKey("prepareTariffRestrictions");var y=babelHelpers.classPrivateFieldLooseKey("getDialog");var m=babelHelpers.classPrivateFieldLooseKey("sendAnalytics");class I{constructor(e){Object.defineProperty(this,m,{value:K});Object.defineProperty(this,y,{value:j});Object.defineProperty(this,f,{value:E});Object.defineProperty(this,M,{value:O});Object.defineProperty(this,B,{value:w});Object.defineProperty(this,u,{value:S});Object.defineProperty(this,H,{value:C});Object.defineProperty(this,h,{writable:true,value:void 0});Object.defineProperty(this,p,{writable:true,value:void 0});Object.defineProperty(this,g,{writable:true,value:void 0});Object.defineProperty(this,P,{writable:true,value:[]});Object.defineProperty(this,L,{writable:true,value:[]});Object.defineProperty(this,F,{writable:true,value:false});babelHelpers.classPrivateFieldLooseBase(this,h)[h]=c.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,g)[g]=new s.UserManager;babelHelpers.classPrivateFieldLooseBase(this,p)[p]=e}async loadUnread(){if(babelHelpers.classPrivateFieldLooseBase(this,F)[F]||!babelHelpers.classPrivateFieldLooseBase(this,y)[y]().hasNextPage){return Promise.resolve(false)}n.Logger.warn("MessageService: loadUnread");const e=babelHelpers.classPrivateFieldLooseBase(this,h)[h].getters["messages/getLastId"](babelHelpers.classPrivateFieldLooseBase(this,p)[p]);if(!e){n.Logger.warn("MessageService: no lastUnreadMessageId, cant load unread");return Promise.resolve(false)}babelHelpers.classPrivateFieldLooseBase(this,F)[F]=true;const s={chatId:babelHelpers.classPrivateFieldLooseBase(this,p)[p],filter:{lastId:e},order:{id:"ASC"},limit:I.MESSAGE_REQUEST_LIMIT};const a=await i.runAction(b.RestMethod.imV2ChatMessageTail,{data:s}).catch((e=>{console.error("MessageService: loadUnread error:",e);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=false}));n.Logger.warn("MessageService: loadUnread result",a);babelHelpers.classPrivateFieldLooseBase(this,L)[L]=a.messages;const t={...a,tariffRestrictions:babelHelpers.classPrivateFieldLooseBase(this,f)[f](a.tariffRestrictions)};await babelHelpers.classPrivateFieldLooseBase(this,B)[B](t);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=false;return Promise.resolve()}async loadHistory(){if(babelHelpers.classPrivateFieldLooseBase(this,F)[F]||!babelHelpers.classPrivateFieldLooseBase(this,y)[y]().hasPrevPage){return Promise.resolve(false)}n.Logger.warn("MessageService: loadHistory");const e=babelHelpers.classPrivateFieldLooseBase(this,h)[h].getters["messages/getFirstId"](babelHelpers.classPrivateFieldLooseBase(this,p)[p]);if(!e){n.Logger.warn("MessageService: no lastHistoryMessageId, cant load unread");return Promise.resolve()}babelHelpers.classPrivateFieldLooseBase(this,F)[F]=true;const s={chatId:babelHelpers.classPrivateFieldLooseBase(this,p)[p],filter:{lastId:e},order:{id:"DESC"},limit:I.MESSAGE_REQUEST_LIMIT};const a=await i.runAction(b.RestMethod.imV2ChatMessageTail,{data:s}).catch((e=>{console.error("MessageService: loadHistory error:",e);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=false}));n.Logger.warn("MessageService: loadHistory result",a);babelHelpers.classPrivateFieldLooseBase(this,P)[P]=a.messages;const t=a.hasNextPage;const r={...a,hasPrevPage:t,hasNextPage:null};await babelHelpers.classPrivateFieldLooseBase(this,B)[B](r);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=false;return Promise.resolve()}hasPreparedHistoryMessages(){return babelHelpers.classPrivateFieldLooseBase(this,P)[P].length>0}drawPreparedHistoryMessages(){if(!this.hasPreparedHistoryMessages()){return Promise.resolve()}return babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("messages/setChatCollection",{messages:babelHelpers.classPrivateFieldLooseBase(this,P)[P]}).then((()=>{babelHelpers.classPrivateFieldLooseBase(this,P)[P]=[];return true}))}hasPreparedUnreadMessages(){return babelHelpers.classPrivateFieldLooseBase(this,L)[L].length>0}drawPreparedUnreadMessages(){if(!this.hasPreparedUnreadMessages()){return Promise.resolve()}return babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("messages/setChatCollection",{messages:babelHelpers.classPrivateFieldLooseBase(this,L)[L]}).then((()=>{babelHelpers.classPrivateFieldLooseBase(this,L)[L]=[];return true}))}async loadFirstPage(){n.Logger.warn("MessageService: loadFirstPage for: ",babelHelpers.classPrivateFieldLooseBase(this,p)[p]);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=true;const e={data:{chatId:babelHelpers.classPrivateFieldLooseBase(this,p)[p],limit:I.MESSAGE_REQUEST_LIMIT,order:{id:"ASC"}}};const s=await i.runAction(b.RestMethod.imV2ChatMessageTail,e).catch((([e])=>{console.error("MessageService: loadFirstPage error:",e);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=false;throw e}));n.Logger.warn("MessageService: loadFirstPage result",s);await babelHelpers.classPrivateFieldLooseBase(this,u)[u](s);await babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("chats/update",{dialogId:babelHelpers.classPrivateFieldLooseBase(this,y)[y]().dialogId,fields:{hasPrevPage:false,hasNextPage:s.hasNextPage}});babelHelpers.classPrivateFieldLooseBase(this,F)[F]=false}loadContext(e){const s={[b.RestMethod.imV2ChatMessageGetContext]:{id:e,range:I.MESSAGE_REQUEST_LIMIT},[b.RestMethod.imV2ChatMessageRead]:{chatId:babelHelpers.classPrivateFieldLooseBase(this,p)[p],ids:[e]}};n.Logger.warn("MessageService: loadContext for: ",e);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=true;return i.callBatch(s).then((e=>{n.Logger.warn("MessageService: loadContext result",e);return babelHelpers.classPrivateFieldLooseBase(this,u)[u](e[b.RestMethod.imV2ChatMessageGetContext])})).catch((e=>{babelHelpers.classPrivateFieldLooseBase(this,m)[m](e);v.Notifier.message.handleLoadContextError(e);console.error("MessageService: loadContext error:",e)})).finally((()=>{babelHelpers.classPrivateFieldLooseBase(this,F)[F]=false}))}async loadContextByChatId(e){const s={data:{commentChatId:e}};const a=await i.runAction(b.RestMethod.imV2ChatMessageGetContext,s).catch((([e])=>{console.error("MessageService: loadContextByChatId error:",e);throw e}));const t=a.commentInfo;const r=t.find((s=>s.chatId===e));const l=r==null?void 0:r.messageId;n.Logger.warn("MessageService: loadContextByChatId result",a);void babelHelpers.classPrivateFieldLooseBase(this,u)[u](a);return l}reloadMessageList(){n.Logger.warn("MessageService: loadChatOnExit for: ",babelHelpers.classPrivateFieldLooseBase(this,p)[p]);let e=0;if(babelHelpers.classPrivateFieldLooseBase(this,y)[y]().chatId<=0){return}if(babelHelpers.classPrivateFieldLooseBase(this,y)[y]().markedId){e=babelHelpers.classPrivateFieldLooseBase(this,y)[y]().markedId}else if(babelHelpers.classPrivateFieldLooseBase(this,y)[y]().savedPositionMessageId){e=babelHelpers.classPrivateFieldLooseBase(this,y)[y]().savedPositionMessageId}const s=babelHelpers.classPrivateFieldLooseBase(this,y)[y]().inited;babelHelpers.classPrivateFieldLooseBase(this,M)[M](false);if(e){void this.loadContext(e).finally((()=>{babelHelpers.classPrivateFieldLooseBase(this,M)[M](true,s)}))}void this.loadInitialMessages().finally((()=>{babelHelpers.classPrivateFieldLooseBase(this,M)[M](true,s)}))}async loadInitialMessages(){n.Logger.warn("MessageService: loadInitialMessages for: ",babelHelpers.classPrivateFieldLooseBase(this,p)[p]);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=true;const e={data:{chatId:babelHelpers.classPrivateFieldLooseBase(this,p)[p],limit:I.MESSAGE_REQUEST_LIMIT}};const s=await i.runAction(b.RestMethod.imV2ChatMessageList,e).catch((([e])=>{console.error("MessageService: loadInitialMessages error:",e);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=false;throw e}));n.Logger.warn("MessageService: loadInitialMessages result",s);s.messages=babelHelpers.classPrivateFieldLooseBase(this,H)[H](s.messages);await babelHelpers.classPrivateFieldLooseBase(this,u)[u](s);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=false;return Promise.resolve()}isLoading(){return babelHelpers.classPrivateFieldLooseBase(this,F)[F]}}function C(e){if(e.length===0){return e}const s=babelHelpers.classPrivateFieldLooseBase(this,y)[y]().lastMessageId;const a=Math.max(...e.map((e=>e.id)));if(a>=s){return e}const t=babelHelpers.classPrivateFieldLooseBase(this,h)[h].getters["messages/getByChatId"](babelHelpers.classPrivateFieldLooseBase(this,p)[p]);const r=t.filter((e=>e.id>a));n.Logger.warn("MessageService: loadInitialMessages: local id is higher than server one",r);return[...e,...r]}function S(e){const{messages:s}=e;const a=babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("messages/setChatCollection",{messages:s,clearCollection:true});const t=babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);return Promise.all([a,t])}function w(e){const{files:s,users:t,usersShort:r,reactions:l,hasPrevPage:i,hasNextPage:o,additionalMessages:d,commentInfo:c,copilot:b,tariffRestrictions:n}=e;const v=babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("chats/update",{dialogId:babelHelpers.classPrivateFieldLooseBase(this,y)[y]().dialogId,fields:{hasPrevPage:i,hasNextPage:o,tariffRestrictions:n}});const p=Promise.all([babelHelpers.classPrivateFieldLooseBase(this,g)[g].setUsersToModel(t),babelHelpers.classPrivateFieldLooseBase(this,g)[g].addUsersToModel(r)]);const P=babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("files/set",s);const L=babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("messages/reactions/set",l);const F=babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("messages/store",d);const H=babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("messages/comments/set",c);const u=new a.CopilotManager;const B=u.handleChatLoadResponse(b);return Promise.all([v,P,p,L,F,H,B])}function O(e,s=true){const a={inited:e,loading:!e};if(e===true&&!s){delete a.inited}babelHelpers.classPrivateFieldLooseBase(this,h)[h].dispatch("chats/update",{dialogId:babelHelpers.classPrivateFieldLooseBase(this,y)[y]().dialogId,fields:a})}function E(e){const s=babelHelpers.classPrivateFieldLooseBase(this,y)[y]().dialogId;const a=babelHelpers.classPrivateFieldLooseBase(this,h)[h].getters["chats/get"](s);if(!a){return e}const{tariffRestrictions:{isHistoryLimitExceeded:t}}=a;if(t===true){return{...e,isHistoryLimitExceeded:true}}return e}function j(){return babelHelpers.classPrivateFieldLooseBase(this,h)[h].getters["chats/getByChatId"](babelHelpers.classPrivateFieldLooseBase(this,p)[p])}function K(e){if(e.code!==b.ErrorCode.message.notFound){return}const s=babelHelpers.classPrivateFieldLooseBase(this,y)[y]();const a=s.dialogId;t.Analytics.getInstance().messageDelete.onNotFoundNotification({dialogId:a})}I.MESSAGE_REQUEST_LIMIT=25;var T=babelHelpers.classPrivateFieldLooseKey("store");var x=babelHelpers.classPrivateFieldLooseKey("restClient");class R{constructor(){Object.defineProperty(this,T,{writable:true,value:void 0});Object.defineProperty(this,x,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,T)[T]=c.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,x)[x]=c.Core.getRestClient()}pinMessage(e,s){n.Logger.warn(`Dialog: PinManager: pin message ${s}`);const a={chatId:e,messageId:s};void babelHelpers.classPrivateFieldLooseBase(this,T)[T].dispatch("messages/pin/add",a);babelHelpers.classPrivateFieldLooseBase(this,x)[x].callMethod(b.RestMethod.imV2ChatMessagePin,{id:s}).catch((e=>{console.error("Dialog: PinManager: error pinning message",e.error());void babelHelpers.classPrivateFieldLooseBase(this,T)[T].dispatch("messages/pin/delete",a)}))}unpinMessage(e,s){n.Logger.warn(`Dialog: PinManager: unpin message ${s}`);const a={chatId:e,messageId:s};void babelHelpers.classPrivateFieldLooseBase(this,T)[T].dispatch("messages/pin/delete",a);babelHelpers.classPrivateFieldLooseBase(this,x)[x].callMethod(b.RestMethod.imV2ChatMessageUnpin,{id:s}).catch((e=>{console.error("Dialog: PinManager: error unpinning message",e.error());void babelHelpers.classPrivateFieldLooseBase(this,T)[T].dispatch("messages/pin/add",a)}))}}var U=babelHelpers.classPrivateFieldLooseKey("updateMessageModel");var A=babelHelpers.classPrivateFieldLooseKey("getMessage");class D{constructor(){Object.defineProperty(this,A,{value:V});Object.defineProperty(this,U,{value:X})}editMessageText(e,s){n.Logger.warn("MessageService: editMessageText",e,s);const a=babelHelpers.classPrivateFieldLooseBase(this,A)[A](e);if(!a){return}babelHelpers.classPrivateFieldLooseBase(this,U)[U](e,s);const t={data:{id:e,fields:{message:s}}};i.runAction(b.RestMethod.imV2ChatMessageUpdate,t).catch((([e])=>{console.error("MessageService: editMessageText error:",e)}))}}function X(e,s){const a=babelHelpers.classPrivateFieldLooseBase(this,A)[A](e);const t=a.viewedByOthers;c.Core.getStore().dispatch("messages/update",{id:e,fields:{text:s,isEdited:t}})}function V(e){return c.Core.getStore().getters["messages/getById"](e)}var _=babelHelpers.classPrivateFieldLooseKey("store");var G=babelHelpers.classPrivateFieldLooseKey("chatId");var N=babelHelpers.classPrivateFieldLooseKey("updateModels");var k=babelHelpers.classPrivateFieldLooseKey("shallowMessageDelete");var Q=babelHelpers.classPrivateFieldLooseKey("canDeleteCompletely");var $=babelHelpers.classPrivateFieldLooseKey("completeMessageDelete");var q=babelHelpers.classPrivateFieldLooseKey("updateRecentForCompleteDelete");var z=babelHelpers.classPrivateFieldLooseKey("updateChatForCompleteDelete");var J=babelHelpers.classPrivateFieldLooseKey("deleteMessageOnServer");var W=babelHelpers.classPrivateFieldLooseKey("deleteTemporaryMessage");var Y=babelHelpers.classPrivateFieldLooseKey("getPreviousMessageId");var Z=babelHelpers.classPrivateFieldLooseKey("sendDeleteEvent");var ee=babelHelpers.classPrivateFieldLooseKey("getChat");class se{constructor(e){Object.defineProperty(this,ee,{value:ve});Object.defineProperty(this,Z,{value:ne});Object.defineProperty(this,Y,{value:be});Object.defineProperty(this,W,{value:ce});Object.defineProperty(this,J,{value:de});Object.defineProperty(this,z,{value:oe});Object.defineProperty(this,q,{value:ie});Object.defineProperty(this,$,{value:le});Object.defineProperty(this,Q,{value:re});Object.defineProperty(this,k,{value:te});Object.defineProperty(this,N,{value:ae});Object.defineProperty(this,_,{writable:true,value:void 0});Object.defineProperty(this,G,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,G)[G]=e;babelHelpers.classPrivateFieldLooseBase(this,_)[_]=c.Core.getStore()}async deleteMessages(e){n.Logger.warn("MessageService: deleteMessage",e);const s=[];e.forEach((e=>{if(l.Utils.text.isUuidV4(e)){babelHelpers.classPrivateFieldLooseBase(this,W)[W](e);return}babelHelpers.classPrivateFieldLooseBase(this,Z)[Z](e);babelHelpers.classPrivateFieldLooseBase(this,N)[N](e);s.push(e)}));if(s.length>0){void babelHelpers.classPrivateFieldLooseBase(this,J)[J](s)}}}function ae(e){const s=babelHelpers.classPrivateFieldLooseBase(this,_)[_].getters["messages/getById"](e);if(babelHelpers.classPrivateFieldLooseBase(this,Q)[Q](s)){void babelHelpers.classPrivateFieldLooseBase(this,$)[$](s);return}void babelHelpers.classPrivateFieldLooseBase(this,k)[k](s)}function te(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("messages/update",{id:e.id,fields:{text:"",isDeleted:true,files:[],attach:[],replyId:0}})}function re(e){const s=[b.ChatType.channel,b.ChatType.openChannel,b.ChatType.generalChannel];const a=[b.ChatType.comment,b.ChatType.lines];const t=babelHelpers.classPrivateFieldLooseBase(this,ee)[ee]();if(s.includes(t.type)){return true}if(a.includes(t.type)){return false}return!e.viewedByOthers}function le(e){const s=babelHelpers.classPrivateFieldLooseBase(this,ee)[ee]();if(e.id===s.lastMessageId){const s=babelHelpers.classPrivateFieldLooseBase(this,Y)[Y](e.id);babelHelpers.classPrivateFieldLooseBase(this,q)[q](s);babelHelpers.classPrivateFieldLooseBase(this,z)[z](s)}babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("messages/delete",{id:e.id})}function ie(e){const s=babelHelpers.classPrivateFieldLooseBase(this,ee)[ee]();if(!e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("recent/delete",{id:s.dialogId});return}babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("recent/update",{id:s.dialogId,fields:{messageId:e}})}function oe(e){const s=babelHelpers.classPrivateFieldLooseBase(this,ee)[ee]();babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("chats/update",{dialogId:s.dialogId,fields:{lastMessageId:e,lastId:e}});babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("chats/clearLastMessageViews",{dialogId:s.dialogId})}function de(e){return i.runAction(b.RestMethod.imV2ChatMessageDelete,{data:{messageIds:e}}).catch((e=>{console.error("MessageService: deleteMessage error:",e)}))}function ce(e){const s=babelHelpers.classPrivateFieldLooseBase(this,ee)[ee]();const a=babelHelpers.classPrivateFieldLooseBase(this,_)[_].getters["recent/get"](s.dialogId);if(a.messageId===e){const a=babelHelpers.classPrivateFieldLooseBase(this,Y)[Y](e);babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("recent/update",{id:s.dialogId,fields:{messageId:a}})}babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("messages/delete",{id:e})}function be(e){var s;const a=babelHelpers.classPrivateFieldLooseBase(this,_)[_].getters["messages/getPreviousMessage"]({messageId:e,chatId:babelHelpers.classPrivateFieldLooseBase(this,G)[G]});return(s=a==null?void 0:a.id)!=null?s:0}function ne(e){r.EventEmitter.emit(b.EventType.dialog.onMessageDeleted,{messageId:e})}function ve(){return babelHelpers.classPrivateFieldLooseBase(this,_)[_].getters["chats/getByChatId"](babelHelpers.classPrivateFieldLooseBase(this,G)[G])}var he=babelHelpers.classPrivateFieldLooseKey("chatId");var pe=babelHelpers.classPrivateFieldLooseKey("store");var ge=babelHelpers.classPrivateFieldLooseKey("restClient");class Pe{constructor(e){Object.defineProperty(this,he,{writable:true,value:void 0});Object.defineProperty(this,pe,{writable:true,value:void 0});Object.defineProperty(this,ge,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,he)[he]=e;babelHelpers.classPrivateFieldLooseBase(this,pe)[pe]=c.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,ge)[ge]=c.Core.getRestClient()}markMessage(e){n.Logger.warn("MessageService: markMessage",e);const{dialogId:s}=babelHelpers.classPrivateFieldLooseBase(this,pe)[pe].getters["chats/getByChatId"](babelHelpers.classPrivateFieldLooseBase(this,he)[he]);void babelHelpers.classPrivateFieldLooseBase(this,pe)[pe].dispatch("recent/unread",{id:s,action:true});void babelHelpers.classPrivateFieldLooseBase(this,pe)[pe].dispatch("chats/update",{dialogId:s,fields:{markedId:e}});babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].callMethod(b.RestMethod.imV2ChatMessageMark,{dialogId:s,id:e}).catch((e=>{console.error("MessageService: error marking message",e.error())}))}}var Le=babelHelpers.classPrivateFieldLooseKey("chatId");var Fe=babelHelpers.classPrivateFieldLooseKey("store");var He=babelHelpers.classPrivateFieldLooseKey("restClient");class ue{constructor(e){Object.defineProperty(this,Le,{writable:true,value:void 0});Object.defineProperty(this,Fe,{writable:true,value:void 0});Object.defineProperty(this,He,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Le)[Le]=e;babelHelpers.classPrivateFieldLooseBase(this,Fe)[Fe]=c.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,He)[He]=c.Core.getRestClient()}addMessageToFavorite(e){n.Logger.warn("MessageService: addMessageToFavorite",e);babelHelpers.classPrivateFieldLooseBase(this,He)[He].callMethod(b.RestMethod.imChatFavoriteAdd,{MESSAGE_ID:e}).catch((e=>{console.error("MessageService: error adding message to favorite",e.error())}));v.Notifier.message.onAddToFavoriteComplete()}removeMessageFromFavorite(e){n.Logger.warn("MessageService: removeMessageFromFavorite",e);void babelHelpers.classPrivateFieldLooseBase(this,Fe)[Fe].dispatch("sidebar/favorites/deleteByMessageId",{chatId:babelHelpers.classPrivateFieldLooseBase(this,Le)[Le],messageId:e});babelHelpers.classPrivateFieldLooseBase(this,He)[He].callMethod(b.RestMethod.imChatFavoriteDelete,{MESSAGE_ID:e}).catch((e=>{console.error("MessageService: error removing message from favorite",e.error())}))}}var Be=babelHelpers.classPrivateFieldLooseKey("loadService");var Me=babelHelpers.classPrivateFieldLooseKey("pinService");var fe=babelHelpers.classPrivateFieldLooseKey("editService");var ye=babelHelpers.classPrivateFieldLooseKey("deleteService");var me=babelHelpers.classPrivateFieldLooseKey("markService");var Ie=babelHelpers.classPrivateFieldLooseKey("favoriteService");var Ce=babelHelpers.classPrivateFieldLooseKey("initServices");class Se{static getMessageRequestLimit(){return I.MESSAGE_REQUEST_LIMIT}constructor(e){Object.defineProperty(this,Ce,{value:we});Object.defineProperty(this,Be,{writable:true,value:void 0});Object.defineProperty(this,Me,{writable:true,value:void 0});Object.defineProperty(this,fe,{writable:true,value:void 0});Object.defineProperty(this,ye,{writable:true,value:void 0});Object.defineProperty(this,me,{writable:true,value:void 0});Object.defineProperty(this,Ie,{writable:true,value:void 0});const{chatId:s}=e;babelHelpers.classPrivateFieldLooseBase(this,Ce)[Ce](s)}loadUnread(){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].loadUnread()}loadHistory(){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].loadHistory()}hasPreparedHistoryMessages(){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].hasPreparedHistoryMessages()}drawPreparedHistoryMessages(){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].drawPreparedHistoryMessages()}hasPreparedUnreadMessages(){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].hasPreparedUnreadMessages()}drawPreparedUnreadMessages(){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].drawPreparedUnreadMessages()}isLoading(){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].isLoading()}loadContext(e){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].loadContext(e)}loadContextByChatId(e){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].loadContextByChatId(e)}loadFirstPage(){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].loadFirstPage()}reloadMessageList(){babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].reloadMessageList()}loadInitialMessages(){return babelHelpers.classPrivateFieldLooseBase(this,Be)[Be].loadInitialMessages()}pinMessage(e,s){babelHelpers.classPrivateFieldLooseBase(this,Me)[Me].pinMessage(e,s)}unpinMessage(e,s){babelHelpers.classPrivateFieldLooseBase(this,Me)[Me].unpinMessage(e,s)}markMessage(e){babelHelpers.classPrivateFieldLooseBase(this,me)[me].markMessage(e)}addMessageToFavorite(e){babelHelpers.classPrivateFieldLooseBase(this,Ie)[Ie].addMessageToFavorite(e)}removeMessageFromFavorite(e){babelHelpers.classPrivateFieldLooseBase(this,Ie)[Ie].removeMessageFromFavorite(e)}editMessageText(e,s){babelHelpers.classPrivateFieldLooseBase(this,fe)[fe].editMessageText(e,s)}deleteMessages(e){babelHelpers.classPrivateFieldLooseBase(this,ye)[ye].deleteMessages(e)}}function we(e){babelHelpers.classPrivateFieldLooseBase(this,Be)[Be]=new I(e);babelHelpers.classPrivateFieldLooseBase(this,fe)[fe]=new D;babelHelpers.classPrivateFieldLooseBase(this,ye)[ye]=new se(e);babelHelpers.classPrivateFieldLooseBase(this,Me)[Me]=new R;babelHelpers.classPrivateFieldLooseBase(this,me)[me]=new Pe(e);babelHelpers.classPrivateFieldLooseBase(this,Ie)[Ie]=new ue(e)}e.MessageService=Se})(this.BX.Messenger.v2.Service=this.BX.Messenger.v2.Service||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Vue3.Vuex,BX,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=message.bundle.map.js