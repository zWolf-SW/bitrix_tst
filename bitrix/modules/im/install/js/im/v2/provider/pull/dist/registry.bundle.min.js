this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Provider=this.BX.Messenger.v2.Provider||{};(function(e,s,a,t,l,i,r,o,d,n,c,h,g,p,b,u,v,P,I,f,L,C,H,F,m,M,B,y,w,U){"use strict";var S=babelHelpers.classPrivateFieldLooseKey("store");class O{constructor(){Object.defineProperty(this,S,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,S)[S]=U.Core.getStore()}handleBotAdd(e){M.Logger.warn("BotPullHandler: handleBotAdd",e);const{user:s}=e;void(new P.UserManager).addUsersToModel(s)}handleBotUpdate(e){const{user:s}=e;babelHelpers.classPrivateFieldLooseBase(this,S)[S].dispatch("users/update",{id:s.id,fields:s})}}var A=babelHelpers.classPrivateFieldLooseKey("store");var D=babelHelpers.classPrivateFieldLooseKey("stopWriting");var R=babelHelpers.classPrivateFieldLooseKey("closeChannelComments");var k=babelHelpers.classPrivateFieldLooseKey("prepareDialogUpdateFields");class T{constructor(){Object.defineProperty(this,k,{value:K});Object.defineProperty(this,R,{value:N});Object.defineProperty(this,D,{value:j});Object.defineProperty(this,A,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,A)[A]=U.Core.getStore()}deleteMessage(e){babelHelpers.classPrivateFieldLooseBase(this,D)[D](e.dialogId,e.senderId);void babelHelpers.classPrivateFieldLooseBase(this,A)[A].dispatch("messages/update",{id:e.id,fields:{text:"",isDeleted:true,files:[],attach:[],replyId:0}})}deleteMessageComplete(e){babelHelpers.classPrivateFieldLooseBase(this,D)[D](e.dialogId,e.senderId);const s=babelHelpers.classPrivateFieldLooseBase(this,A)[A].getters["messages/comments/areOpenedForChannelPost"](e.id);if(s){babelHelpers.classPrivateFieldLooseBase(this,R)[R](e)}void babelHelpers.classPrivateFieldLooseBase(this,A)[A].dispatch("messages/delete",{id:e.id});const a=babelHelpers.classPrivateFieldLooseBase(this,k)[k](e);void babelHelpers.classPrivateFieldLooseBase(this,A)[A].dispatch("chats/update",{dialogId:e.dialogId,fields:a})}}function j(e,s){r.InputActionListener.getInstance().stopUserActionsInChat({dialogId:e,userId:s})}function N(e){t.EventEmitter.emit(y.EventType.dialog.closeComments);d.Analytics.getInstance().messageDelete.onDeletedPostNotification({dialogId:e.dialogId,messageId:e.id});n.Notifier.message.onNotFoundError()}function K(e){const s={counter:e.counter};const a=Boolean(e.newLastMessage);if(a){s.lastMessageId=e.newLastMessage.id;s.lastMessageViews=e.lastMessageViews;void babelHelpers.classPrivateFieldLooseBase(this,A)[A].dispatch("messages/store",e.newLastMessage)}return s}var X=babelHelpers.classPrivateFieldLooseKey("store");var E=babelHelpers.classPrivateFieldLooseKey("messageViews");var V=babelHelpers.classPrivateFieldLooseKey("messageDeleteManager");var _=babelHelpers.classPrivateFieldLooseKey("setMessageChat");var x=babelHelpers.classPrivateFieldLooseKey("setUsers");var G=babelHelpers.classPrivateFieldLooseKey("setFiles");var W=babelHelpers.classPrivateFieldLooseKey("setAdditionalEntities");var Y=babelHelpers.classPrivateFieldLooseKey("setCommentInfo");var q=babelHelpers.classPrivateFieldLooseKey("handleAddingMessageToModel");var z=babelHelpers.classPrivateFieldLooseKey("addMessageToModel");var J=babelHelpers.classPrivateFieldLooseKey("updateDialog");var Q=babelHelpers.classPrivateFieldLooseKey("updateMessageViewedByOthers");var Z=babelHelpers.classPrivateFieldLooseKey("updateChatLastMessageViews");var $=babelHelpers.classPrivateFieldLooseKey("checkMessageViewsRegistry");var ee=babelHelpers.classPrivateFieldLooseKey("updateMessageViewsRegistry");var se=babelHelpers.classPrivateFieldLooseKey("sendScrollEvent");var ae=babelHelpers.classPrivateFieldLooseKey("getDialog");var te=babelHelpers.classPrivateFieldLooseKey("setCopilotRole");var le=babelHelpers.classPrivateFieldLooseKey("setMessagesAutoDeleteConfig");var ie=babelHelpers.classPrivateFieldLooseKey("prepareDeleteMessageParams");class re{constructor(){Object.defineProperty(this,ie,{value:Fe});Object.defineProperty(this,le,{value:He});Object.defineProperty(this,te,{value:Ce});Object.defineProperty(this,ae,{value:Le});Object.defineProperty(this,se,{value:fe});Object.defineProperty(this,ee,{value:Ie});Object.defineProperty(this,$,{value:Pe});Object.defineProperty(this,Z,{value:ve});Object.defineProperty(this,Q,{value:ue});Object.defineProperty(this,J,{value:be});Object.defineProperty(this,z,{value:pe});Object.defineProperty(this,q,{value:ge});Object.defineProperty(this,Y,{value:he});Object.defineProperty(this,W,{value:ce});Object.defineProperty(this,G,{value:ne});Object.defineProperty(this,x,{value:de});Object.defineProperty(this,_,{value:oe});Object.defineProperty(this,X,{writable:true,value:void 0});Object.defineProperty(this,E,{writable:true,value:{}});Object.defineProperty(this,V,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,X)[X]=U.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,V)[V]=new T}handleMessageAdd(e){M.Logger.warn("MessagePullHandler: handleMessageAdd",e);babelHelpers.classPrivateFieldLooseBase(this,_)[_](e);babelHelpers.classPrivateFieldLooseBase(this,x)[x](e);babelHelpers.classPrivateFieldLooseBase(this,G)[G](e);babelHelpers.classPrivateFieldLooseBase(this,W)[W](e);babelHelpers.classPrivateFieldLooseBase(this,Y)[Y](e);babelHelpers.classPrivateFieldLooseBase(this,te)[te](e);babelHelpers.classPrivateFieldLooseBase(this,le)[le](e);const s=babelHelpers.classPrivateFieldLooseBase(this,X)[X].getters["messages/isInChatCollection"]({messageId:e.message.templateId});const a=babelHelpers.classPrivateFieldLooseBase(this,X)[X].getters["messages/isInChatCollection"]({messageId:e.message.id});if(a){M.Logger.warn("New message pull handler: we already have this message",e.message);void babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/update",{id:e.message.id,fields:{...e.message,error:false}});babelHelpers.classPrivateFieldLooseBase(this,se)[se](e.chatId)}else if(!a&&s){M.Logger.warn("New message pull handler: we already have the TEMPORARY message",e.message);void babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/updateWithId",{id:e.message.templateId,fields:{...e.message,error:false}})}else if(!a&&!s){M.Logger.warn("New message pull handler: we dont have this message",e.message);babelHelpers.classPrivateFieldLooseBase(this,q)[q](e)}const t=babelHelpers.classPrivateFieldLooseBase(this,X)[X].getters["messages/hasLoadingMessageByMessageId"](e.message.templateId);if(t){void babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/delete",{id:e.message.templateId})}r.InputActionListener.getInstance().stopUserActionsInChat({userId:e.message.senderId,dialogId:e.dialogId});babelHelpers.classPrivateFieldLooseBase(this,J)[J](e)}handleMessageUpdate(e){M.Logger.warn("MessagePullHandler: handleMessageUpdate",e);r.InputActionListener.getInstance().stopUserActionsInChat({userId:e.senderId,dialogId:e.dialogId});babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/update",{id:e.id,fields:{text:e.text,params:e.params}});babelHelpers.classPrivateFieldLooseBase(this,se)[se](e.chatId)}handleMessageDeleteV2(e){M.Logger.warn("MessageDeletePullHandler: handleMultipleMessageDelete",e);const s=e.messages;s.forEach((s=>{if(s.completelyDeleted){const a=babelHelpers.classPrivateFieldLooseBase(this,ie)[ie](e,true,s);babelHelpers.classPrivateFieldLooseBase(this,V)[V].deleteMessageComplete(a);return}const a=babelHelpers.classPrivateFieldLooseBase(this,ie)[ie](e,false,s);babelHelpers.classPrivateFieldLooseBase(this,V)[V].deleteMessage(a)}))}handleMessageDelete(e){M.Logger.warn("MessageDeletePullHandler: handleMessageDelete",e);const s=babelHelpers.classPrivateFieldLooseBase(this,ie)[ie](e);babelHelpers.classPrivateFieldLooseBase(this,V)[V].deleteMessage(s)}handleMessageDeleteComplete(e){M.Logger.warn("MessageDeletePullHandler: handleMessageDeleteComplete",e);const s=babelHelpers.classPrivateFieldLooseBase(this,ie)[ie](e,true);babelHelpers.classPrivateFieldLooseBase(this,V)[V].deleteMessageComplete(s)}handleAddReaction(e){M.Logger.warn("MessagePullHandler: handleAddReaction",e);const{actualReactions:{reaction:s,usersShort:a},userId:t,reaction:l}=e;if(U.Core.getUserId()===t){s.ownReactions=[l]}const i=new P.UserManager;i.addUsersToModel(a);babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/reactions/set",[s])}handleDeleteReaction(e){M.Logger.warn("MessagePullHandler: handleDeleteReaction",e);const{actualReactions:{reaction:s}}=e;babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/reactions/set",[s])}handleMessageParamsUpdate(e){M.Logger.warn("MessagePullHandler: handleMessageParamsUpdate",e);babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/update",{id:e.id,chatId:e.chatId,fields:{params:e.params}})}handleReadMessage(e,a){M.Logger.warn("MessagePullHandler: handleReadMessage",e);const t=s.UuidManager.getInstance();if(t.hasActionUuid(a.action_uuid)){M.Logger.warn("MessagePullHandler: handleReadMessage: we have this uuid, skip");t.removeActionUuid(a.action_uuid);return}babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/readMessages",{chatId:e.chatId,messageIds:e.viewedMessages}).then((()=>{babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("chats/update",{dialogId:e.dialogId,fields:{counter:e.counter,lastId:e.lastId}})})).catch((e=>{console.error("MessagePullHandler: error handling readMessage",e)}))}handleReadMessageOpponent(e){if(e.userId===U.Core.getUserId()){return}M.Logger.warn("MessagePullHandler: handleReadMessageOpponent",e);babelHelpers.classPrivateFieldLooseBase(this,Q)[Q](e);babelHelpers.classPrivateFieldLooseBase(this,Z)[Z](e)}handlePinAdd(e){M.Logger.warn("MessagePullHandler: handlePinAdd",e);babelHelpers.classPrivateFieldLooseBase(this,G)[G](e);babelHelpers.classPrivateFieldLooseBase(this,x)[x](e);babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/store",e.additionalMessages);babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/pin/add",{chatId:e.pin.chatId,messageId:e.pin.messageId});if(U.Core.getUserId()!==e.pin.authorId);}handlePinDelete(e){M.Logger.warn("MessagePullHandler: handlePinDelete",e);babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/pin/delete",{chatId:e.chatId,messageId:e.messageId})}}function oe(e){var s,a,t;const l=(s=e.chat)==null?void 0:s[e.chatId];if(!l){return}const i={...e.chat[e.chatId],dialogId:e.dialogId};const r=Boolean(babelHelpers.classPrivateFieldLooseBase(this,ae)[ae](e.dialogId));const o=!e.notify||((a=e.message)==null?void 0:(t=a.params)==null?void 0:t.NOTIFY)==="N";if(!r&&!o&&!i.role){i.role=y.UserRole.member}babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("chats/set",i)}function de(e){if(!e.users){return}const s=new P.UserManager;s.setUsersToModel(Object.values(e.users))}function ne(e){if(!e.files){return}const s=Object.values(e.files);s.forEach((e=>{void babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("files/set",e)}))}function ce(e){if(!e.message.additionalEntities){return}const{additionalMessages:s,messages:a,files:t,users:l}=e.message.additionalEntities;const i=[...a,...s];babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/store",i);babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("files/set",t);babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("users/set",l)}function he(e){var s;const a=(s=e.chat)==null?void 0:s[e.chatId];if(!a||a.type!==y.ChatType.comment){return}babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/comments/set",{messageId:a.parent_message_id,chatId:e.chatId,messageCount:a.message_count});babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/comments/setLastUser",{messageId:a.parent_message_id,newUserId:e.message.senderId})}function ge(e){const s=babelHelpers.classPrivateFieldLooseBase(this,ae)[ae](e.dialogId,true);if(s.hasNextPage){babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/store",e.message);return}const t=babelHelpers.classPrivateFieldLooseBase(this,X)[X].getters["application/isChatOpen"](e.dialogId);const l=babelHelpers.classPrivateFieldLooseBase(this,X)[X].getters["messages/getChatUnreadMessages"](e.chatId);const i=a.MessageService.getMessageRequestLimit()*5;if(s.inited&&!t&&l.length>i){void babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/store",e.message);const s=new a.MessageService({chatId:e.chatId});s.reloadMessageList();return}babelHelpers.classPrivateFieldLooseBase(this,z)[z](e.message);babelHelpers.classPrivateFieldLooseBase(this,se)[se](e.chatId)}function pe(e){const s={...e};if(e.senderId===U.Core.getUserId()){s.unread=false}else{s.unread=true;s.viewed=false}babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/setChatCollection",{messages:[s]})}function be(e){const s=babelHelpers.classPrivateFieldLooseBase(this,ae)[ae](e.dialogId,true);const a={};if(e.message.id>s.lastMessageId){a.lastMessageId=e.message.id}if(e.message.senderId===U.Core.getUserId()&&e.message.id>s.lastReadId){a.lastId=e.message.id}a.counter=e.counter;babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("chats/update",{dialogId:e.dialogId,fields:a});babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("chats/clearLastMessageViews",{dialogId:e.dialogId})}function ue(e){babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("messages/setViewedByOthers",{ids:e.viewedMessages})}function ve(e){const s=babelHelpers.classPrivateFieldLooseBase(this,ae)[ae](e.dialogId);if(!s){return}const a=e.viewedMessages.includes(s.lastMessageId);if(!a){return}if(babelHelpers.classPrivateFieldLooseBase(this,$)[$](e.userId,s.lastMessageId)){return}const t=Boolean(s.lastMessageViews.firstViewer);if(t){babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("chats/incrementLastMessageViews",{dialogId:e.dialogId});babelHelpers.classPrivateFieldLooseBase(this,ee)[ee](e.userId,s.lastMessageId);return}babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("chats/setLastMessageViews",{dialogId:e.dialogId,fields:{userId:e.userId,userName:e.userName,date:e.date,messageId:s.lastMessageId}});babelHelpers.classPrivateFieldLooseBase(this,ee)[ee](e.userId,s.lastMessageId)}function Pe(e,s){var a;return Boolean((a=babelHelpers.classPrivateFieldLooseBase(this,E)[E][s])==null?void 0:a.has(e))}function Ie(e,s){if(!babelHelpers.classPrivateFieldLooseBase(this,E)[E][s]){babelHelpers.classPrivateFieldLooseBase(this,E)[E][s]=new Set}babelHelpers.classPrivateFieldLooseBase(this,E)[E][s].add(e)}function fe(e){t.EventEmitter.emit(y.EventType.dialog.scrollToBottom,{chatId:e,threshold:y.DialogScrollThreshold.nearTheBottom})}function Le(e,s=false){return babelHelpers.classPrivateFieldLooseBase(this,X)[X].getters["chats/get"](e,s)}function Ce(e){if(!e.copilot){return}const s=new i.CopilotManager;void s.handleMessageAdd(e.copilot)}function He(e){const{messagesAutoDeleteConfigs:s}=e;void babelHelpers.classPrivateFieldLooseBase(this,X)[X].dispatch("chats/autoDelete/set",s)}function Fe(e,s=false,a=null){const t={id:a?a.id:e.id,senderId:a?a.senderId:e.senderId,dialogId:e.dialogId};if(s){return{...t,newLastMessage:e.newLastMessage,lastMessageViews:e.lastMessageViews,counter:e.counter}}return t}var me=babelHelpers.classPrivateFieldLooseKey("store");var Me=babelHelpers.classPrivateFieldLooseKey("updateChatUsers");class Be{constructor(){Object.defineProperty(this,Me,{value:ye});Object.defineProperty(this,me,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,me)[me]=U.Core.getStore()}handleChatOwner(e){M.Logger.warn("ChatPullHandler: handleChatOwner",e);babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{ownerId:e.userId}})}handleChatManagers(e){M.Logger.warn("ChatPullHandler: handleChatManagers",e);babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{managerList:e.list}});const s=babelHelpers.classPrivateFieldLooseBase(this,me)[me].getters["chats/get"](e.dialogId);if(!s){return}const a=e.list.includes(U.Core.getUserId());if(s.role===y.UserRole.member&&a){babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{role:y.UserRole.manager}})}if(s.role===y.UserRole.manager&&!a){babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{role:y.UserRole.member}})}}handleChatUserAdd(e){M.Logger.warn("ChatPullHandler: handleChatUserAdd",e);const s=U.Core.getUserId();if(e.newUsers.includes(s)){babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{role:y.UserRole.member}})}babelHelpers.classPrivateFieldLooseBase(this,Me)[Me](e)}handleChatUserLeave(e){M.Logger.warn("ChatPullHandler: handleChatUserLeave",e);const s=e.userId===U.Core.getUserId();if(s){babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{inited:false}});babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("messages/clearChatCollection",{chatId:e.chatId})}const a=v.ChannelManager.isChannel(e.dialogId);if(a){void babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("counters/deleteForChannel",{channelChatId:e.chatId})}const t=babelHelpers.classPrivateFieldLooseBase(this,me)[me].getters["application/isChatOpen"](e.dialogId);if(s&&t){g.Messenger.openChat()}const l=C.CallManager.getInstance().getCurrentCallDialogId()===e.dialogId;if(s&&l){C.CallManager.getInstance().leaveCurrentCall()}if(s){C.CallManager.getInstance().deleteRecentCall(e.dialogId)}babelHelpers.classPrivateFieldLooseBase(this,Me)[Me](e)}handleInputActionNotify(e){M.Logger.warn("ChatPullHandler: handleInputActionNotify",e);r.InputActionListener.getInstance().startAction(e);babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("users/update",{id:e.userId,fields:{lastActivityDate:new Date}})}handleChatUnread(e){M.Logger.warn("ChatPullHandler: handleChatUnread",e);let s=0;if(e.active===true){s=e.markedId}babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{markedId:s}})}handleChatMuteNotify(e){if(e.muted){babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/mute",{dialogId:e.dialogId});return}babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/unmute",{dialogId:e.dialogId})}handleChatRename(e){const s=babelHelpers.classPrivateFieldLooseBase(this,me)[me].getters["chats/getByChatId"](e.chatId);if(!s){return}babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:s.dialogId,fields:{name:e.name}})}handleChatAvatar(e){const s=babelHelpers.classPrivateFieldLooseBase(this,me)[me].getters["chats/getByChatId"](e.chatId);if(!s){return}babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:s.dialogId,fields:{avatar:e.avatar}})}handleReadAllChats(){M.Logger.warn("ChatPullHandler: handleReadAllChats");babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/clearCounters");babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("recent/clearUnread")}handleChatConvert(e){M.Logger.warn("ChatPullHandler: handleChatConvert",e);const{dialogId:s,oldType:a,newType:t,newPermissions:l,newTypeParams:i}=e;const r={type:t,permissions:l};if([t,a].includes(y.ChatType.collab)){r.diskFolderId=0}babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:s,fields:r});const o=babelHelpers.classPrivateFieldLooseBase(this,me)[me].getters["chats/get"](s);if(t===y.ChatType.collab&&(o==null?void 0:o.chatId)>0){babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/collabs/set",{chatId:o.chatId,collabInfo:i.collabInfo})}}handleChatCopilotRoleUpdate(e){if(!e.copilotRole){return}const s=new i.CopilotManager;void s.handleRoleUpdate(e.copilotRole)}handleChatUpdate(e){void babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.chat.dialogId,fields:{role:o.getChatRoleForUser(e.chat),...e.chat}})}handleChatFieldsUpdate(e){void babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{...e}})}handleChatDelete(e){M.Logger.warn("ChatPullHandler: handleChatDelete",e);const s=U.Core.getUserId();if(e.userId===s){return}void babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{inited:false}});void babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("recent/delete",{id:e.dialogId});const a=e.type===y.ChatType.comment;if(a){void babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("counters/deleteForChannel",{channelChatId:e.parentChatId,commentChatId:e.chatId})}const t=v.ChannelManager.isChannel(e.dialogId);if(t){void babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("counters/deleteForChannel",{channelChatId:e.chatId})}void babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("messages/clearChatCollection",{chatId:e.chatId});const i=babelHelpers.classPrivateFieldLooseBase(this,me)[me].getters["application/isChatOpen"](e.dialogId);if(i){d.Analytics.getInstance().chatDelete.onChatDeletedNotification(e.dialogId);n.Notifier.chat.onNotFoundError();void l.LayoutManager.getInstance().clearCurrentLayoutEntityId();void l.LayoutManager.getInstance().deleteLastOpenedElementById(e.dialogId)}const r=C.CallManager.getInstance().getCurrentCallDialogId()===e.dialogId;if(r){C.CallManager.getInstance().leaveCurrentCall()}}handleMessagesAutoDeleteDelayChanged(e){M.Logger.warn("ChatPullHandler: handleMessagesAutoDeleteDelayChanged",e);const{chatId:s,delay:a}=e;void babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/autoDelete/set",{chatId:s,delay:a})}}function ye(e){if(e.users){const s=new P.UserManager;s.setUsersToModel(Object.values(e.users))}babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e.dialogId,fields:{userCounter:e.userCount,extranet:e.chatExtranet,containsCollaber:e.containsCollaber}})}class we{handleChangeTariff(e){var s;M.Logger.warn("TariffPullHandler: handleChangeTariff",e);const{tariffRestrictions:a}=e;if(!a){return}if(((s=a.fullChatHistory)==null?void 0:s.isAvailable)===true){return}void U.Core.getStore().dispatch("application/tariffRestrictions/set",a)}}var Ue=babelHelpers.classPrivateFieldLooseKey("store");class Se{constructor(){Object.defineProperty(this,Ue,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue]=U.Core.getStore()}handleUserInvite(e){if(e.invited){const s=new P.UserManager;s.setUsersToModel([e.user]);return}babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue].dispatch("users/update",{id:e.userId,fields:e.user})}handleUserShowInRecent(e){const s=e.items.map((e=>e.user));const a=new P.UserManager;a.setUsersToModel(s)}}class Oe{handleDesktopOnline(e){M.Logger.warn("DesktopPullHandler: handleDesktopOnline",e);const s=L.DesktopManager.getInstance();s.setDesktopActive(true);s.setDesktopVersion(e.version);h.CounterManager.getInstance().removeBrowserTitleCounter()}handleDesktopOffline(){M.Logger.warn("DesktopPullHandler: handleDesktopOffline");L.DesktopManager.getInstance().setDesktopActive(false);L.DesktopManager.getInstance().setDesktopVersion(0)}}class Ae{handleSettingsUpdate(e){M.Logger.warn("SettingsPullHandler: handleSettingsUpdate",e);Object.entries(e).forEach((([e,s])=>{U.Core.getStore().dispatch("application/settings/set",{[e]:s})}))}}class De{handleCommentSubscribe(e){const{messageId:s,subscribe:a}=e;M.Logger.warn("CommentsPullHandler: handleCommentSubscribe",e);if(a){U.Core.getStore().dispatch("messages/comments/subscribe",s);return}U.Core.getStore().dispatch("messages/comments/unsubscribe",s)}handleReadAllChannelComments(e){U.Core.getStore().dispatch("counters/readAllChannelComments",e.chatId)}}class Re{handleApplicationOpenChat(e){M.Logger.warn("ApplicationPullHandler: handleOpenChat",e);const s=document.hasFocus();if(!s){return}if(L.DesktopManager.isDesktop()){if(!L.DesktopManager.isChatWindow()){return}void g.Messenger.openChat(e.dialogId);return}if(!p.MessengerSlider.getInstance().isFocused()){return}void g.Messenger.openChat(e.dialogId)}}class ke{handleUpdateCollabEntityCounter(e){M.Logger.warn("CollabPullHandler: handleUpdateCollabEntityCounter",e);const{chatId:s,counter:a,entity:t}=e;void U.Core.getStore().dispatch("chats/collabs/setCounter",{chatId:s,entity:t,counter:a})}handleUpdateCollabGuestCount(e){M.Logger.warn("CollabPullHandler: handleUpdateCollabGuestCount",e);const{chatId:s,guestCount:a}=e;void U.Core.getStore().dispatch("chats/collabs/setGuestCount",{chatId:s,guestCount:a})}}var Te=babelHelpers.classPrivateFieldLooseKey("messageHandler");var je=babelHelpers.classPrivateFieldLooseKey("chatHandler");var Ne=babelHelpers.classPrivateFieldLooseKey("userHandler");var Ke=babelHelpers.classPrivateFieldLooseKey("desktopHandler");var Xe=babelHelpers.classPrivateFieldLooseKey("settingsHandler");var Ee=babelHelpers.classPrivateFieldLooseKey("commentsHandler");var Ve=babelHelpers.classPrivateFieldLooseKey("tariffPullHandler");var _e=babelHelpers.classPrivateFieldLooseKey("applicationPullHandler");var xe=babelHelpers.classPrivateFieldLooseKey("collabPullHandler");var Ge=babelHelpers.classPrivateFieldLooseKey("botPullHandler");class We{constructor(){Object.defineProperty(this,Te,{writable:true,value:void 0});Object.defineProperty(this,je,{writable:true,value:void 0});Object.defineProperty(this,Ne,{writable:true,value:void 0});Object.defineProperty(this,Ke,{writable:true,value:void 0});Object.defineProperty(this,Xe,{writable:true,value:void 0});Object.defineProperty(this,Ee,{writable:true,value:void 0});Object.defineProperty(this,Ve,{writable:true,value:void 0});Object.defineProperty(this,_e,{writable:true,value:void 0});Object.defineProperty(this,xe,{writable:true,value:void 0});Object.defineProperty(this,Ge,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Te)[Te]=new re;babelHelpers.classPrivateFieldLooseBase(this,je)[je]=new Be;babelHelpers.classPrivateFieldLooseBase(this,Ne)[Ne]=new Se;babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke]=new Oe;babelHelpers.classPrivateFieldLooseBase(this,Xe)[Xe]=new Ae;babelHelpers.classPrivateFieldLooseBase(this,Ee)[Ee]=new De;babelHelpers.classPrivateFieldLooseBase(this,Ve)[Ve]=new we;babelHelpers.classPrivateFieldLooseBase(this,_e)[_e]=new Re;babelHelpers.classPrivateFieldLooseBase(this,xe)[xe]=new ke;babelHelpers.classPrivateFieldLooseBase(this,Ge)[Ge]=new O}getModuleId(){return"im"}handleMessage(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleMessageAdd(e)}handleMessageChat(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleMessageAdd(e)}handleMessageUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleMessageUpdate(e)}handleMessageDeleteV2(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleMessageDeleteV2(e)}handleMessageDelete(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleMessageDelete(e)}handleMessageDeleteComplete(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleMessageDeleteComplete(e)}handleAddReaction(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleAddReaction(e)}handleDeleteReaction(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleDeleteReaction(e)}handleMessageParamsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleMessageParamsUpdate(e)}handleReadMessage(e,s){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleReadMessage(e,s)}handleReadMessageChat(e,s){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleReadMessage(e,s)}handleReadMessageOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleReadMessageOpponent(e)}handleReadMessageChatOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handleReadMessageOpponent(e)}handlePinAdd(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handlePinAdd(e)}handlePinDelete(e){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te].handlePinDelete(e)}handleChatOwner(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatOwner(e)}handleChatManagers(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatManagers(e)}handleChatUserAdd(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatUserAdd(e)}handleChatUserLeave(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatUserLeave(e)}handleInputActionNotify(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleInputActionNotify(e)}handleChatUnread(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatUnread(e)}handleReadAllChats(){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleReadAllChats()}handleChatMuteNotify(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatMuteNotify(e)}handleChatRename(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatRename(e)}handleChatAvatar(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatAvatar(e)}handleChatUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatUpdate(e)}handleChatFieldsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatFieldsUpdate(e)}handleChatDelete(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatDelete(e)}handleChatConvert(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatConvert(e)}handleChatCopilotRoleUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleChatCopilotRoleUpdate(e)}handleMessagesAutoDeleteDelayChanged(e){babelHelpers.classPrivateFieldLooseBase(this,je)[je].handleMessagesAutoDeleteDelayChanged(e)}handleUserInvite(e){babelHelpers.classPrivateFieldLooseBase(this,Ne)[Ne].handleUserInvite(e)}handleUserShowInRecent(e){babelHelpers.classPrivateFieldLooseBase(this,Ne)[Ne].handleUserShowInRecent(e)}handleDesktopOnline(e){babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke].handleDesktopOnline(e)}handleDesktopOffline(){babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke].handleDesktopOffline()}handleSettingsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,Xe)[Xe].handleSettingsUpdate(e)}handleCommentSubscribe(e){babelHelpers.classPrivateFieldLooseBase(this,Ee)[Ee].handleCommentSubscribe(e)}handleReadAllChannelComments(e){babelHelpers.classPrivateFieldLooseBase(this,Ee)[Ee].handleReadAllChannelComments(e)}handleChangeTariff(e){babelHelpers.classPrivateFieldLooseBase(this,Ve)[Ve].handleChangeTariff(e)}handleUpdateCollabEntityCounter(e){babelHelpers.classPrivateFieldLooseBase(this,xe)[xe].handleUpdateCollabEntityCounter(e)}handleUpdateCollabGuestCount(e){babelHelpers.classPrivateFieldLooseBase(this,xe)[xe].handleUpdateCollabGuestCount(e)}handleApplicationOpenChat(e){babelHelpers.classPrivateFieldLooseBase(this,_e)[_e].handleApplicationOpenChat(e)}handleBotAdd(e){babelHelpers.classPrivateFieldLooseBase(this,Ge)[Ge].handleBotAdd(e)}handleBotUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,Ge)[Ge].handleBotUpdate(e)}}const Ye={[y.RecentType.default]:"recent/setRecent",[y.RecentType.copilot]:"recent/setCopilot",[y.RecentType.openChannel]:"recent/setChannel",[y.RecentType.collab]:"recent/setCollab"};var qe=babelHelpers.classPrivateFieldLooseKey("params");var ze=babelHelpers.classPrivateFieldLooseKey("extra");class Je{constructor(e,s={}){Object.defineProperty(this,qe,{writable:true,value:void 0});Object.defineProperty(this,ze,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,qe)[qe]=e;babelHelpers.classPrivateFieldLooseBase(this,ze)[ze]=s}getChatId(){return babelHelpers.classPrivateFieldLooseBase(this,qe)[qe].chatId}getParentChatId(){var e;return((e=this.getChat())==null?void 0:e.parent_chat_id)||0}getChat(){var e;const s=this.getChatId();return(e=babelHelpers.classPrivateFieldLooseBase(this,qe)[qe].chat)==null?void 0:e[s]}getChatType(){var e;const s=this.getChat();return(e=s==null?void 0:s.type)!=null?e:""}getRecentTypes(){return babelHelpers.classPrivateFieldLooseBase(this,qe)[qe].recentConfig.sections}isLinesChat(){return Boolean(babelHelpers.classPrivateFieldLooseBase(this,qe)[qe].lines)}isCommentChat(){return this.getChatType()===y.ChatType.comment}isChannelChat(){return v.ChannelManager.channelTypes.has(this.getChatType())}isUserInChat(){const e=babelHelpers.classPrivateFieldLooseBase(this,qe)[qe].userInChat[this.getChatId()];if(!e||this.isChannelListEvent()){return true}return e.includes(U.Core.getUserId())}isChannelListEvent(){return this.isChannelChat()&&babelHelpers.classPrivateFieldLooseBase(this,ze)[ze].is_shared_event}needToSkipMessageEvent(){return this.isLinesChat()||this.isCommentChat()||!this.isUserInChat()}getAddActions(){const e=this.getRecentTypes();return e.map((e=>Ye[e]))}}var Qe=babelHelpers.classPrivateFieldLooseKey("params");var Ze=babelHelpers.classPrivateFieldLooseKey("setUsers");var $e=babelHelpers.classPrivateFieldLooseKey("setFiles");var es=babelHelpers.classPrivateFieldLooseKey("setMessageChat");var ss=babelHelpers.classPrivateFieldLooseKey("setMessage");class as{constructor(e){Object.defineProperty(this,ss,{value:rs});Object.defineProperty(this,es,{value:is});Object.defineProperty(this,$e,{value:ls});Object.defineProperty(this,Ze,{value:ts});Object.defineProperty(this,Qe,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe]=e}setLastMessageInfo(){babelHelpers.classPrivateFieldLooseBase(this,es)[es]();babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze]();babelHelpers.classPrivateFieldLooseBase(this,$e)[$e]();babelHelpers.classPrivateFieldLooseBase(this,ss)[ss]()}getDialogId(){return babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe].chat.dialogId}getLastMessageId(){const[e]=babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe].messages;return e.id}}function ts(){const e=new P.UserManager;e.setUsersToModel(babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe].users)}function ls(){U.Core.getStore().dispatch("files/set",babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe].files)}function is(){const e={...babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe].chat,counter:babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe].counter,dialogId:this.getDialogId()};U.Core.getStore().dispatch("chats/set",e)}function rs(){const[e]=babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe].messages;U.Core.getStore().dispatch("messages/store",e)}var os=babelHelpers.classPrivateFieldLooseKey("deleteLastMessage");var ds=babelHelpers.classPrivateFieldLooseKey("updateRecentForMessageDelete");class ns{constructor(){Object.defineProperty(this,ds,{value:hs});Object.defineProperty(this,os,{value:cs})}getModuleId(){return"im"}handleMessage(e,s){this.handleMessageAdd(e,s)}handleMessageChat(e,s){this.handleMessageAdd(e,s)}handleMessageAdd(e,s){const a=new Je(e,s);if(a.needToSkipMessageEvent(e)){return}M.Logger.warn("RecentPullHandler: handleMessageAdd",e);const t={id:e.dialogId,chatId:e.chatId,messageId:e.message.id};const l=U.Core.getStore().getters["recent/get"](e.dialogId);if(l){t.isFakeElement=false;t.isBirthdayPlaceholder=false;t.liked=false}const i=a.getAddActions();i.forEach((e=>{U.Core.getStore().dispatch(e,t)}))}handleMessageDeleteV2(e){babelHelpers.classPrivateFieldLooseBase(this,os)[os](e.dialogId,e.newLastMessage)}handleMessageDeleteComplete(e){babelHelpers.classPrivateFieldLooseBase(this,os)[os](e.dialogId,e.newLastMessage)}handleChatUnread(e){M.Logger.warn("RecentPullHandler: handleChatUnread",e);U.Core.getStore().dispatch("recent/unread",{id:e.dialogId,action:e.active})}handleAddReaction(e){M.Logger.warn("RecentPullHandler: handleAddReaction",e);const s=U.Core.getStore().getters["recent/get"](e.dialogId);if(!s){return}const a=U.Core.getStore().getters["application/isChatOpen"](e.dialogId);if(a){return}const t=U.Core.getStore().getters["recent/getMessage"](e.dialogId);const l=U.Core.getUserId()===e.userId;const i=U.Core.getUserId()===t.authorId;if(l||!i){return}U.Core.getStore().dispatch("recent/like",{id:e.dialogId,messageId:e.actualReactions.reaction.messageId,liked:true})}handleChatPin(e){M.Logger.warn("RecentPullHandler: handleChatPin",e);const s=U.Core.getStore().getters["recent/get"](e.dialogId);if(!s){return}U.Core.getStore().dispatch("recent/pin",{id:e.dialogId,action:e.active})}handleChatHide(e){M.Logger.warn("RecentPullHandler: handleChatHide",e);const s=U.Core.getStore().getters["recent/get"](e.dialogId);if(!s){return}U.Core.getStore().dispatch("recent/delete",{id:e.dialogId})}handleChatUserLeave(e){M.Logger.warn("RecentPullHandler: handleChatUserLeave",e);const s=U.Core.getStore().getters["recent/get"](e.dialogId);if(!s||e.userId!==U.Core.getUserId()){return}U.Core.getStore().dispatch("recent/delete",{id:e.dialogId})}handleUserInvite(e){var s;M.Logger.warn("RecentPullHandler: handleUserInvite",e);const a=b.Utils.text.getUuidV4();U.Core.getStore().dispatch("messages/store",{id:a,date:e.date});U.Core.getStore().dispatch("recent/setRecent",{id:e.user.id,invited:(s=e.invited)!=null?s:false,isFakeElement:true,messageId:a})}handleUserShowInRecent(e){M.Logger.warn("RecentPullHandler: handleUserShowInRecent",e);const{items:s}=e;s.forEach((e=>{const s=b.Utils.text.getUuidV4();U.Core.getStore().dispatch("messages/store",{id:s,date:e.date});U.Core.getStore().dispatch("recent/setRecent",{id:e.user.id,messageId:s})}))}handleRecentUpdate(e){M.Logger.warn("RecentPullHandler: handleRecentUpdate",e);const s=new as(e);s.setLastMessageInfo();const a={id:s.getDialogId(),messageId:s.getLastMessageId(),lastActivityDate:e.lastActivityDate};U.Core.getStore().dispatch("recent/setRecent",a)}}function cs(e,s){const a=Boolean(s);if(a){babelHelpers.classPrivateFieldLooseBase(this,ds)[ds](e,s.id)}}function hs(e,s){if(!s){U.Core.getStore().dispatch("recent/delete",{id:e});return}U.Core.getStore().dispatch("recent/update",{id:e,fields:{messageId:s}})}class gs{constructor(){this.store=U.Core.getStore();this.userManager=new P.UserManager;this.updateCounterDebounced=m.Runtime.debounce(this.updateCounter,1500,this)}getModuleId(){return"im"}getSubscriptionType(){return"server"}handleNotifyAdd(e){if(e.onlyFlash===true){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("notifications/set",e);this.updateCounterDebounced(e.counter)}handleNotifyConfirm(e){this.store.dispatch("notifications/delete",{id:e.id});this.updateCounterDebounced(e.counter)}handleNotifyRead(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:true})}));this.updateCounterDebounced(e.counter)}handleNotifyUnread(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:false})}));this.updateCounterDebounced(e.counter)}handleNotifyReadAll(){void this.store.dispatch("notifications/readAll")}handleNotifyDelete(e){const s=Object.keys(e.id).map((e=>Number.parseInt(e,10)));s.forEach((e=>{this.store.dispatch("notifications/delete",{id:e})}));this.updateCounterDebounced(e.counter)}updateCounter(e){this.store.dispatch("notifications/setCounter",e)}}class ps{constructor(){this.store=U.Core.getStore();this.userManager=new P.UserManager}getModuleId(){return"im"}handleChatUserAdd(e){if(this.getMembersCountFromStore(e.chatId)===0){return}void this.userManager.setUsersToModel(Object.values(e.users));void this.store.dispatch("sidebar/members/set",{chatId:e.chatId,users:e.newUsers})}handleChatUserLeave(e){if(this.getMembersCountFromStore(e.chatId)===0){return}void this.store.dispatch("sidebar/members/delete",{chatId:e.chatId,userId:e.userId})}handleTaskAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("sidebar/tasks/set",{chatId:e.link.chatId,tasks:[e.link]})}handleTaskUpdate(e,s){this.handleTaskAdd(e,s)}handleTaskDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/tasks/delete",{chatId:e.chatId,id:e.linkId})}handleCalendarAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("sidebar/meetings/set",{chatId:e.link.chatId,meetings:[e.link]})}handleCalendarUpdate(e,s){this.handleCalendarAdd(e,s)}handleCalendarDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/meetings/delete",{chatId:e.chatId,id:e.linkId})}handleUrlAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("sidebar/links/set",{chatId:e.link.chatId,links:[e.link]});const s=this.store.getters["sidebar/links/getCounter"](e.link.chatId);void this.store.dispatch("sidebar/links/setCounter",{chatId:e.link.chatId,counter:s+1})}handleUrlDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/links/delete",{chatId:e.chatId,id:e.linkId})}handleMessageFavoriteAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("files/set",e.files);void this.store.dispatch("messages/store",[e.link.message]);void this.store.dispatch("sidebar/favorites/set",{chatId:e.link.chatId,favorites:[e.link]});const s=this.store.getters["sidebar/favorites/getCounter"](e.link.chatId);void this.store.dispatch("sidebar/favorites/setCounter",{chatId:e.link.chatId,counter:s+1})}handleMessageFavoriteDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/favorites/delete",{chatId:e.chatId,id:e.linkId})}handleFileAdd(e){var s;if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("files/set",e.files);const a=(s=e.link.group)!=null?s:y.SidebarDetailBlock.fileUnsorted;void this.store.dispatch("sidebar/files/set",{chatId:e.link.chatId,files:[e.link],group:a})}handleFileDelete(e){var s;const a=m.Type.isNumber(e.chatId)?e.chatId:Number.parseInt(e.chatId,10);if(!this.isSidebarInited(a)){return}const t=(s=e.linkId)!=null?s:e.fileId;void this.store.dispatch("sidebar/files/delete",{chatId:a,id:t})}handleChangeMultidialogSessionsLimit(e){void this.store.dispatch("sidebar/multidialog/setOpenSessionsLimit",e.limit)}handleAddMultidialog(e){const{multidialog:s,count:a}=e;const t=s.isSupport;if(!t){return}void this.store.dispatch("sidebar/multidialog/setChatsCount",a);void this.store.dispatch("sidebar/multidialog/addMultidialogs",[s])}handleReadMessageChat(e){this.deleteUnreadSupportChats(e)}handleReadMessage(e){this.deleteUnreadSupportChats(e)}handleChangeMultidialogStatus(e){const{bot:s,chat:a,multidialog:t}=e;const l=t.isSupport;if(!l){return}if(a){void this.store.dispatch("chats/set",a)}if(s){void this.userManager.setUsersToModel(s)}void this.store.dispatch("sidebar/multidialog/addMultidialogs",[t])}handleMessage(e){this.setUnreadSupportTickets(e.multidialog)}handleChatUnread(e){const{chatId:s,dialogId:a}=e;const t=this.store.getters["sidebar/multidialog/isSupport"](a);const l=this.store.getters["sidebar/multidialog/isInited"];if(t&&l){void this.store.dispatch("sidebar/multidialog/setUnreadChats",[s])}}handleMessageChat(e){this.setFiles(e);this.setUnreadSupportTickets(e.multidialog)}deleteUnreadSupportChats(e){const s=e.counter===0;if(s){void this.store.dispatch("sidebar/multidialog/deleteUnreadChats",e.chatId)}}setUnreadSupportTickets(e){if(!e){return}const s=this.store.getters["sidebar/multidialog/get"](e.chatId);const a=(s==null?void 0:s.status)||e.status;void this.store.dispatch("sidebar/multidialog/addMultidialogs",[{...e,status:a}]);void this.store.dispatch("sidebar/multidialog/setUnreadChats",[e.chatId])}setFiles(e){const{chatId:s,users:a,files:t}=e;if(!this.isSidebarInited(s)||this.areFilesMigrated()){return}void this.userManager.setUsersToModel(Object.values(a));void this.store.dispatch("files/set",Object.values(t));Object.values(t).forEach((e=>{var s;const a=(s=e.group)!=null?s:y.SidebarDetailBlock.fileUnsorted;void this.store.dispatch("sidebar/files/set",{chatId:e.chatId,files:[e],group:a})}))}isSidebarInited(e){return this.store.getters["sidebar/isInited"](e)}areFilesMigrated(){return this.store.state.sidebar.isFilesMigrated}getMembersCountFromStore(e){return this.store.getters["sidebar/members/getSize"](e)}}var bs=babelHelpers.classPrivateFieldLooseKey("shouldShowNotification");var us=babelHelpers.classPrivateFieldLooseKey("shouldShowLinesNotification");var vs=babelHelpers.classPrivateFieldLooseKey("isChatOpened");var Ps=babelHelpers.classPrivateFieldLooseKey("isLinesChatOpened");var Is=babelHelpers.classPrivateFieldLooseKey("isImportantMessage");var fs=babelHelpers.classPrivateFieldLooseKey("shouldShowToUser");var Ls=babelHelpers.classPrivateFieldLooseKey("isUserDnd");var Cs=babelHelpers.classPrivateFieldLooseKey("desktopWillShowNotification");var Hs=babelHelpers.classPrivateFieldLooseKey("flashDesktopIcon");var Fs=babelHelpers.classPrivateFieldLooseKey("playOpenedChatMessageSound");var ms=babelHelpers.classPrivateFieldLooseKey("playMessageSound");var Ms=babelHelpers.classPrivateFieldLooseKey("restoreLastNotificationId");var Bs=babelHelpers.classPrivateFieldLooseKey("updateLastNotificationId");var ys=babelHelpers.classPrivateFieldLooseKey("setCurrentUserStatus");class ws{constructor(){Object.defineProperty(this,ys,{value:Vs});Object.defineProperty(this,Bs,{value:Es});Object.defineProperty(this,Ms,{value:Xs});Object.defineProperty(this,ms,{value:Ks});Object.defineProperty(this,Fs,{value:Ns});Object.defineProperty(this,Hs,{value:js});Object.defineProperty(this,Cs,{value:Ts});Object.defineProperty(this,Ls,{value:ks});Object.defineProperty(this,fs,{value:Rs});Object.defineProperty(this,Is,{value:Ds});Object.defineProperty(this,Ps,{value:As});Object.defineProperty(this,vs,{value:Os});Object.defineProperty(this,us,{value:Ss});Object.defineProperty(this,bs,{value:Us});this.lastNotificationId=0;this.store=U.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,ys)[ys]();babelHelpers.classPrivateFieldLooseBase(this,Ms)[Ms]()}getModuleId(){return"im"}handleMessage(e,s){this.handleMessageAdd(e,s)}handleMessageChat(e,s){this.handleMessageAdd(e,s)}handleMessageAdd(e,s){if(!babelHelpers.classPrivateFieldLooseBase(this,bs)[bs](e,s)){return}if(babelHelpers.classPrivateFieldLooseBase(this,vs)[vs](e.dialogId)){babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs](e);return}babelHelpers.classPrivateFieldLooseBase(this,ms)[ms](e);babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs]();const a=this.store.getters["messages/getById"](e.message.id);const t=this.store.getters["chats/get"](e.dialogId,true);const l=this.store.getters["users/get"](a.authorId);f.MessageNotifierManager.getInstance().showMessage({message:a,dialog:t,user:l,lines:Boolean(e.lines)});babelHelpers.classPrivateFieldLooseBase(this,Bs)[Bs](e.message.id)}handleNotifyAdd(e,s){if(s.server_time_ago>10){M.Logger.warn("NotifierPullHandler: notification arrived to the user 30 seconds after it was actually sent, ignore notification");return}if(e.id<=this.lastNotificationId){M.Logger.warn("NotifierPullHandler: new notification id is smaller than lastNotificationId");return}if(e.onlyFlash===true||babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls]()||babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs]()||C.CallManager.getInstance().hasCurrentCall()){return}if(document.hasFocus()){const e=this.store.getters["application/areNotificationsOpen"];if(e){return}}const a=this.store.getters["notifications/getById"](e.id);const t=this.store.getters["users/get"](e.userId);if(e.silent!=="Y"){F.SoundNotificationManager.getInstance().playOnce(y.SoundType.reminder)}babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs]();f.MessageNotifierManager.getInstance().showNotification(a,t);babelHelpers.classPrivateFieldLooseBase(this,Bs)[Bs](e.id)}}function Us(e,s){var a,t;if(s.server_time_ago>10){M.Logger.warn("NotifierPullHandler: message arrived to the user 30 seconds after it was actually sent, ignore message");return false}if(e.message.id<=this.lastNotificationId){M.Logger.warn("NotifierPullHandler: new message id is smaller than lastNotificationId");return false}if(U.Core.getUserId()===e.message.senderId){return false}if(e.lines&&!babelHelpers.classPrivateFieldLooseBase(this,us)[us](e)){return false}const l=!e.notify||((a=e.message)==null?void 0:(t=a.params)==null?void 0:t.NOTIFY)==="N";if(l||!babelHelpers.classPrivateFieldLooseBase(this,fs)[fs](e)||babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs]()){return false}const i=C.CallManager.getInstance().hasCurrentCall();if(i&&C.CallManager.getInstance().getCurrentCallDialogId()!==e.dialogId.toString()){return false}const r=C.CallManager.getInstance().hasCurrentScreenSharing();if(r){return false}return true}function Ss(e){if(babelHelpers.classPrivateFieldLooseBase(this,Ps)[Ps](e.dialogId)){return false}const s=e.message.senderId;if(s>0&&e.users[s].type!==y.UserType.extranet){return true}const a=this.store.getters["counters/getSpecificLinesCounter"](e.chatId);return a===0}function Os(e){const s=this.store.getters["application/isChatOpen"](e);return Boolean(document.hasFocus()&&s)}function As(e){const s=this.store.getters["application/isLinesChatOpen"](e);return Boolean(document.hasFocus()&&s)}function Ds(e){const{message:s}=e;return s.isImportant||s.importantFor.includes(U.Core.getUserId())}function Rs(e){if(babelHelpers.classPrivateFieldLooseBase(this,Is)[Is](e)){return true}const s=this.store.getters["chats/get"](e.dialogId,true);const a=s.muteList.includes(U.Core.getUserId());return!babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls]()&&!a}function ks(){const e=this.store.getters["application/settings/get"](y.Settings.user.status);return e===y.UserStatus.dnd}function Ts(){const e=L.DesktopManager.isChatWindow();return!e&&L.DesktopManager.getInstance().isDesktopActive()}function js(){if(!L.DesktopManager.isDesktop()){return}I.DesktopApi.flashIcon()}function Ns(e){if(babelHelpers.classPrivateFieldLooseBase(this,Is)[Is](e)){F.SoundNotificationManager.getInstance().forcePlayOnce(y.SoundType.newMessage2);return}F.SoundNotificationManager.getInstance().playOnce(y.SoundType.newMessage2)}function Ks(e){if(babelHelpers.classPrivateFieldLooseBase(this,Is)[Is](e)){F.SoundNotificationManager.getInstance().forcePlayOnce(y.SoundType.newMessage1);return}F.SoundNotificationManager.getInstance().playOnce(y.SoundType.newMessage1)}function Xs(){const e=H.LocalStorageManager.getInstance().get(y.LocalStorageKey.lastNotificationId,0);this.lastNotificationId=Number.parseInt(e,10)}function Es(e){const s=2e3;this.lastNotificationId=e;clearTimeout(this.writeToStorageTimeout);this.writeToStorageTimeout=setTimeout((()=>{H.LocalStorageManager.getInstance().set(y.LocalStorageKey.lastNotificationId,e)}),s)}function Vs(){var e;const s=U.Core.getApplicationData();if(!((e=s.settings)!=null&&e.status)){return}U.Core.getStore().dispatch("application/settings/set",{[y.Settings.user.status]:s.settings.status})}class _s{constructor(){this.store=U.Core.getStore()}getModuleId(){return"online"}getSubscriptionType(){return"online"}handleUserStatus(e){const s=U.Core.getUserId();if(m.Type.isPlainObject(e.users[s])){const{status:a}=e.users[s];this.store.dispatch("application/settings/set",{status:a})}Object.values(e.users).forEach((e=>{this.store.dispatch("users/update",{id:e.id,fields:{lastActivityDate:e.last_activity_date}})}))}}var xs=babelHelpers.classPrivateFieldLooseKey("handleCounters");var Gs=babelHelpers.classPrivateFieldLooseKey("getNewCounter");var Ws=babelHelpers.classPrivateFieldLooseKey("updateCommentCounter");class Ys{constructor(){Object.defineProperty(this,Ws,{value:Js});Object.defineProperty(this,Gs,{value:zs});Object.defineProperty(this,xs,{value:qs});this.store=U.Core.getStore()}getModuleId(){return"im"}handleMessage(e,s){this.handleMessageAdd(e,s)}handleMessageChat(e,s){this.handleMessageAdd(e,s)}handleMessageAdd(e,s){const a=new B.NewMessageManager(e,s);if(!a.isCommentChat()){return}babelHelpers.classPrivateFieldLooseBase(this,Ws)[Ws]({channelChatId:a.getParentChatId(),commentChatId:a.getChatId(),commentCounter:e.counter})}handleMessageDeleteComplete(e){babelHelpers.classPrivateFieldLooseBase(this,xs)[xs](e)}handleReadMessage(e){babelHelpers.classPrivateFieldLooseBase(this,xs)[xs](e)}handleReadMessageChat(e){babelHelpers.classPrivateFieldLooseBase(this,xs)[xs](e)}handleUnreadMessage(e){babelHelpers.classPrivateFieldLooseBase(this,xs)[xs](e)}handleUnreadMessageChat(e){babelHelpers.classPrivateFieldLooseBase(this,xs)[xs](e)}handleChatUnread(e){babelHelpers.classPrivateFieldLooseBase(this,xs)[xs]({...e,unread:e.active})}handleChatMuteNotify(e){babelHelpers.classPrivateFieldLooseBase(this,xs)[xs](e)}}function qs(e){const{chatId:s,dialogId:a,counter:t,counterType:l=y.CounterType.chat,parentChatId:i=0}=e;if(l===y.CounterType.openline){return}M.Logger.warn("CounterPullHandler: handleCounters:",e);if(l===y.CounterType.comment){babelHelpers.classPrivateFieldLooseBase(this,Ws)[Ws]({channelChatId:i,commentChatId:s,commentCounter:t});return}const r=U.Core.getStore().getters["recent/get"](a);if(r){return}const o=babelHelpers.classPrivateFieldLooseBase(this,Gs)[Gs](e);if(l===y.CounterType.collab){U.Core.getStore().dispatch("counters/setUnloadedCollabCounters",{[s]:o})}U.Core.getStore().dispatch("counters/setUnloadedChatCounters",{[s]:o})}function zs(e){const{counter:s,muted:a,unread:t}=e;let l=0;if(a){l=0}else if(t&&s===0){l=1}else if(t&&s>0){l=s}else if(!t){l=s}return l}function Js(e){const{channelChatId:s,commentChatId:a,commentCounter:t}=e;if(m.Type.isUndefined(t)){return}const l={[s]:{[a]:t}};U.Core.getStore().dispatch("counters/setCommentCounters",l)}class Qs{getModuleId(){return"im"}handlePromotionUpdated(e){w.PromoManager.getInstance().onPromotionUpdated(e)}}class Zs{constructor(){this.store=U.Core.getStore()}getModuleId(){return"im"}handleAddAnchor(e){this.store.dispatch("messages/anchors/addAnchor",{anchor:e})}handleDeleteAnchor(e){this.store.dispatch("messages/anchors/removeAnchor",{anchor:e})}handleDeleteAllAnchors(){this.store.dispatch("messages/anchors/removeAllAnchors")}handleDeleteChatAnchors(e){this.store.dispatch("messages/anchors/removeChatAnchors",{chatId:e.chatId,userId:e.userId})}}e.BasePullHandler=We;e.RecentPullHandler=ns;e.NotificationPullHandler=gs;e.SidebarPullHandler=ps;e.NotifierPullHandler=ws;e.OnlinePullHandler=_s;e.CounterPullHandler=Ys;e.PromotionPullHandler=Qs;e.AnchorPullHandler=Zs;e.NewMessageManager=Je})(this.BX.Messenger.v2.Provider.Pull=this.BX.Messenger.v2.Provider.Pull||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Vue3.Vuex,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Model,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Pull,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Application);
//# sourceMappingURL=registry.bundle.map.js